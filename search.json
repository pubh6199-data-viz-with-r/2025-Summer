[
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Instructor\nTA\nTA\nCourse\n\n\n\n\n Xindi (Cindy) Hu, ScD\n Silas Horn\n Sayam Palrecha\n T/Th 3:10PM - 5:10PM ET\n\n\n Milken #423 or Zoom\n Milken 4th floor or Zoom\n Zoom\n Milken 400A\n\n\n +1 (202) 994-7766\n NA\n NA\n May. 20 - June 27, 2025\n\n\n Email Prof. Hu\n Email Silas\n Email Sayam\n Slack\n\n\n By appointment\n W 2-3PM ET\n M 4-5PM ET\n Class mascot\n\n\n\n\n\n\nThis course will equip students with the skills and knowledge to create impactful and responsible data visualizations using the R programming language. At the end of this class, students will gain proficiency in both fundamental (e.g. bar chart, bubble chart, choropleth maps) as well as advanced graph types (e.g. Sankey diagram, heatmap, parallel coordinates plot, faceted graphs) and know how to create them using R.\n\n\n\nThis course is designed for students with proficiency in using the R programming language and working in the RStudio integrated development environment. Students can fulfill this prerequisite by having successfully completed courses such as PUBH 6131, 6144, 6282, 6851, 6854 or 6867. If you are unsure, contact the instructor to discuss your eligibility.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#course-description",
    "href": "syllabus.html#course-description",
    "title": "Syllabus",
    "section": "",
    "text": "This course will equip students with the skills and knowledge to create impactful and responsible data visualizations using the R programming language. At the end of this class, students will gain proficiency in both fundamental (e.g. bar chart, bubble chart, choropleth maps) as well as advanced graph types (e.g. Sankey diagram, heatmap, parallel coordinates plot, faceted graphs) and know how to create them using R.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#prerequisites",
    "href": "syllabus.html#prerequisites",
    "title": "Syllabus",
    "section": "",
    "text": "This course is designed for students with proficiency in using the R programming language and working in the RStudio integrated development environment. Students can fulfill this prerequisite by having successfully completed courses such as PUBH 6131, 6144, 6282, 6851, 6854 or 6867. If you are unsure, contact the instructor to discuss your eligibility.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#software",
    "href": "syllabus.html#software",
    "title": "Syllabus",
    "section": "Software",
    "text": "Software\nGo to the Course Software page for detailed instructions on how to install the software we’ll be using. Here’s a quick list:\n\nR version 4.4.2 or newer. Visit cloud.r-project.org to download for your operating system.\nRStudio version 2024.09.1 or newer. Visit rstudio.com/products/rstudio/. Download the free (“Open Source Edition”) Desktop version for your operating system.\nWe’ll be using Slack for most communication.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#texts",
    "href": "syllabus.html#texts",
    "title": "Syllabus",
    "section": "Texts",
    "text": "Texts\nReadings should be completed before coming to class! Most of which will come from these four books, which are mostly available free online. Occasionally we will have reading assignment from articles and books. Those will be posted on Blackboard (copyright permitting).\n\nHadley Wickham, Mine Çetinkaya-Rundel, and Garrett Grolemund. “R for Data Science (2e)” [free online]\nHadley Wickham, Danielle Navarro, and Thomas Lin Pedersen. “ggplot2: Elegant Graphics for Data Analysis (3e)” [free online]\nHadley Wickham. “Mastering Shiny” [free online]\nRobin Lovelace, Jakub Nowosad, and Janne Muenchow. “Geocomputation with R” [free online]",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#participation-attendance",
    "href": "syllabus.html#participation-attendance",
    "title": "Syllabus",
    "section": "Participation & Attendance",
    "text": "Participation & Attendance\n\nAttending class in person is mandatory. There will be an end-of-class survey at the end of each class.\nAttending lab in person is mandatory. Students are encouraged to preview the R markdown lab notebooks before the lab session, but it is not required they complete them before the lab session. Lab notebooks are due the following Monday. Completion of R markdown notebooks will count towards final grades.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#end-of-class-survey",
    "href": "syllabus.html#end-of-class-survey",
    "title": "Syllabus",
    "section": "End-of-class survey",
    "text": "End-of-class survey\nEnd-of-class survey will be available at the last 10 minutes of each class.\nThey are short (10 minutes) and are designed to test you paid attention in class and to demonstrate where additional study is needed.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#homework",
    "href": "syllabus.html#homework",
    "title": "Syllabus",
    "section": "Homework",
    "text": "Homework\nStudents will be responsible for two types of assignments throughout the semester:\n\nWeekly homework: Weekly homework will provide an opportunity to practice visualization theory and skills introduced in class. Homework will be a mix of programming, design, and finishing the R markdown notebook.\nWeekly lab: Completion of R markdown lab notebooks will count towards final grades.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#final-project",
    "href": "syllabus.html#final-project",
    "title": "Syllabus",
    "section": "Final Project",
    "text": "Final Project\nThroughout the semester, students will work in teams of 2-3 students towards a final project of data visualizations to convey findings around a topic of their choice. Instructor can help point students to datasets they can use for the final project. All members of a group are required to contribute to at least one graph, present during the last class, and complete a peer evaluation.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#category-breakdown",
    "href": "syllabus.html#category-breakdown",
    "title": "Syllabus",
    "section": "Category Breakdown",
    "text": "Category Breakdown\nFinal grades will be calculated as follows:\n\n\n\n\nItem\nWeight\nNotes\n\n\n\n\nParticipation / Attendance\n10%\nInclude attendance, contribution to in-class activities, completion of end-of-class surveys\n\n\nHomework assignment\n35 %\nWeekly assignment\n\n\nFinished lab notebook\n15 %\nWeekly lab notebook\n\n\nFinal Project: Prototype V1\n7 %\nDue June 24th\n\n\nFinal Project: Data visualization product\n18 %\nDue June 26th\n\n\nFinal Project: Presentation\n10 %\nDue June 26th\n\n\nFinal Project: Peer evaluation\n5 %\nDue June 26th",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#grading-scale",
    "href": "syllabus.html#grading-scale",
    "title": "Syllabus",
    "section": "Grading Scale",
    "text": "Grading Scale\n\n\n\n\nGrade\nRange\nGrade\nRange\n\n\n\n\nA\n93 - 100%\nC\n73 - 76.99%\n\n\nA-\n90 - 92.99%\nC-\n70 - 72.99%\n\n\nB+\n87 - 89.99%\nD+\n67 - 69.99%\n\n\nB\n83 - 86.99%\nD\n63 - 66.99%\n\n\nB-\n80 - 82.99%\nD-\n60 - 62.99%\n\n\nC+\n77 - 79.99%\nF\n&lt; 59.99%\n\n\n\n\nThe course instructors may choose to change the scales at their discretion. You are guaranteed that your letter grade will never become worse as a result of changing scales.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#rounding",
    "href": "syllabus.html#rounding",
    "title": "Syllabus",
    "section": "Rounding",
    "text": "Rounding\nI do not round final grades. Rather, I grade generously throughout the semester. For example, if you give a homework your best shot and completely fail it, you will likely get a 50% instead of a 0%. The 50% is for trying (if you simply don’t do it, you’ll get a 0%). As a result, I will not modify or round your final score, even if you’re very close to a different letter grade (e.g., a 93.98 is an “A-” and will not be rounded up to an “A”).",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#slack",
    "href": "syllabus.html#slack",
    "title": "Syllabus",
    "section": "Slack",
    "text": "Slack\nAll course communication will be managed through Slack. A link to sign up for the course slack page can be found on the one (and only) announcement on Blackboard.\nYou can use Slack to:\n\nAsk general questions.\nAsk for help with an assignment.\nSend direct, private messages to each other or the instructors (just like email…but better!)\n\n\nAsking for help on Slack: You can post questions on slack and receive quick responses. This also enables other students to see answers to common questions. Be specific - if your code has an error you don’t understand, include the code and the error message in your question.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#office-hours",
    "href": "syllabus.html#office-hours",
    "title": "Syllabus",
    "section": "Office Hours",
    "text": "Office Hours\nOur TAs will hold regular office hour each Monday 4-5pm (Sayam, Zoom) and each Wednesday 2-3pm (Silas, Milken 4th floor). Please don’t make your TA sit and do emails for two hours - come by and ask for help!\nIf the office hours don’t work with your schedule, you can always schedule a zoom call with me using this link. I’m available most days of the week.",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "syllabus.html#library-services",
    "href": "syllabus.html#library-services",
    "title": "Syllabus",
    "section": "Library Services",
    "text": "Library Services\nWhile the University Library is not a stand in for TAs, you can schedule a consultation for general help with Coding, Programming, Data, Statistical, and GIS. See more at academiccommons.gwu.edu/writing-research-help",
    "crumbs": [
      "Syllabus"
    ]
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "All assignments are due by 11:59pm on the due date.\n\n\n\n\n\nWeek\nDate\nClass\nAssignment\nLab\n\n\n\n\n1\n5/20/25\nCourse Introduction\ncourse objectives; evaluation criteria; ggplot2\nHW 1\nDue: 2025-05-26\n\n\n\n1\n5/22/25\nData Wrangling\ncode version control; clean data; tidyverse\n\nLab 1\nDue: 2025-05-26\n\n\n2\n5/27/25\nVisual Vocabulary\ngraphical integrity; choose chart type; design considerations\nHW 2\nDue: 2025-06-02\n\n\n\n2\n5/29/25\nFundamental Chart Types\nbasic chart; trend over time; distribution; relationships\n\nLab 2\nDue: 2025-06-02\n\n\n3\n6/3/25\nCase Study\npractical real world applications\nHW 3\nDue: 2025-06-09\n\n\n\n3\n6/5/25\nSpecialized Chart Types\nfaceted plot; sankey diagram, parallel coordinates, dos and donts\n\nLab 3\nDue: 2025-06-09\n\n\n4\n6/10/25\nIntrodcution to R Shiny\nR shiny; interactive data visualization\nHW 4\nDue: 2025-06-16\n\n\n\n4\n6/12/25\nFinal Project - Plan\npublic data repository; form teams; sketch\n\nLab 4\nDue: 2025-06-16\n\n\n5\n6/17/25\nMaps\nchoropleth map; point map; heat map; design decisions\nHW 5\nDue: 2025-06-23\n\n\n\n5\n6/19/25 [No Class]\nRecreate Visualization from Public Source\nresearch reproducibility; tidycensus\n\nLab 5\nDue: 2025-06-23\n\n\n6\n6/24/25\nFinal Project - Prototype\n1-on-1 feedback; progress update\n\n\n\n\n6\n6/26/25\nFinal Project - Present\nfinal project presentation; peer feedback\nHW 6\nDue: 2025-06-26",
    "crumbs": [
      "Schedule"
    ]
  },
  {
    "objectID": "lab/5-lab5.html",
    "href": "lab/5-lab5.html",
    "title": "Lab 5",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 5-lab5.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/5-lab5.html#before-your-start-the-lab-notebook",
    "href": "lab/5-lab5.html#before-your-start-the-lab-notebook",
    "title": "Lab 5",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 5-lab5.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/5-lab5.html#lab-5-mapping-water-insecurity-with-tidycensus-and-ggplot2",
    "href": "lab/5-lab5.html#lab-5-mapping-water-insecurity-with-tidycensus-and-ggplot2",
    "title": "Lab 5",
    "section": "Lab 5: Mapping Water Insecurity with tidycensus and ggplot2",
    "text": "Lab 5: Mapping Water Insecurity with tidycensus and ggplot2\nIn this lab, you will recreate a public map visualization of plumbing access across the U.S. using data from the American Community Survey (ACS) via the tidycensus package. You will:\n\nUse get_acs() to retrieve county-level data\nClean and reshape the data\nVisualize the spatial distribution of plumbing access using ggplot2\nCreate a choropleth map\nComplete a short design challenge to create your own variation of the map\n\n\nReference Tutorial:\nMapping water insecurities in R with tidycensus\n\n\nSuggested Reading:\n\nR for Data Science (2e), Chapter 11 – Visualize"
  },
  {
    "objectID": "lab/5-lab5.html#load-libraries-set-up",
    "href": "lab/5-lab5.html#load-libraries-set-up",
    "title": "Lab 5",
    "section": "1 Load Libraries & Set Up",
    "text": "1 Load Libraries & Set Up\n\n\nCode\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(sf)\nlibrary(ggthemes)\nlibrary(viridis)\n\n# In .Renviron\n# CENSUS_API_KEY=\"your census\"\n\ncensus_api_key(Sys.getenv(\"CENSUS_API_KEY\"), install = TRUE, overwrite = TRUE)\n\n\n#&gt; [1] \"\""
  },
  {
    "objectID": "lab/5-lab5.html#acquire-the-data",
    "href": "lab/5-lab5.html#acquire-the-data",
    "title": "Lab 5",
    "section": "2 Acquire the Data",
    "text": "2 Acquire the Data\nUse get_acs() to retrieve county-level data for the Western states in 2022 and 2023:\n\nTotal population: B01003_001\nHouseholds without plumbing: B25016_003\n\n\n\nCode\n# your code here, or use the code from tutorial"
  },
  {
    "objectID": "lab/5-lab5.html#pivot-the-data-wider-and-calculate-the-percent-of-people-without-plumbing",
    "href": "lab/5-lab5.html#pivot-the-data-wider-and-calculate-the-percent-of-people-without-plumbing",
    "title": "Lab 5",
    "section": "3 Pivot the data wider and calculate the percent of people without plumbing",
    "text": "3 Pivot the data wider and calculate the percent of people without plumbing\nPivot the data wider so that each row contains both population and plumbing information. Check your result using glimpse() or summary().\n\n\nCode\n# your code here, or use the code from tutorial"
  },
  {
    "objectID": "lab/5-lab5.html#create-a-choropleth-map-showing-without-plumbing.",
    "href": "lab/5-lab5.html#create-a-choropleth-map-showing-without-plumbing.",
    "title": "Lab 5",
    "section": "4 Create a choropleth map showing % without plumbing.",
    "text": "4 Create a choropleth map showing % without plumbing.\nIn this tutorial, they use geom_sf() to make choropleth map, but you can also use tmap() like we covered in the lecture if you prefer.\n\n\nCode\n# your code here, or use the code from tutorial\n\n\nWhat does this preview map show? Are there clear spatial patterns?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "lab/5-lab5.html#refined-choropleth-map",
    "href": "lab/5-lab5.html#refined-choropleth-map",
    "title": "Lab 5",
    "section": "5 Refined Choropleth Map",
    "text": "5 Refined Choropleth Map\nRecreate the polished map from the USGS tutorial. Consider:\n\nRestricting to western U.S. states (AK, AZ, CA, CO, HI, ID, MT, NM, NV, OR, UT, WA, WY)\nAdjusting the color scale\nAdding meaningful titles and captions\n\n\n\nCode\n# your code here, or use the code from tutorial\n\n\nWhat refinements did you add in step 5 compared to step 4? How do these changes improve the visualization?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "lab/5-lab5.html#create-your-own-map",
    "href": "lab/5-lab5.html#create-your-own-map",
    "title": "Lab 5",
    "section": "6 Create Your Own Map",
    "text": "6 Create Your Own Map\nUse the same dataset and design a different map. Possibilities include:\n\nPlotting absolute number of people without plumbing\nFaceting by region or state or urban/rural classification\nChanging map projection or styling\n\n\n\nCode\n# your code here\n\n\n\n\n\n\n\n\nYour Interpretation\n\n\n\nexplain what your new visualization shows."
  },
  {
    "objectID": "lab/5-lab5.html#save-and-push-your-work",
    "href": "lab/5-lab5.html#save-and-push-your-work",
    "title": "Lab 5",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub.\n\n\nCode\ngit add 5-lab5.qmd 5-lab5.html\ngit commit -m \"Final submission for Lab5\"\ngit push"
  },
  {
    "objectID": "lab/3-lab3.html",
    "href": "lab/3-lab3.html",
    "title": "Lab 3",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 1-lab1.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/3-lab3.html#before-your-start-the-lab-notebook",
    "href": "lab/3-lab3.html#before-your-start-the-lab-notebook",
    "title": "Lab 3",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 1-lab1.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/3-lab3.html#overview-of-lab3",
    "href": "lab/3-lab3.html#overview-of-lab3",
    "title": "Lab 3",
    "section": "Overview of Lab3",
    "text": "Overview of Lab3\nThere are two parts of this lab notebook. We will be using the same example datasets covered in class: forest and adult. In first part, we will practice faceting, which splits a plot into subplots that each display a subset of the data. In the second part, we will practice chart types that are more advanced such as radar chart, sankey diagrams, and parallel coordinates plot.\nSkills practiced:\n\nLoad Required Packages and Datasets\n\n\nCode\nlibrary(tidyverse)\n\nforest &lt;- read_csv(\"https://archive.ics.uci.edu/ml/machine-learning-databases/forest-fires/forestfires.csv\") %&gt;%\n  mutate(\n    month = tolower(month),\n    day = tolower(day),\n    season = case_when(\n      month %in% c(\"dec\", \"jan\", \"feb\") ~ \"Winter\",\n      month %in% c(\"mar\", \"apr\", \"may\") ~ \"Spring\",\n      month %in% c(\"jun\", \"jul\", \"aug\") ~ \"Summer\",\n      month %in% c(\"sep\", \"oct\", \"nov\") ~ \"Fall\",\n      TRUE ~ \"Unknown\"\n    ),\n    RH_level = if_else(RH &gt;= median(RH, na.rm = TRUE), \"High RH\", \"Low RH\"),\n    season = factor(season, levels = c(\"Spring\", \"Summer\", \"Fall\", \"Winter\")),\n    RH_level = factor(RH_level, levels = c(\"Low RH\", \"High RH\"))\n  )\n\nglimpse(forest)\n\n\n#&gt; Rows: 517\n#&gt; Columns: 15\n#&gt; $ X        &lt;dbl&gt; 7, 7, 7, 8, 8, 8, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 8, 6, 6, 6…\n#&gt; $ Y        &lt;dbl&gt; 5, 4, 4, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4…\n#&gt; $ month    &lt;chr&gt; \"mar\", \"oct\", \"oct\", \"mar\", \"mar\", \"aug\", \"aug\", \"aug\", \"sep\"…\n#&gt; $ day      &lt;chr&gt; \"fri\", \"tue\", \"sat\", \"fri\", \"sun\", \"sun\", \"mon\", \"mon\", \"tue\"…\n#&gt; $ FFMC     &lt;dbl&gt; 86.2, 90.6, 90.6, 91.7, 89.3, 92.3, 92.3, 91.5, 91.0, 92.5, 9…\n#&gt; $ DMC      &lt;dbl&gt; 26.2, 35.4, 43.7, 33.3, 51.3, 85.3, 88.9, 145.4, 129.5, 88.0,…\n#&gt; $ DC       &lt;dbl&gt; 94.3, 669.1, 686.9, 77.5, 102.2, 488.0, 495.6, 608.2, 692.6, …\n#&gt; $ ISI      &lt;dbl&gt; 5.1, 6.7, 6.7, 9.0, 9.6, 14.7, 8.5, 10.7, 7.0, 7.1, 7.1, 22.6…\n#&gt; $ temp     &lt;dbl&gt; 8.2, 18.0, 14.6, 8.3, 11.4, 22.2, 24.1, 8.0, 13.1, 22.8, 17.8…\n#&gt; $ RH       &lt;dbl&gt; 51, 33, 33, 97, 99, 29, 27, 86, 63, 40, 51, 38, 72, 42, 21, 4…\n#&gt; $ wind     &lt;dbl&gt; 6.7, 0.9, 1.3, 4.0, 1.8, 5.4, 3.1, 2.2, 5.4, 4.0, 7.2, 4.0, 6…\n#&gt; $ rain     &lt;dbl&gt; 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0…\n#&gt; $ area     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#&gt; $ season   &lt;fct&gt; Spring, Fall, Fall, Spring, Spring, Summer, Summer, Summer, F…\n#&gt; $ RH_level &lt;fct&gt; High RH, Low RH, Low RH, High RH, High RH, Low RH, Low RH, Hi…\n\n\nCode\nadult &lt;- read_csv(\"https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data\",\n                  col_names = c(\"age\", \"workclass\", \"fnlwgt\", \"education\", \"education_num\",\n                                \"marital_status\", \"occupation\", \"relationship\", \"race\", \"sex\",\n                                \"capital_gain\", \"capital_loss\", \"hours_per_week\", \"native_country\", \"income\"))\nglimpse(adult)\n\n\n#&gt; Rows: 32,561\n#&gt; Columns: 15\n#&gt; $ age            &lt;dbl&gt; 39, 50, 38, 53, 28, 37, 49, 52, 31, 42, 37, 30, 23, 32,…\n#&gt; $ workclass      &lt;chr&gt; \"State-gov\", \"Self-emp-not-inc\", \"Private\", \"Private\", …\n#&gt; $ fnlwgt         &lt;dbl&gt; 77516, 83311, 215646, 234721, 338409, 284582, 160187, 2…\n#&gt; $ education      &lt;chr&gt; \"Bachelors\", \"Bachelors\", \"HS-grad\", \"11th\", \"Bachelors…\n#&gt; $ education_num  &lt;dbl&gt; 13, 13, 9, 7, 13, 14, 5, 9, 14, 13, 10, 13, 13, 12, 11,…\n#&gt; $ marital_status &lt;chr&gt; \"Never-married\", \"Married-civ-spouse\", \"Divorced\", \"Mar…\n#&gt; $ occupation     &lt;chr&gt; \"Adm-clerical\", \"Exec-managerial\", \"Handlers-cleaners\",…\n#&gt; $ relationship   &lt;chr&gt; \"Not-in-family\", \"Husband\", \"Not-in-family\", \"Husband\",…\n#&gt; $ race           &lt;chr&gt; \"White\", \"White\", \"White\", \"Black\", \"Black\", \"White\", \"…\n#&gt; $ sex            &lt;chr&gt; \"Male\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"Fe…\n#&gt; $ capital_gain   &lt;dbl&gt; 2174, 0, 0, 0, 0, 0, 0, 0, 14084, 5178, 0, 0, 0, 0, 0, …\n#&gt; $ capital_loss   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n#&gt; $ hours_per_week &lt;dbl&gt; 40, 13, 40, 40, 40, 40, 16, 45, 50, 40, 80, 40, 30, 50,…\n#&gt; $ native_country &lt;chr&gt; \"United-States\", \"United-States\", \"United-States\", \"Uni…\n#&gt; $ income         &lt;chr&gt; \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"…"
  },
  {
    "objectID": "lab/3-lab3.html#part-1-plot-faceting",
    "href": "lab/3-lab3.html#part-1-plot-faceting",
    "title": "Lab 3",
    "section": "Part 1: Plot faceting",
    "text": "Part 1: Plot faceting\n\n1.1. Faceting on a continuous variable\n\n\nCode\n#|echo: TRUE\n#|eval: FALSE\n\nggplot(forest) +\n  geom_point(aes(x = temp, y = wind)) +\n  facet_wrap(~ area)\n\n\n\n\n\n\n\n\n\n✏️ Q: What do you observe in this plot? How do you fix this?\n\n\nCode\n# Your code here\n\n\n\n\n\n1.2. What does . do?\n\n\nCode\n#|echo: TRUE\n#|eval: FALSE\n\nggplot(forest) +\n  geom_point(aes(x = temp, y = wind)) +\n  facet_grid(season ~ .)\n\n\n\n\n\n\n\n\n\nCode\nggplot(forest) +\n  geom_point(aes(x = temp, y = wind)) +\n  facet_grid(. ~ RH_level)\n\n\n\n\n\n\n\n\n\n✏️ Q: Without running the code, guess what plots does the code above make? Then change eval: FALSE to eval: TRUE, run the code chunk and look at the output. What does . do?\n\n\n\n1.3. Practice with nrow, ncol, and scales (Using Histograms)\nHow does the distribution of daily temperatures vary by season, and what layout best supports visual comparison?\nCreate a faceted histogram of temperature (temp) by season using facet_wrap(). Try different combinations of nrow and ncol to test how layout affects interpretability. Also experiment with the scales argument. Which combination best supports answering the research question? How would your layout choice change if you had 12 months instead of 4 seasons?\n\n\nCode\n# Your code here\n\n\n✏️ Q: Which layout (rows vs columns) makes it easiest to compare shapes of the distributions?"
  },
  {
    "objectID": "lab/3-lab3.html#part-2-advanced-chart-types",
    "href": "lab/3-lab3.html#part-2-advanced-chart-types",
    "title": "Lab 3",
    "section": "Part 2: Advanced chart types",
    "text": "Part 2: Advanced chart types\n\n2.1. Radar Chart with adult Dataset\nResearch Question:\n\nHow do income groups differ in their numeric profiles (e.g., education, hours worked, capital gains)?\n\nYour Tasks:\n\nGroup the data by income and summarize variables like education_num, hours_per_week, capital_gain, capital_loss.\nNormalize all variables.\nUse {ggradar} to plot.\nOptional: Create radar charts for subgroups (e.g., income × sex).\n\n\n\nCode\n# Your code here\n\n\n✏️ Summarize your findings based on the radar chart you created\n\n\n2.2. Sankey Diagram with forest Dataset\nResearch Question:\n\nHow do seasonal and weather factors flow into different fire size categories?\n\nYour Tasks:\n\nCreate new categorical variables:\n\nseason from month\nRH_level as high/low relative humidity\n\nCollapse area_group into 3 fire size bins.\nBuild a 3-axis Sankey: season → RH_level → area_group\n\n\n\nCode\n# Your code here\n\n\n✏️ What seasonal transitions lead to larger fires?\n\n\n2.3. Parallel Coordinates Plot\nResearch Question:\n\nCan we identify fire weather patterns that differ across fire sizes?\n\nYour Tasks:\n\nSelect variables: temp, wind, RH, rain, FFMC, DMC\nNormalize, color lines by area_group\nUse ggparcoord() to examine whether patterns differ by fire size\n\n\n\nCode\n# Your code here\n\n\n✏️ How do weather patterns differ across fire sizes?"
  },
  {
    "objectID": "lab/3-lab3.html#save-and-push-your-work",
    "href": "lab/3-lab3.html#save-and-push-your-work",
    "title": "Lab 3",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub.\n\n\nCode\ngit add 3-lab3.qmd 3-lab3.html\ngit commit -m \"Complete Lab 3\"\ngit push"
  },
  {
    "objectID": "lab/1-lab1.html",
    "href": "lab/1-lab1.html",
    "title": "Lab 1",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 1-lab1.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/1-lab1.html#before-your-start-the-lab-notebook",
    "href": "lab/1-lab1.html#before-your-start-the-lab-notebook",
    "title": "Lab 1",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 1-lab1.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/1-lab1.html#overview-of-lab1",
    "href": "lab/1-lab1.html#overview-of-lab1",
    "title": "Lab 1",
    "section": "Overview of Lab1",
    "text": "Overview of Lab1\nThere are two parts of this lab notebook. In first part, we will practice data transformation using the built-in dataset from the {nycflights13} package. In the second part, we will practice data tidying using both a synthetic data and the built-in dataset from the {gapminder} package.\nSkills practiced:\n\nUse key dplyr verbs to manipulate and summarize data\nUse pivot_longer() to tidy untidy data\nApply these skills in the context of climate and public health data\n\n\nLoad Required Packages\n\nlibrary(tidyverse)\nlibrary(nycflights13)\nlibrary(gapminder)\ndata(flights)\n?flights\ndata(gapminder)\n?gapminder"
  },
  {
    "objectID": "lab/1-lab1.html#part-1-data-transformation-with-dplyr",
    "href": "lab/1-lab1.html#part-1-data-transformation-with-dplyr",
    "title": "Lab 1",
    "section": "Part 1: Data Transformation with dplyr",
    "text": "Part 1: Data Transformation with dplyr\n\nExample Walkthrough\nLet’s explore one example for each type of dplyr operation — row, column, and group — using the flights dataset.\n\nRow Operations\nWhat flights are on January 1st?\n\n# filter(): Flights on January 1st\nflights %&gt;% \n  filter(month == 1, day == 1)\n\n#&gt; # A tibble: 842 × 19\n#&gt;     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n#&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n#&gt;  1  2013     1     1      517            515         2      830            819\n#&gt;  2  2013     1     1      533            529         4      850            830\n#&gt;  3  2013     1     1      542            540         2      923            850\n#&gt;  4  2013     1     1      544            545        -1     1004           1022\n#&gt;  5  2013     1     1      554            600        -6      812            837\n#&gt;  6  2013     1     1      554            558        -4      740            728\n#&gt;  7  2013     1     1      555            600        -5      913            854\n#&gt;  8  2013     1     1      557            600        -3      709            723\n#&gt;  9  2013     1     1      557            600        -3      838            846\n#&gt; 10  2013     1     1      558            600        -2      753            745\n#&gt; # ℹ 832 more rows\n#&gt; # ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#&gt; #   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#&gt; #   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nWhich flights have the worst departure delay?\n\n# arrange(): Flights ordered by descending departure delay\nflights %&gt;% \n  arrange(desc(dep_delay))\n\n#&gt; # A tibble: 336,776 × 19\n#&gt;     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n#&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n#&gt;  1  2013     1     9      641            900      1301     1242           1530\n#&gt;  2  2013     6    15     1432           1935      1137     1607           2120\n#&gt;  3  2013     1    10     1121           1635      1126     1239           1810\n#&gt;  4  2013     9    20     1139           1845      1014     1457           2210\n#&gt;  5  2013     7    22      845           1600      1005     1044           1815\n#&gt;  6  2013     4    10     1100           1900       960     1342           2211\n#&gt;  7  2013     3    17     2321            810       911      135           1020\n#&gt;  8  2013     6    27      959           1900       899     1236           2226\n#&gt;  9  2013     7    22     2257            759       898      121           1026\n#&gt; 10  2013    12     5      756           1700       896     1058           2020\n#&gt; # ℹ 336,766 more rows\n#&gt; # ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#&gt; #   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#&gt; #   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nWhere do flights between NYC (i.e. JFK, LGA or EWR) take you?\n\n# distinct(): Unique origin-destination pairs\nflights %&gt;% \n  select(origin, dest) %&gt;% \n  distinct()\n\n#&gt; # A tibble: 224 × 2\n#&gt;    origin dest \n#&gt;    &lt;chr&gt;  &lt;chr&gt;\n#&gt;  1 EWR    IAH  \n#&gt;  2 LGA    IAH  \n#&gt;  3 JFK    MIA  \n#&gt;  4 JFK    BQN  \n#&gt;  5 LGA    ATL  \n#&gt;  6 EWR    ORD  \n#&gt;  7 EWR    FLL  \n#&gt;  8 LGA    IAD  \n#&gt;  9 JFK    MCO  \n#&gt; 10 LGA    ORD  \n#&gt; # ℹ 214 more rows\n\n\n\n\nColumn Operations\nOnly keep relevant columns.\n\n# select(): Keep only flight number and delays\nflights %&gt;% \n  select(flight, arr_delay, dep_delay)\n\n#&gt; # A tibble: 336,776 × 3\n#&gt;    flight arr_delay dep_delay\n#&gt;     &lt;int&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n#&gt;  1   1545        11         2\n#&gt;  2   1714        20         4\n#&gt;  3   1141        33         2\n#&gt;  4    725       -18        -1\n#&gt;  5    461       -25        -6\n#&gt;  6   1696        12        -4\n#&gt;  7    507        19        -5\n#&gt;  8   5708       -14        -3\n#&gt;  9     79        -8        -3\n#&gt; 10    301         8        -2\n#&gt; # ℹ 336,766 more rows\n\n\nRename arr_delay to arrival_delay.\n\n# rename(): Rename arr_delay to arrival_delay\nflights %&gt;% \n  rename(arrival_delay = arr_delay)\n\n#&gt; # A tibble: 336,776 × 19\n#&gt;     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n#&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n#&gt;  1  2013     1     1      517            515         2      830            819\n#&gt;  2  2013     1     1      533            529         4      850            830\n#&gt;  3  2013     1     1      542            540         2      923            850\n#&gt;  4  2013     1     1      544            545        -1     1004           1022\n#&gt;  5  2013     1     1      554            600        -6      812            837\n#&gt;  6  2013     1     1      554            558        -4      740            728\n#&gt;  7  2013     1     1      555            600        -5      913            854\n#&gt;  8  2013     1     1      557            600        -3      709            723\n#&gt;  9  2013     1     1      557            600        -3      838            846\n#&gt; 10  2013     1     1      558            600        -2      753            745\n#&gt; # ℹ 336,766 more rows\n#&gt; # ℹ 11 more variables: arrival_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#&gt; #   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#&gt; #   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nCalculate the total delay as the sum of arrival delay and departure delay.\nCommon mistake:\n\n# What is wrong with this code?\nflights %&gt;% \n  mutate(total_delay = arrival_delay + dep_delay)\n\nCorrect solution:\n\n# mutate(): Add a column for total delay\nflights %&gt;% \n  mutate(total_delay = arr_delay + dep_delay)\n\n#&gt; # A tibble: 336,776 × 20\n#&gt;     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n#&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n#&gt;  1  2013     1     1      517            515         2      830            819\n#&gt;  2  2013     1     1      533            529         4      850            830\n#&gt;  3  2013     1     1      542            540         2      923            850\n#&gt;  4  2013     1     1      544            545        -1     1004           1022\n#&gt;  5  2013     1     1      554            600        -6      812            837\n#&gt;  6  2013     1     1      554            558        -4      740            728\n#&gt;  7  2013     1     1      555            600        -5      913            854\n#&gt;  8  2013     1     1      557            600        -3      709            723\n#&gt;  9  2013     1     1      557            600        -3      838            846\n#&gt; 10  2013     1     1      558            600        -2      753            745\n#&gt; # ℹ 336,766 more rows\n#&gt; # ℹ 12 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#&gt; #   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#&gt; #   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, total_delay &lt;dbl&gt;\n\n\n\n\n🔗 Group Operations\nWhat is the average delay by carrier?\n\n# group_by() + summarize(): Average delay by carrier\nflights %&gt;% \n  group_by(carrier) %&gt;% \n  summarize(avg_delay = mean(arr_delay, na.rm = TRUE))\n\n#&gt; # A tibble: 16 × 2\n#&gt;    carrier avg_delay\n#&gt;    &lt;chr&gt;       &lt;dbl&gt;\n#&gt;  1 9E          7.38 \n#&gt;  2 AA          0.364\n#&gt;  3 AS         -9.93 \n#&gt;  4 B6          9.46 \n#&gt;  5 DL          1.64 \n#&gt;  6 EV         15.8  \n#&gt;  7 F9         21.9  \n#&gt;  8 FL         20.1  \n#&gt;  9 HA         -6.92 \n#&gt; 10 MQ         10.8  \n#&gt; 11 OO         11.9  \n#&gt; 12 UA          3.56 \n#&gt; 13 US          2.13 \n#&gt; 14 VX          1.76 \n#&gt; 15 WN          9.65 \n#&gt; 16 YV         15.6\n\n\nFor each destination, what is the most delayed flight?\n\n# slice_max(): Most delayed flight by destination\nflights %&gt;% \n  group_by(dest) %&gt;% \n  slice_max(order_by = arr_delay, n = 1, with_ties = FALSE)\n\n#&gt; # A tibble: 105 × 19\n#&gt; # Groups:   dest [105]\n#&gt;     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n#&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n#&gt;  1  2013     7    22     2145           2007        98      132           2259\n#&gt;  2  2013     7    23     1139            800       219     1250            909\n#&gt;  3  2013     1    25      123           2000       323      229           2101\n#&gt;  4  2013     8    17     1740           1625        75     2042           2003\n#&gt;  5  2013     7    22     2257            759       898      121           1026\n#&gt;  6  2013     7    10     2056           1505       351     2347           1758\n#&gt;  7  2013     8    13     1156            832       204     1417           1029\n#&gt;  8  2013     2    21     1728           1316       252     1839           1413\n#&gt;  9  2013    12     1     1504           1056       248     1628           1230\n#&gt; 10  2013     4    10       25           1900       325      136           2045\n#&gt; # ℹ 95 more rows\n#&gt; # ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#&gt; #   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#&gt; #   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nWhich airline carriers had the highest average arrival delays, and how do they compare overall? What if I want to keep all the rows for further data manipulation?\n\n# ungroup(): Remove grouping structure\nflights %&gt;% \n  group_by(carrier) %&gt;% \n  mutate(mean_delay = mean(arr_delay, na.rm = TRUE)) %&gt;% \n  ungroup() %&gt;% \n  arrange(desc(mean_delay))\n\n#&gt; # A tibble: 336,776 × 20\n#&gt;     year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n#&gt;    &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n#&gt;  1  2013     1     1      833            835        -2     1134           1102\n#&gt;  2  2013     1     1     1716           1730       -14     1947           1953\n#&gt;  3  2013     1     2      827            835        -8     1120           1102\n#&gt;  4  2013     1     2     1728           1730        -2     1952           1953\n#&gt;  5  2013     1     3      835            835         0     1102           1102\n#&gt;  6  2013     1     3     1933           1730       123     2131           1953\n#&gt;  7  2013     1     4      834            835        -1     1059           1102\n#&gt;  8  2013     1     4     1831           1730        61     2029           1953\n#&gt;  9  2013     1     5      835            835         0     1057           1102\n#&gt; 10  2013     1     5     1726           1730        -4     1948           1953\n#&gt; # ℹ 336,766 more rows\n#&gt; # ℹ 12 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#&gt; #   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#&gt; #   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;, mean_delay &lt;dbl&gt;\n\n\n\n\nChaining Multiple Verbs Together\nWhich airlines had the highest average total delay (arrival delay and departure delay) on January 1st?\n\n# Combine: filter → arrange → mutate → group_by → summarize\nflights %&gt;% \n  filter(month == 1, day == 1) %&gt;% \n  arrange(desc(dep_delay)) %&gt;% \n  mutate(total_delay = arr_delay + dep_delay) %&gt;% \n  group_by(carrier) %&gt;% \n  summarize(avg_delay = mean(total_delay, na.rm = TRUE))\n\n#&gt; # A tibble: 14 × 2\n#&gt;    carrier avg_delay\n#&gt;    &lt;chr&gt;       &lt;dbl&gt;\n#&gt;  1 9E         28.6  \n#&gt;  2 AA         19.4  \n#&gt;  3 AS        -18.5  \n#&gt;  4 B6         19.2  \n#&gt;  5 DL         -7.64 \n#&gt;  6 EV         74.7  \n#&gt;  7 F9          5    \n#&gt;  8 FL          0.2  \n#&gt;  9 HA        -17    \n#&gt; 10 MQ         56.2  \n#&gt; 11 UA         13.8  \n#&gt; 12 US         -0.938\n#&gt; 13 VX        -12.9  \n#&gt; 14 WN         19.7\n\n\n\n\n\n\nPractice: Data Transformation\nUse the gapminder dataset to answer the following questions:\nHow does the average life expectancy differ across continents in 2007?\n\n# Your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\n\n\n\nWhich country had the highest life expectancy in each continent in 2007, and how much did it exceed the global benchmark of 60 years?\n\n# Your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\n\n\n\nWhich countries experienced the largest gain in life expectancy between 1952 and 2007?\n\n# Your code here\n\n\n\n\n\n\n\nYour Answer"
  },
  {
    "objectID": "lab/1-lab1.html#part-2-tidying-data-with-pivot_longer",
    "href": "lab/1-lab1.html#part-2-tidying-data-with-pivot_longer",
    "title": "Lab 1",
    "section": "Part 2: Tidying Data with pivot_longer()",
    "text": "Part 2: Tidying Data with pivot_longer()\n\nExample: Climate Data\nWe’ll start by tidying a simulated climate dataset.\n\nn_row = 10\nclimate_raw &lt;- tibble(\n  id = 1:n_row,\n  date = rep(seq(as.Date(\"2022-07-01\"), by = \"1 day\", length.out = n_row/2), 2),\n  city = rep(c(\"Phoenix\", \"Miami\"), each = n_row/2),\n  zone = rep(c(\"urban\", \"coastal\"), each = n_row/2),\n  temp_morning = sample(75:90, n_row, replace = TRUE),\n  temp_afternoon = sample(95:112, n_row, replace = TRUE),\n  humid_morning = sample(15:90, n_row, replace = TRUE),\n  humid_afternoon = sample(10:80, n_row, replace = TRUE)\n)\n\nhead(climate_raw)\n\n#&gt; # A tibble: 6 × 8\n#&gt;      id date       city    zone    temp_morning temp_afternoon humid_morning\n#&gt;   &lt;int&gt; &lt;date&gt;     &lt;chr&gt;   &lt;chr&gt;          &lt;int&gt;          &lt;int&gt;         &lt;int&gt;\n#&gt; 1     1 2022-07-01 Phoenix urban             76            106            21\n#&gt; 2     2 2022-07-02 Phoenix urban             75            108            82\n#&gt; 3     3 2022-07-03 Phoenix urban             80            109            45\n#&gt; 4     4 2022-07-04 Phoenix urban             89            107            28\n#&gt; 5     5 2022-07-05 Phoenix urban             80            111            23\n#&gt; 6     6 2022-07-01 Miami   coastal           84            112            86\n#&gt; # ℹ 1 more variable: humid_afternoon &lt;int&gt;\n\n\nUsing pivot_linger(), we can tidy the dataset by transforming the wide format into a long format. This is useful for data analysis and visualization.\n\nclimate_tidy &lt;- climate_raw %&gt;% \n  pivot_longer(cols = starts_with(c(\"temp\", \"humid\")),\n               names_to = c(\"variable\", \"time\"),\n               names_sep = \"_\") %&gt;%\n  pivot_wider(names_from = variable, values_from = value)\n\nhead(climate_tidy)\n\n#&gt; # A tibble: 6 × 7\n#&gt;      id date       city    zone  time       temp humid\n#&gt;   &lt;int&gt; &lt;date&gt;     &lt;chr&gt;   &lt;chr&gt; &lt;chr&gt;     &lt;int&gt; &lt;int&gt;\n#&gt; 1     1 2022-07-01 Phoenix urban morning      76    21\n#&gt; 2     1 2022-07-01 Phoenix urban afternoon   106    65\n#&gt; 3     2 2022-07-02 Phoenix urban morning      75    82\n#&gt; 4     2 2022-07-02 Phoenix urban afternoon   108    71\n#&gt; 5     3 2022-07-03 Phoenix urban morning      80    45\n#&gt; 6     3 2022-07-03 Phoenix urban afternoon   109    67\n\n\n\n\nPractice: Tidying Data using gapminder data\nSometimes the tidy data is the wide format. For example, if we want to calculate the difference between the life expectancy in 1952 and 2007, we can create a wide version of the gapminder dataset.\n\n# Your code here\n# gap_wide &lt;-\n\nNow imagine for a different task the long format of the data is better for the analytical task. Use pivot_longer() to return this gap_wider to long format. Expected columns are country, continent, year, lifeExp.\n\n# Your code here"
  },
  {
    "objectID": "lab/1-lab1.html#save-and-push-your-work",
    "href": "lab/1-lab1.html#save-and-push-your-work",
    "title": "Lab 1",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub.\n\ngit add 1-lab1.qmd 1-lab1.html\ngit commit -m \"Complete Lab 1\"\ngit push"
  },
  {
    "objectID": "hw/5-hw5.html",
    "href": "hw/5-hw5.html",
    "title": "Homework 5",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 5-hw5.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/5-hw5.html#before-your-start-the-assignment",
    "href": "hw/5-hw5.html#before-your-start-the-assignment",
    "title": "Homework 5",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 5-hw5.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/5-hw5.html#overview-of-hw5",
    "href": "hw/5-hw5.html#overview-of-hw5",
    "title": "Homework 5",
    "section": "Overview of HW5",
    "text": "Overview of HW5\nIn this assignment, we will revisit the midwest dataset from Homework 1 and explore how geography adds context and insight. Recall that in Homework 1, you created scatterplots to explore the relationships between education level and poverty level among Midwest counties in 2000. In this homework, you will see how maps can help you explore the geographical context of those relationships. You will practice creating static maps (point, choropleth, faceted) and interactive maps, while learning to join attribute data with geographic shapes. You will also practice using {tidycensus} to access census data from the 2020 Census and compare it with the 2000 Census data.\nSkills practiced:\n\nJoining tabular data to geographic shapefiles using sf and tigris\nCreating static maps: choropleth, point, and faceted maps using tmap\nCreating interactive maps using leaflet with tooltips and legends\nComparing census data over time using tidycensus\nVisualizing and interpreting regional variation in socioeconomic indicators\nUsing centroids to create point maps from polygon data\nDesigning maps with clear legends, color scales, and map layouts"
  },
  {
    "objectID": "hw/5-hw5.html#setup",
    "href": "hw/5-hw5.html#setup",
    "title": "Homework 5",
    "section": "Setup",
    "text": "Setup\nLoad the necessary libraries and datasets. You will need to install the following packages if you haven’t already:\n\nlibrary(tidyverse)\nlibrary(tmap)\nlibrary(sf)\nlibrary(tigris)\nlibrary(tidycensus)\nlibrary(leaflet)\n\noptions(tigris_use_cache = TRUE)\ndata(midwest, package = \"ggplot2\")"
  },
  {
    "objectID": "hw/5-hw5.html#q1-explore-the-dataset-review-from-hw1",
    "href": "hw/5-hw5.html#q1-explore-the-dataset-review-from-hw1",
    "title": "Homework 5",
    "section": "Q1: Explore the Dataset (Review from HW1)",
    "text": "Q1: Explore the Dataset (Review from HW1)\nBriefly describe what each row in the midwest dataset represents. Identify three public health variables and three geographic identifiers in the dataset. Then, list 2–3 research questions you could explore using maps.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/5-hw5.html#q2-prepare-spatial-data",
    "href": "hw/5-hw5.html#q2-prepare-spatial-data",
    "title": "Homework 5",
    "section": "Q2: Prepare Spatial Data",
    "text": "Q2: Prepare Spatial Data\nUse tigris::counties(cb = TRUE, year = 2020) to download county shapefiles for the entire U.S. Filter for the five Midwest states in the midwest dataset. Join with the midwest dataset using state acronym and county names.\n\nhint: you may need to pay attention to the lower case/upper case in county names when you perform the join, use tolower() or toupper() to standardize the case. When you join a sf object and the midwest dataset, you may need to use left_join() from the dplyr package, and put the sf object as the first argument and the midwest dataset as the second argument. Read the documentation on ?left_join for how to join tables based on multiple columns and what to do when column names are different.\n\n\n# your code here"
  },
  {
    "objectID": "hw/5-hw5.html#q3-choropleth-map-below-poverty",
    "href": "hw/5-hw5.html#q3-choropleth-map-below-poverty",
    "title": "Homework 5",
    "section": "Q3: Choropleth Map — % Below Poverty",
    "text": "Q3: Choropleth Map — % Below Poverty\nMake a choropleth map using tmap to show percbelowpoverty. Use a sequential palette and a clear legend title. What patterns do you observe across states?\n\n# your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/5-hw5.html#q4-point-map-total-population-by-county",
    "href": "hw/5-hw5.html#q4-point-map-total-population-by-county",
    "title": "Homework 5",
    "section": "Q4: Point Map — Total Population by County",
    "text": "Q4: Point Map — Total Population by County\nCreate a point map using county centroids. Use the midwest_sf object and convert it to a point layer using st_centroid(). Plot the result using tm_dots(), and encode poptotal with either color or size.\n\n🔍 Hint: midwest_pts &lt;- st_centroid(midwest_sf). Use either size or color to encode poptotal. What does this show about population distribution?\n\n\n# your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/5-hw5.html#q5-faceted-map-college-education-by-state",
    "href": "hw/5-hw5.html#q5-faceted-map-college-education-by-state",
    "title": "Homework 5",
    "section": "Q5: Faceted Map — College Education by State",
    "text": "Q5: Faceted Map — College Education by State\nMake a faceted choropleth map of percollege, using tm_facets(by = \"state\"). What differences do you observe across states? Does education attainment appear higher in some states compared to others?\n\n# your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/5-hw5.html#q6-compare-poverty-and-college-education-together",
    "href": "hw/5-hw5.html#q6-compare-poverty-and-college-education-together",
    "title": "Homework 5",
    "section": "Q6: Compare Poverty and College Education Together",
    "text": "Q6: Compare Poverty and College Education Together\nCreate two maps comparing percbelowpoverty and percollege. What insights do you gain by viewing these variables in parallel?\n\n# your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/5-hw5.html#q7-compare-with-decennial-census-tidycensus",
    "href": "hw/5-hw5.html#q7-compare-with-decennial-census-tidycensus",
    "title": "Homework 5",
    "section": "Q7: Compare with Decennial Census (tidycensus)",
    "text": "Q7: Compare with Decennial Census (tidycensus)\nUse the tidycensus package to retrieve total population by county from the 2020 Decennial Census. Join it to midwest_sf and compare it with the poptotal values in the original midwest dataset (which reflects 2000 population). Map the absolute or percent difference between 2000 and 2020 populations.\n\n🔍 Hint: use get_decennial() with variable = \"P001001\" and year = 2020, and set geometry = FALSE.\n\nWhat counties saw the most growth or decline in population over time?\n\n# your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/5-hw5.html#bonus-interactive-map-leaflet",
    "href": "hw/5-hw5.html#bonus-interactive-map-leaflet",
    "title": "Homework 5",
    "section": "BONUS: Interactive Map — Leaflet",
    "text": "BONUS: Interactive Map — Leaflet\nMake an interactive map using leaflet. Color counties by percbelowpoverty, and add a tooltip with county name and both poverty and education rates. Include a legend.\n\n# your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/5-hw5.html#how-i-used-genai",
    "href": "hw/5-hw5.html#how-i-used-genai",
    "title": "Homework 5",
    "section": "How I used GenAI?",
    "text": "How I used GenAI?\nDescribe how GenAI is used in producing this homework, include prompt, date, model version, and link to chat history.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/5-hw5.html#save-and-push-your-work",
    "href": "hw/5-hw5.html#save-and-push-your-work",
    "title": "Homework 5",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub:\n\ngit add .\ngit commit -m \"Complete Homework 5\"\ngit push"
  },
  {
    "objectID": "hw/3-hw3.html",
    "href": "hw/3-hw3.html",
    "title": "Homework 3",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 3-hw3.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/3-hw3.html#before-your-start-the-assignment",
    "href": "hw/3-hw3.html#before-your-start-the-assignment",
    "title": "Homework 3",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 3-hw3.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/3-hw3.html#overview-of-hw3",
    "href": "hw/3-hw3.html#overview-of-hw3",
    "title": "Homework 3",
    "section": "Overview of HW3",
    "text": "Overview of HW3\nThis assignment is your first step toward building your final project for PUBH 6199: Visualizing Data with R. In the final project, you’ll take a dataset, explore it, and tell a compelling and insightful story using at least three different visualizations (static or interactive).\nSkills practiced:\n\nPractice formulating clear, data-driven research questions\nIdentify and evaluate potential data sources for visualization projects\nPlan appropriate visual encodings for different types of information\nAnticipate patterns and insights that can be revealed through exploratory data analysis\nCommunicate project ideas clearly and concisely in written form"
  },
  {
    "objectID": "hw/3-hw3.html#q1-final-project-format-options",
    "href": "hw/3-hw3.html#q1-final-project-format-options",
    "title": "Homework 3",
    "section": "Q1: Final Project Format Options",
    "text": "Q1: Final Project Format Options\nYour final project must include at least three visualizations that work together to explore your topic. You’ll eventually work in teams of two, but for now, please brainstorm your individual idea and indicate which of the following formats you’re most interested in:\nYou’ll have three format options:\n\nSame Question, Different Audiences (3 static charts):\nCreate three visualizations that answer the same question, each designed for a different audience (e.g., general public, policy makers, technical experts).\nSame Data, Different Questions (3 static charts):\nUse the same dataset to answer three different but related questions, each with its own focused visualization.\nInteractive Dashboard (1 app with 3 components):\nBuild an interactive dashboard (e.g., with shiny, plotly, or similar tools) that includes at least three visual components for exploring your data dynamically.\n\nPlease indicate which of the three options you’re most drawn to in your submission.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/3-hw3.html#q2-project-idea",
    "href": "hw/3-hw3.html#q2-project-idea",
    "title": "Homework 3",
    "section": "Q2: Project Idea",
    "text": "Q2: Project Idea\nBriefly describe your idea for a data visualization project. What topic are you interested in exploring? Why is it interesting and important? Feel free to use examples, images, etc to motivate your idea.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/3-hw3.html#q3-research-questions",
    "href": "hw/3-hw3.html#q3-research-questions",
    "title": "Homework 3",
    "section": "Q3: Research Questions",
    "text": "Q3: Research Questions\nList 1–3 specific questions you hope to answer using data. Good research questions are:\n\nClear and focused\n\nAnswerable with the data you can access\n\nLikely to benefit from visual analysis\n\nExample:\n- How has air quality changed over time in major U.S. cities?\n- What factors are associated with higher rates of water insecurity across communities in the U.S.?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/3-hw3.html#q4-potential-data-sources",
    "href": "hw/3-hw3.html#q4-potential-data-sources",
    "title": "Homework 3",
    "section": "Q4: Potential Data Sources",
    "text": "Q4: Potential Data Sources\nWhat dataset(s) do you plan to use? If you haven’t chosen one yet, describe the kind of data you’ll look for.\nInclude (if known):\n\nDataset name\nURL or source\nWhat the dataset contains\nWhy you think it’s suitable\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/3-hw3.html#q5-anticipated-visualizations",
    "href": "hw/3-hw3.html#q5-anticipated-visualizations",
    "title": "Homework 3",
    "section": "Q5: Anticipated Visualizations",
    "text": "Q5: Anticipated Visualizations\nWhat types of charts do you expect to include in your project, and why do you choose this chart type? Try to name at least three types that might help you answer your research questions.\nExample:\n\nLine plot of changes over time\n\nChoropleth map of regional differences\n\nBar chart comparing groups\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/3-hw3.html#q6-anticipated-findings-or-insights",
    "href": "hw/3-hw3.html#q6-anticipated-findings-or-insights",
    "title": "Homework 3",
    "section": "Q6: Anticipated Findings or Insights",
    "text": "Q6: Anticipated Findings or Insights\nWhat patterns, stories, or surprises do you hope the data will reveal? It’s okay to speculate here — your goal is to show curiosity and a sense of direction.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/3-hw3.html#bonus-create-an-sketch",
    "href": "hw/3-hw3.html#bonus-create-an-sketch",
    "title": "Homework 3",
    "section": "BONUS: Create an sketch",
    "text": "BONUS: Create an sketch\nTry sketching one of your anticipated visualizations on paper! This helps you think through the structure, encoding, and message of your chart before jumping into code.\n\nChoose one of the visualizations you described in your plan\nUse pencil and paper (not code) to draw a rough version of what the chart could look like\nTake a photo and include it in your .qmd file using the code below:\n\n\n\n\n\n\n\n\n\n\nIf needed, add explanatory text below the image.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your answer here."
  },
  {
    "objectID": "hw/3-hw3.html#how-i-used-genai",
    "href": "hw/3-hw3.html#how-i-used-genai",
    "title": "Homework 3",
    "section": "How I used GenAI?",
    "text": "How I used GenAI?\nDescribe how GenAI is used in producing this homework, include prompt, date, model version, and link to chat history.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/3-hw3.html#save-and-push-your-work",
    "href": "hw/3-hw3.html#save-and-push-your-work",
    "title": "Homework 3",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub.\n\ngit add 3-hw3.qmd 3-hw3.html your-sketch.png\ngit commit -m \"Complete Homework 3\"\ngit push"
  },
  {
    "objectID": "hw/1-hw1.html",
    "href": "hw/1-hw1.html",
    "title": "Homework 1",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 1-hw1.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/1-hw1.html#before-your-start-the-assignment",
    "href": "hw/1-hw1.html#before-your-start-the-assignment",
    "title": "Homework 1",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 1-hw1.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/1-hw1.html#overview-of-hw1",
    "href": "hw/1-hw1.html#overview-of-hw1",
    "title": "Homework 1",
    "section": "Overview of HW1",
    "text": "Overview of HW1\nIn this assignment, you will explore the midwest dataset using ggplot2 to uncover patterns in population, education, and poverty across counties in the U.S. Midwest.\nSkills practiced:\n\nExploratory data visualization\nMapping variables to aesthetics (aes)\nPractice different components of ggplot2 including geom_*(), scale_*(), facet_wrap()\nDraw public health insights from data\n\n\nLoad Required Packages\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\n\n\nLoad the Data\n\ndata(midwest)\n# tip: type ?midwest in your console to see the data dictionary"
  },
  {
    "objectID": "hw/1-hw1.html#q1-explore-the-dataset",
    "href": "hw/1-hw1.html#q1-explore-the-dataset",
    "title": "Homework 1",
    "section": "Q1: Explore the dataset",
    "text": "Q1: Explore the dataset\nUsing glimpse() or summary() to explore the structure of the dataset. What are the variables in the dataset? What interesting public health questions can you ask based on the variables in the dataset? Write down at least 3 questions you can ask based on the variables in the dataset:\n\n\n\n\n\n\nYour Answer\n\n\n\n\nResearch question 1:\nResearch question 2:\nResearch question 3:\n\n\n\n\n#your code here"
  },
  {
    "objectID": "hw/1-hw1.html#q2-population-vs.-poverty",
    "href": "hw/1-hw1.html#q2-population-vs.-poverty",
    "title": "Homework 1",
    "section": "Q2: Population vs. poverty",
    "text": "Q2: Population vs. poverty\nCreate a scatterplot with:\n\npoptotal on the x-axis\npercbelowpoverty on the y-axis\nColor the points by state\n\n\n#your code here\n\nWhat do you notice about the relationship between county population size and poverty? Do some states stand out?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/1-hw1.html#q3-education-vs.-poverty",
    "href": "hw/1-hw1.html#q3-education-vs.-poverty",
    "title": "Homework 1",
    "section": "Q3: Education vs. poverty",
    "text": "Q3: Education vs. poverty\n\nMake a scatterplot of percollege (x) vs percbelowpoverty (y).\nAdd a smoother using geom_smooth().\n\n\n# your code here\n\nWhat does this tell you about the relationship between education and poverty?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/1-hw1.html#q4-facet-by-metronon-metro",
    "href": "hw/1-hw1.html#q4-facet-by-metronon-metro",
    "title": "Homework 1",
    "section": "Q4: Facet by metro/non-metro",
    "text": "Q4: Facet by metro/non-metro\n\nRecreate the scatterplot of percollege (x) vs percbelowpoverty (y).\nSubset the data by metro and non-metro counties using facet_wrap().\n\n\n# your code here\n\nHow does the relationship between education and poverty differ between metro and non-metro counties?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/1-hw1.html#q5-compare-poverty-rates-by-state",
    "href": "hw/1-hw1.html#q5-compare-poverty-rates-by-state",
    "title": "Homework 1",
    "section": "Q5: Compare poverty rates by state",
    "text": "Q5: Compare poverty rates by state\n\n# your code here\n\nWhat differences do you observe in the poverty rate distributions across states? Which states appear to have more consistent or more variable poverty rates?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/1-hw1.html#q6-make-a-visualization-to-answer-one-of-the-research-questions-you-wrote-down-for-q1.",
    "href": "hw/1-hw1.html#q6-make-a-visualization-to-answer-one-of-the-research-questions-you-wrote-down-for-q1.",
    "title": "Homework 1",
    "section": "Q6: Make a visualization to answer one of the research questions you wrote down for Q1.",
    "text": "Q6: Make a visualization to answer one of the research questions you wrote down for Q1.\n\n\n\n\n\n\nYour Research Question\n\n\n\nType your research question here.\n\n\n\n# your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your answer to your research question based on the visualization here."
  },
  {
    "objectID": "hw/1-hw1.html#bonus-improve-your-visualization-and-record-the-evolution-of-your-work",
    "href": "hw/1-hw1.html#bonus-improve-your-visualization-and-record-the-evolution-of-your-work",
    "title": "Homework 1",
    "section": "BONUS: Improve your visualization and record the evolution of your work",
    "text": "BONUS: Improve your visualization and record the evolution of your work\n\nRead the blogpost by Cedric Scherer here\nTake your visualization from Q6 and improve it. You can change the geometric object, color scheme, add labels, or any other changes you think will make it better.\nRecord the evolution of your work using the {camcorder} package and save a gif called my-ggplot-evol.gif.\n\n\n#your code here\n\nInsert the gif here:\n\n\n\n\n\n\nYour Answer"
  },
  {
    "objectID": "faq.html",
    "href": "faq.html",
    "title": "Frequenly Asked Questions",
    "section": "",
    "text": "To be added after class starts!",
    "crumbs": [
      "FAQ"
    ]
  },
  {
    "objectID": "class/9-maps/index.html#outline-for-today",
    "href": "class/9-maps/index.html#outline-for-today",
    "title": "Lecture 5. Maps",
    "section": "Outline for today",
    "text": "Outline for today\n\nTypes of maps for spatial data\nMap design considerations (color, projection, legend)\nR packages for mapping\nStatic maps with tmap\nInteractive maps with leaflet\nAccessing spatial data with tigris and tidycensus"
  },
  {
    "objectID": "class/9-maps/index.html#types-of-maps-for-spatial-data",
    "href": "class/9-maps/index.html#types-of-maps-for-spatial-data",
    "title": "Lecture 5. Maps",
    "section": "Types of Maps for Spatial Data",
    "text": "Types of Maps for Spatial Data\n1. Choropleth Map\n\nDisplay the spatial distribution of a variable across divided geographical areas\nBest for normalized data (e.g., rates)\nVariable encoding: color (intensity or hue)"
  },
  {
    "objectID": "class/9-maps/index.html#example-choropleth",
    "href": "class/9-maps/index.html#example-choropleth",
    "title": "Lecture 5. Maps",
    "section": "Example: Choropleth",
    "text": "Example: Choropleth\n\nlibrary(tmap)\ndata(\"World\")\ntm_shape(World) + \n  tm_polygons(\"HPI\", palette = \"viridis\", title = \"Happy Planet Index\")"
  },
  {
    "objectID": "class/9-maps/index.html#example-point-map",
    "href": "class/9-maps/index.html#example-point-map",
    "title": "Lecture 5. Maps",
    "section": "Example: Point Map",
    "text": "Example: Point Map\n\nlibrary(tidyverse)\nlibrary(spData)\nlibrary(tmap)\ndata(urban_agglomerations)\nurb_2030 &lt;- urban_agglomerations |&gt; filter(year == 2030) \ntm_shape(World) +\n  tm_polygons() +\n  tm_shape(urb_2030) +\n  tm_symbols(fill = \"black\", col = \"white\", size = \"population_millions\",\n             size.legend = tm_legend(title = \"Urban Population in 2030\\n(millions)\"))"
  },
  {
    "objectID": "class/9-maps/index.html#example-heat-map-with-leaflet.extras",
    "href": "class/9-maps/index.html#example-heat-map-with-leaflet.extras",
    "title": "Lecture 5. Maps",
    "section": "Example: Heat map with leaflet.extras",
    "text": "Example: Heat map with leaflet.extras\n\n\n\nlibrary(leaflet)\nlibrary(leaflet.extras)\nthefts_coords &lt;- read_csv(\"data/thefts_coords.csv\")\nthefts_sf &lt;- st_as_sf(thefts_coords, coords = c(\"lon\", \"lat\"), crs = 4326)\nleaflet(thefts_sf) %&gt;%\n  addProviderTiles(\"OpenStreetMap\") %&gt;%\n  addHeatmap(blur = 15, max = 0.05, radius = 10) %&gt;%\n  setView(lng = -87.6298, lat = 41.8781, zoom = 11)"
  },
  {
    "objectID": "class/9-maps/index.html#example-faceted-map",
    "href": "class/9-maps/index.html#example-faceted-map",
    "title": "Lecture 5. Maps",
    "section": "Example: Faceted Map",
    "text": "Example: Faceted Map\n\nlibrary(tidyverse)\nlibrary(spData)\nlibrary(tmap)\ndata(urban_agglomerations)\nurb_1970_2030 &lt;- urban_agglomerations |&gt; filter(year %in% c(1970, 1990, 2010, 2030))\ntm_shape(World) +\n  tm_polygons() +\n  tm_shape(urb_1970_2030) +\n  tm_symbols(fill = \"black\", col = \"white\", size = \"population_millions\",\n             size.legend = tm_legend(title = \"Urban Population\\n(millions)\")) +\n  tm_facets(by = \"year\", ncol = 2)"
  },
  {
    "objectID": "class/9-maps/index.html#example-interactive-map",
    "href": "class/9-maps/index.html#example-interactive-map",
    "title": "Lecture 5. Maps",
    "section": "Example: Interactive Map",
    "text": "Example: Interactive Map"
  },
  {
    "objectID": "class/9-maps/index.html#outline-for-today-1",
    "href": "class/9-maps/index.html#outline-for-today-1",
    "title": "Lecture 5. Maps",
    "section": "Outline for today",
    "text": "Outline for today\n\nTypes of maps for spatial data\nMap design considerations (color, scale, projection, legend)\nR packages for mapping\nStatic maps with tmap\nInteractive maps with leaflet\nAccessing spatial data with tigris and tidycensus"
  },
  {
    "objectID": "class/9-maps/index.html#color-choices-for-maps",
    "href": "class/9-maps/index.html#color-choices-for-maps",
    "title": "Lecture 5. Maps",
    "section": "Color Choices for Maps",
    "text": "Color Choices for Maps\n\nSequential palettes for ordered values\nDiverging palettes for above/below mean\nQualitative for categories\n\n\n\nSource: Which color scale to use when visualizing data, by Lisa Charlottte Muth."
  },
  {
    "objectID": "class/9-maps/index.html#categorical-scales",
    "href": "class/9-maps/index.html#categorical-scales",
    "title": "Lecture 5. Maps",
    "section": "Categorical scales",
    "text": "Categorical scales\n\nUse distinct hues for different categories\nLimit to no more than 7 hues\n\n\n\nSource: Analyzing US Census Data, by Kyle Walker"
  },
  {
    "objectID": "class/9-maps/index.html#sequential-scales",
    "href": "class/9-maps/index.html#sequential-scales",
    "title": "Lecture 5. Maps",
    "section": "Sequential Scales",
    "text": "Sequential Scales\n\nMap value to color on a continuum, based on both intensity and hue\nUse for ordered data (e.g., population, income)\n\n\n\nSource: Analyzing US Census Data, by Kyle Walker"
  },
  {
    "objectID": "class/9-maps/index.html#diverging-scales",
    "href": "class/9-maps/index.html#diverging-scales",
    "title": "Lecture 5. Maps",
    "section": "Diverging Scales",
    "text": "Diverging Scales\n\nUse for data with a meaningful midpoint (e.g., above/below average)\nTwo contrasting colors with a neutral midpoint (e.g., white/light gray)\n\n\n\nSource: 2020 U.S. Election Mapped, by Vivid Maps"
  },
  {
    "objectID": "class/9-maps/index.html#avoid-misleading-colors",
    "href": "class/9-maps/index.html#avoid-misleading-colors",
    "title": "Lecture 5. Maps",
    "section": "Avoid Misleading Colors",
    "text": "Avoid Misleading Colors\n\nDon’t use rainbow: not perceptually uniform\n\n\n\nConsider accessibility (color-blind safe palettes)\nAvoid encoding meaning with non-intuitive colors"
  },
  {
    "objectID": "class/9-maps/index.html#map-projections",
    "href": "class/9-maps/index.html#map-projections",
    "title": "Lecture 5. Maps",
    "section": "Map Projections",
    "text": "Map Projections\n\nA projection distorts shape, area, distance, or direction\nUse equal-area projections for choropleths"
  },
  {
    "objectID": "class/9-maps/index.html#common-projections-in-r",
    "href": "class/9-maps/index.html#common-projections-in-r",
    "title": "Lecture 5. Maps",
    "section": "Common Projections in R",
    "text": "Common Projections in R\n\n\n\nUse Case\nRecommended Projection\nEPSG Code\n\n\n\n\nEqual-area choropleths\nAlbers Equal Area\n5070\n\n\nInteractive maps\nWeb Mercator\n3857\n\n\nGlobal perspective\nRobinson or Winkel Tripel\n54030 / 54042\n\n\nLocal detail (U.S.)\nNAD83 / State Plane\nvaries\n\n\n\nUse st_transform() to convert:\nmy_data &lt;- sf::st_transform(my_data, crs = 5070)\n\nIn tmap:\n\nIn static mode: all layers are reprojected to match the first layer.\nIn interactive mode: all layers are projected to EPSG:3857."
  },
  {
    "objectID": "class/9-maps/index.html#outline-for-today-2",
    "href": "class/9-maps/index.html#outline-for-today-2",
    "title": "Lecture 5. Maps",
    "section": "Outline for today",
    "text": "Outline for today\n\nTypes of maps for spatial data\nMap design considerations (color, scale, projection, legend)\nR packages for mapping\nStatic maps with tmap\nInteractive maps with leaflet\nAccessing spatial data with tigris and tidycensus"
  },
  {
    "objectID": "class/9-maps/index.html#r-ecosystem-for-mapping",
    "href": "class/9-maps/index.html#r-ecosystem-for-mapping",
    "title": "Lecture 5. Maps",
    "section": "R Ecosystem for Mapping",
    "text": "R Ecosystem for Mapping\n\nData handling: sf, sp\nThematic mapping: tmap, ggplot2, cartography\nBasemaps & interactivity: leaflet, mapview, ggmap\nShapefiles: rgdal, rmapshaper\nData access: tigris, tidycensus"
  },
  {
    "objectID": "class/9-maps/index.html#sf-simple-features",
    "href": "class/9-maps/index.html#sf-simple-features",
    "title": "Lecture 5. Maps",
    "section": "{sf}: simple features",
    "text": "{sf}: simple features\nThe {sf} package is the standard way to work with vector spatial data in R. It replaces older tools like {sp} with a simple, tidy-friendly interface.\nKey Features of {sf}\n\nStores geometry + attributes in a single data.frame-like object\nBuilt on simple features standard (ISO 19125-1)\nFully compatible with dplyr, ggplot2, tmap\nUses sfc column to store spatial information (e.g., points, polygons)"
  },
  {
    "objectID": "class/9-maps/index.html#outline-for-today-3",
    "href": "class/9-maps/index.html#outline-for-today-3",
    "title": "Lecture 5. Maps",
    "section": "Outline for today",
    "text": "Outline for today\n\nTypes of maps for spatial data\nMap design considerations (color, scale, projection, legend)\nR packages for mapping\nStatic maps with tmap\nInteractive maps with leaflet\nAccessing spatial data with tigris and tidycensus"
  },
  {
    "objectID": "class/9-maps/index.html#static-mapping-with-tmap",
    "href": "class/9-maps/index.html#static-mapping-with-tmap",
    "title": "Lecture 5. Maps",
    "section": "Static Mapping with tmap",
    "text": "Static Mapping with tmap\n\nSimilar to ggplot2, based on “the grammar of graphics”\nSupports both static and interactive modes\nExcellent for quick, polished maps, sensible defaults\n\n\nlibrary(tmap)\ntmap_mode(\"plot\")\nnc &lt;- st_read(\"data/nc.shp\", quiet = TRUE) # nc is an `sf` object\ntm_shape(nc) + # defines input data\n  tm_polygons(\"BIR74\", palette = \"Greens\") + # mapping data to aesthetics\n  tm_layout(title = \"Births in NC, 1974\")"
  },
  {
    "objectID": "class/9-maps/index.html#how-tmap-works",
    "href": "class/9-maps/index.html#how-tmap-works",
    "title": "Lecture 5. Maps",
    "section": "How {tmap} works?",
    "text": "How {tmap} works?\n\n{tmap} adopts an intuitive approach to map-making: the addition operator + adds a new layer, followed by tm_*():\n\n\ntm_fill(): shaded areas for (multi)polygons\ntm_borders(): border outlines for (multi)polygons\ntm_polygons(): both, shaded areas and border outlines for (multi)polygons\ntm_lines(): lines for (multi)linestrings\ntm_symbols(): symbols for (multi)points, (multi)linestrings, and (multi)polygons\ntm_raster(): colored cells of raster data (there is also tm_rgb() for rasters with three layers)\ntm_text(): text information for (multi)points, (multi)linestrings, and (multi)polygons"
  },
  {
    "objectID": "class/9-maps/index.html#adding-layers-in-tmap",
    "href": "class/9-maps/index.html#adding-layers-in-tmap",
    "title": "Lecture 5. Maps",
    "section": "Adding layers in {tmap}",
    "text": "Adding layers in {tmap}\n\ntm_polygons(): for choropleth maps\ntm_symbols(): for point data, size and color can represent different variables\n\n\n# Create the map: choropleth + bubbles\ntm_shape(nc) +\n  tm_polygons(\"BIR74\", palette = \"brewer.blues\", title = \"Births in 1974\") +\n  tm_symbols(size = \"SID74\", col = \"red\", alpha = 0.5, border.col = \"white\",\n             title.size = \"SID Cases (1974)\")"
  },
  {
    "objectID": "class/9-maps/index.html#scale",
    "href": "class/9-maps/index.html#scale",
    "title": "Lecture 5. Maps",
    "section": "Scale",
    "text": "Scale\n\nScales control how the values are represented on the map and in the legend, and can have a major impact on how spatial variability is portrayed\n\ntm_shape(nz) + tm_polygons(fill = \"Median_income\")\ntm_shape(nz) + tm_polygons(fill = \"Median_income\",\n                        fill.scale = tm_scale(breaks = c(0, 30000, 40000, 50000)))\ntm_shape(nz) + tm_polygons(fill = \"Median_income\",\n                           fill.scale = tm_scale(n = 10))\ntm_shape(nz) + tm_polygons(fill = \"Median_income\",\n                           fill.scale = tm_scale(values = \"BuGn\"))"
  },
  {
    "objectID": "class/9-maps/index.html#style-options-for-classifying-map-data",
    "href": "class/9-maps/index.html#style-options-for-classifying-map-data",
    "title": "Lecture 5. Maps",
    "section": "Style options for classifying map data",
    "text": "Style options for classifying map data\ntm_scale_intervals(style = \"pretty\"):\n\n\n“pretty”: Rounded, evenly spaced breaks (default).\n“equal”: Equal-width bins; poor fit for skewed data — may hide variation.\n“quantile”: Equal count per bin; be careful with wide bin ranges.\n“jenks”: Optimizes natural groupings; can be slow with large datasets.\n“log10_pretty”: Log-scaled breaks; only appropriate for right-skewed, positive values."
  },
  {
    "objectID": "class/9-maps/index.html#switch-to-interactive-tmap",
    "href": "class/9-maps/index.html#switch-to-interactive-tmap",
    "title": "Lecture 5. Maps",
    "section": "Switch to interactive {tmap}",
    "text": "Switch to interactive {tmap}\n\nA unique feature of {tmap} is its ability to create static and interactive maps using the same code. Maps can be viewed interactively at any point by switching to view mode, using the command tmap_mode(\"view\")\n\n\ntmap_mode(\"view\")\ntm_shape(nc) + \n  tm_polygons(\"BIR74\", palette = \"brewer.reds\")"
  },
  {
    "objectID": "class/9-maps/index.html#outline-for-today-4",
    "href": "class/9-maps/index.html#outline-for-today-4",
    "title": "Lecture 5. Maps",
    "section": "Outline for today",
    "text": "Outline for today\n\nTypes of maps for spatial data\nMap design considerations (color, scale, projection, legend)\nR packages for mapping\nStatic maps with tmap\nInteractive maps with leaflet\nAccessing spatial data with tigris and tidycensus"
  },
  {
    "objectID": "class/9-maps/index.html#interactive-mapping-with-leaflet-in-r",
    "href": "class/9-maps/index.html#interactive-mapping-with-leaflet-in-r",
    "title": "Lecture 5. Maps",
    "section": "Interactive Mapping with {leaflet} in R",
    "text": "Interactive Mapping with {leaflet} in R\n\n{leaflet} is the most widely used interactive mapping package in R.\nIt provides a relatively low-level interface to the Leaflet.js JavaScript library leafletjs.com.\nMaps start with leaflet() and use pipeable layers like addTiles(), addCircles(), and addPolygons()."
  },
  {
    "objectID": "class/9-maps/index.html#example-leaflet-map",
    "href": "class/9-maps/index.html#example-leaflet-map",
    "title": "Lecture 5. Maps",
    "section": "Example leaflet Map",
    "text": "Example leaflet Map\n\npal &lt;- colorNumeric(\"RdYlBu\", domain = cycle_hire$nbikes)\n# cycle_hire is an `sf` object with columns: name, nbikes, geometry, built-in data from spData\nleaflet(cycle_hire) |&gt;\n  addProviderTiles(providers$CartoDB.Positron) |&gt;\n  addCircles(col = ~pal(nbikes), opacity = 0.9) |&gt;\n  # lnd is a London boroughs shapefile\n  addPolygons(data = lnd, fill = FALSE) |&gt; \n  addLegend(pal = pal, values = ~nbikes) |&gt;\n  setView(lng = -0.1, lat = 51.5, zoom = 12) |&gt;\n  addMiniMap()"
  },
  {
    "objectID": "class/9-maps/index.html#outline-for-today-5",
    "href": "class/9-maps/index.html#outline-for-today-5",
    "title": "Lecture 5. Maps",
    "section": "Outline for today",
    "text": "Outline for today\n\nTypes of maps for spatial data\nMap design considerations (color, scale, projection, legend)\nR packages for mapping\nStatic maps with tmap\nInteractive maps with leaflet\nAccessing spatial data with tigris and tidycensus"
  },
  {
    "objectID": "class/9-maps/index.html#getting-data-with-tigris",
    "href": "class/9-maps/index.html#getting-data-with-tigris",
    "title": "Lecture 5. Maps",
    "section": "Getting Data with tigris",
    "text": "Getting Data with tigris\n\nThe {tigris} package provides access to U.S. Census Bureau geographic data. Shapefiles downloaded using {tigris} will be loaded as a simple features (sf) object with geometries.\n\n\n\n\n\nA shapefile is a vector data file format commonly used for geospatial analysis.\nShapefiles contain information for spatially describing features (e.g. points, lines, polygons), as well as any associated attribute information.\nYou can find / download shapefiles online (e.g. from the US Census Bureau), or depending on the tools available, access them via packages (like we’re doing today)."
  },
  {
    "objectID": "class/9-maps/index.html#getting-u.s.-county-shapefiles",
    "href": "class/9-maps/index.html#getting-u.s.-county-shapefiles",
    "title": "Lecture 5. Maps",
    "section": "Getting U.S. County Shapefiles",
    "text": "Getting U.S. County Shapefiles\n\nEntire US\n\nlibrary(tigris)\nlibrary(sf)\ncounties &lt;- counties(state = NULL, cb = TRUE, progress_bar = FALSE) \n# Use `cb = TRUE` for simplified geometries\nglimpse(counties)\n\nRows: 3,235\nColumns: 13\n$ STATEFP    &lt;chr&gt; \"01\", \"01\", \"01\", \"10\", \"01\", \"01\", \"04\", \"05\", \"05\", \"05\",…\n$ COUNTYFP   &lt;chr&gt; \"069\", \"023\", \"113\", \"005\", \"071\", \"089\", \"015\", \"017\", \"12…\n$ COUNTYNS   &lt;chr&gt; \"00161560\", \"00161537\", \"00161583\", \"00217269\", \"00161561\",…\n$ GEOIDFQ    &lt;chr&gt; \"0500000US01069\", \"0500000US01023\", \"0500000US01113\", \"0500…\n$ GEOID      &lt;chr&gt; \"01069\", \"01023\", \"01113\", \"10005\", \"01071\", \"01089\", \"0401…\n$ NAME       &lt;chr&gt; \"Houston\", \"Choctaw\", \"Russell\", \"Sussex\", \"Jackson\", \"Madi…\n$ NAMELSAD   &lt;chr&gt; \"Houston County\", \"Choctaw County\", \"Russell County\", \"Suss…\n$ STUSPS     &lt;chr&gt; \"AL\", \"AL\", \"AL\", \"DE\", \"AL\", \"AL\", \"AZ\", \"AR\", \"AR\", \"AR\",…\n$ STATE_NAME &lt;chr&gt; \"Alabama\", \"Alabama\", \"Alabama\", \"Delaware\", \"Alabama\", \"Al…\n$ LSAD       &lt;chr&gt; \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\",…\n$ ALAND      &lt;dbl&gt; 1501742250, 2365900084, 1660653961, 2424590442, 2792044612,…\n$ AWATER     &lt;dbl&gt; 4795418, 19114321, 15562947, 674129051, 126334711, 28756353…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((-85.71209 3..., MULTIPOLYGON (…\n\n\n\nOne state\n\nlibrary(tigris)\nlibrary(sf)\ncounties_md &lt;- counties(state = \"Maryland\", cb = TRUE, progress_bar = FALSE) \n# Use `cb = TRUE` for simplified geometries\nglimpse(counties_md)\n\nRows: 24\nColumns: 13\n$ STATEFP    &lt;chr&gt; \"24\", \"24\", \"24\", \"24\", \"24\", \"24\", \"24\", \"24\", \"24\", \"24\",…\n$ COUNTYFP   &lt;chr&gt; \"005\", \"019\", \"017\", \"015\", \"041\", \"037\", \"039\", \"011\", \"03…\n$ COUNTYNS   &lt;chr&gt; \"01695314\", \"00596495\", \"01676992\", \"00596115\", \"00592947\",…\n$ GEOIDFQ    &lt;chr&gt; \"0500000US24005\", \"0500000US24019\", \"0500000US24017\", \"0500…\n$ GEOID      &lt;chr&gt; \"24005\", \"24019\", \"24017\", \"24015\", \"24041\", \"24037\", \"2403…\n$ NAME       &lt;chr&gt; \"Baltimore\", \"Dorchester\", \"Charles\", \"Cecil\", \"Talbot\", \"S…\n$ NAMELSAD   &lt;chr&gt; \"Baltimore County\", \"Dorchester County\", \"Charles County\", …\n$ STUSPS     &lt;chr&gt; \"MD\", \"MD\", \"MD\", \"MD\", \"MD\", \"MD\", \"MD\", \"MD\", \"MD\", \"MD\",…\n$ STATE_NAME &lt;chr&gt; \"Maryland\", \"Maryland\", \"Maryland\", \"Maryland\", \"Maryland\",…\n$ LSAD       &lt;chr&gt; \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\", \"06\",…\n$ ALAND      &lt;dbl&gt; 1549740649, 1400573750, 1185745253, 896912542, 695556093, 9…\n$ AWATER     &lt;dbl&gt; 215957832, 1145353067, 479451413, 185281256, 539369000, 105…\n$ geometry   &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((-76.3257 39..., MULTIPOLYGON (…"
  },
  {
    "objectID": "class/9-maps/index.html#getting-census-data-with-tidycensus",
    "href": "class/9-maps/index.html#getting-census-data-with-tidycensus",
    "title": "Lecture 5. Maps",
    "section": "Getting Census Data with tidycensus",
    "text": "Getting Census Data with tidycensus\n\nlibrary(tidycensus)\ninvisible(\n  census_api_key(Sys.getenv(\"CENSUS_API_KEY\"), install = TRUE, overwrite = TRUE)\n)\noptions(tigris_use_cache = TRUE)\nincome_md &lt;- get_acs(geography = \"county\", \n  state = \"MD\",\n  variables = \"B19013_001\", \n  geometry = FALSE,\n  show_progress = FALSE)\n\n\nLab 5 has a tutorial on how to get started with {tidycensus} packages. Follow it carefully. Remember to add your .Renviron to .gitignore so that you do not share your API keys."
  },
  {
    "objectID": "class/9-maps/index.html#plotting-census-data",
    "href": "class/9-maps/index.html#plotting-census-data",
    "title": "Lecture 5. Maps",
    "section": "Plotting Census Data",
    "text": "Plotting Census Data\n\ntmap_mode(\"plot\")\nincome_md &lt;- counties_md |&gt; \n  left_join(income_md, by = c(\"GEOID\" = \"GEOID\")) # join the income data to the counties\ntm_shape(income_md) + \n  tm_polygons(\"estimate\", palette = \"Blues\", title = \"Median Income\")"
  },
  {
    "objectID": "class/9-maps/index.html#section",
    "href": "class/9-maps/index.html#section",
    "title": "Lecture 5. Maps",
    "section": "",
    "text": "Your turn in HW 5:\n\nChoose a U.S. state\nDownload county shapefiles with tigris or tidycensus\nPlot a choropleth using tmap\nAdd labels and legends\n\n\n\n\n\n−+\n15:00"
  },
  {
    "objectID": "class/9-maps/index.html#summary",
    "href": "class/9-maps/index.html#summary",
    "title": "Lecture 5. Maps",
    "section": "Summary",
    "text": "Summary\n\nChoose the right map for the data and audience\nMake thoughtful color and projection choices\nUse tmap for quick static/interactive maps\nUse leaflet for rich interactivity\nAccess geographic data via tigris and tidycensus"
  },
  {
    "objectID": "class/9-maps/index.html#end-of-class-survey",
    "href": "class/9-maps/index.html#end-of-class-survey",
    "title": "Lecture 5. Maps",
    "section": "End-of-Class Survey",
    "text": "End-of-Class Survey\n  \n\n\n Fill out the end-of-class survey\n\n\n~ This is the end of Lecture 5 ~\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#outline-for-today",
    "href": "class/8-final-project-plan/index.html#outline-for-today",
    "title": "Lab 4. Final Project Plan",
    "section": "Outline for today",
    "text": "Outline for today\n\nOverview of common public data repository for developing data visualization projects\nForm final project teams\nGitHub flow for project collaboration\nProject Kick-off"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#where-to-start",
    "href": "class/8-final-project-plan/index.html#where-to-start",
    "title": "Lab 4. Final Project Plan",
    "section": "Where to start",
    "text": "Where to start\n\nThe world is full of data—but finding the right dataset takes intention.\nGood datasets are:\n\nPublicly accessible\nClean or well-documented\nRelevant to your story\n\nGW Library has a research guide that can help you get started."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#large-searchable-databases",
    "href": "class/8-final-project-plan/index.html#large-searchable-databases",
    "title": "Lab 4. Final Project Plan",
    "section": "Large, searchable databases",
    "text": "Large, searchable databases\n\nGoogle Dataset Search\nLike Google, but just for datasets.\nKaggle Datasets\nGreat for curated and crowd-sourced datasets across domains.\nUCI Machine Learning Repository\nClassic datasets for machine learning and data science.\nHarvard Dataverse A repository for sharing and archiving research data, open to all researchers regardless of Harvard affiliation.\nICPSR\nInter-university Consortium for Political and Social Research, an international consortium of more than 810 academic institutions and research organizations, with a focus on social science data."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#government-intergovernmental-data",
    "href": "class/8-final-project-plan/index.html#government-intergovernmental-data",
    "title": "Lab 4. Final Project Plan",
    "section": "Government & intergovernmental data",
    "text": "Government & intergovernmental data\n\n\nData.gov U.S. government datasets across topics.\nUS Census Data Demographic, economic, and geographic data from the U.S. Census Bureau.\nEU Open Data Portal Datasets from the European Union institutions and bodies.\nWorld Bank Data Global development indicators and statistics.\nUN Data United Nations datasets on various global issues.\nOECD Data Economic and social data from OECD countries.\nChina Data Archive A collection of datasets related to China, including social, economic, and environmental data.\nopenAFRICA A platform for sharing open data from Africa, including government, NGO, and private sector datasets."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#curated-community-data-sources",
    "href": "class/8-final-project-plan/index.html#curated-community-data-sources",
    "title": "Lab 4. Final Project Plan",
    "section": "Curated & community data sources",
    "text": "Curated & community data sources\n\nTidy Tuesday Weekly data challenges with R, great for practice.\nMakeover Monday Weekly data visualization challenges with a focus on redesigning existing visualizations.\nTableau: Free Public Datasets\nExplore and download public visualizations and underlying data.\nData for Good at Meta Meta’s Data for Good program provides access to datasets for social good projects.\nAWS Data Exchange\nAmazon Web Services’ marketplace for data, including free and paid datasets across various domains. —"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#r-packages-with-built-in-data",
    "href": "class/8-final-project-plan/index.html#r-packages-with-built-in-data",
    "title": "Lab 4. Final Project Plan",
    "section": "R packages with built-in data",
    "text": "R packages with built-in data\n\nfivethirtyeight – Datasets from FiveThirtyEight journalism\ngapminder – Development stats across countries\nbabynames – U.S. baby name trends (SSA)\nnycflights13 – Flight data from NYC airports in 2013\ndslabs, DAAG, MASS – Rich with demo data"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#spatial-environmental-data",
    "href": "class/8-final-project-plan/index.html#spatial-environmental-data",
    "title": "Lab 4. Final Project Plan",
    "section": "Spatial & environmental data",
    "text": "Spatial & environmental data\n\nEnviroAtlas\nEPA EnviroAtlas, a collection of spatial data on environmental and human health.\nNational Centers for Environmental Information\nNOAA’s National Centers for Environmental Information, providing access to climate and weather data.\nUSGS Earth Explorer U.S. Geological Survey’s Earth Explorer, a tool for searching and downloading satellite imagery, aerial photography, digital elevation model data, land cover data, and many others.\nSEDAC (Columbia Univ.) Socioeconomic data and applications center, synthesizes earth science and socioeconomic into gridded data"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#public-health-healthcare-data",
    "href": "class/8-final-project-plan/index.html#public-health-healthcare-data",
    "title": "Lab 4. Final Project Plan",
    "section": "Public health & healthcare data",
    "text": "Public health & healthcare data\n\nCDC Data & Statistics\nPublic health datasets from the Centers for Disease Control and Prevention.\nNational Environmental Public Health Tracking Network\nCDC’s Environmental Public Health Tracking Network, providing data on environmental hazards and health effects.\nWHO Global Health Observatory World Health Organization’s data on global health indicators.\nHealthData.gov U.S. health datasets, including Medicare, Medicaid, and public health data.\nNCHS Data National Center for Health Statistics datasets on health statistics in the U.S."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#pro-tips",
    "href": "class/8-final-project-plan/index.html#pro-tips",
    "title": "Lab 4. Final Project Plan",
    "section": "Pro Tips",
    "text": "Pro Tips\n\nStart with your story → then find data\nPrioritize quality over size\nDouble check data license and usage rights\nDocument your data source in your project\n\n\nNow let’s explore and build something great!"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#outline-for-today-1",
    "href": "class/8-final-project-plan/index.html#outline-for-today-1",
    "title": "Lab 4. Final Project Plan",
    "section": "Outline for today",
    "text": "Outline for today\n\nOverview of common public data repository for developing data visualization projects\nForm final project teams\nGitHub flow for project collaboration\nProject Kick-off"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#introducing-the-five-fantastic-teams",
    "href": "class/8-final-project-plan/index.html#introducing-the-five-fantastic-teams",
    "title": "Lab 4. Final Project Plan",
    "section": "Introducing the five fantastic teams!",
    "text": "Introducing the five fantastic teams!"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#team-homer",
    "href": "class/8-final-project-plan/index.html#team-homer",
    "title": "Lab 4. Final Project Plan",
    "section": "Team Homer",
    "text": "Team Homer\n\nMembers: Alia Jamil, Nina Wubu\nTopic: Climate, natural disasters and health disparities"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#team-marge",
    "href": "class/8-final-project-plan/index.html#team-marge",
    "title": "Lab 4. Final Project Plan",
    "section": "Team Marge",
    "text": "Team Marge\n\nMembers: Amel Attalla, Belen Zemas\nTopic: Sexual health and vulnerable populations"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#team-bart",
    "href": "class/8-final-project-plan/index.html#team-bart",
    "title": "Lab 4. Final Project Plan",
    "section": "Team Bart",
    "text": "Team Bart\n\nMembers: Sora Ely, Ashlan Jackson\nTopic: Health systems and global health"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#team-lisa",
    "href": "class/8-final-project-plan/index.html#team-lisa",
    "title": "Lab 4. Final Project Plan",
    "section": "Team Lisa",
    "text": "Team Lisa\n\nMembers: Riya Belani, Molayo Ifebajo\nTopic: Behavioral health and digital platforms"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#team-maggie",
    "href": "class/8-final-project-plan/index.html#team-maggie",
    "title": "Lab 4. Final Project Plan",
    "section": "Team Maggie",
    "text": "Team Maggie\n\nMembers: Jordi Fischbach, Ahmed Shah\nTopic: To be determined"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#outline-for-today-2",
    "href": "class/8-final-project-plan/index.html#outline-for-today-2",
    "title": "Lab 4. Final Project Plan",
    "section": "Outline for today",
    "text": "Outline for today\n\nOverview of common public data repository for developing data visualization projects\nForm final project teams\nGitHub flow for project collaboration\nProject Kick-off"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#introducing-github-flow",
    "href": "class/8-final-project-plan/index.html#introducing-github-flow",
    "title": "Lab 4. Final Project Plan",
    "section": "Introducing GitHub Flow",
    "text": "Introducing GitHub Flow\n\n\nImage by Yan Min Thwin"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#create-local-branches-with-git",
    "href": "class/8-final-project-plan/index.html#create-local-branches-with-git",
    "title": "Lab 4. Final Project Plan",
    "section": "Create local branches with Git",
    "text": "Create local branches with Git\n\n\n\n\n\n\n\nTip\n\n\nYou can do these using the Git GUI in RStudio, I am showing you the command line version so you can learn a different method and choose what you prefer.\n\n\n\n\n\nIn RStudio click the Terminal tab in the lower left pane, next to the Console tab\n\n\n\n\n\n\n\n\nNote\n\n\nIf you cannot find the Terminal tab, you can also open a terminal window by clicking on the Tools menu and selecting Terminal &gt; New Terminal. If that doesn’t work, check if your RStudio is out of date. Click Help, About RStudio to check the current version."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#create-local-branches-with-git-1",
    "href": "class/8-final-project-plan/index.html#create-local-branches-with-git-1",
    "title": "Lab 4. Final Project Plan",
    "section": "Create local branches with Git",
    "text": "Create local branches with Git\n\nIn the terminal, type the following command to create a new branch called feat/clean-data:\n\ngit checkout -b feat/clean-data\n\n\nType the following command to check that you are on the new branch:\n\ngit status\nYou should see a message that says “On branch feat/clean-data” and “nothing to commit, working tree clean”.\nYou are ready to start making changes to your files!"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#make-local-changes-with-git",
    "href": "class/8-final-project-plan/index.html#make-local-changes-with-git",
    "title": "Lab 4. Final Project Plan",
    "section": "Make local changes with Git",
    "text": "Make local changes with Git\nIn RStudio, open the 4-lab4.qmd file and make some changes to the text.\nFor example, you can add a new section called “Data Wrangling” and write a few sentences about what tidy data is about.\nYou can also add a new code chunk to the file and write some R code to load the tidyverse package and read in a CSV file.\n\nlibrary(tidyverse)\nraw_data &lt;- read_csv(\"raw_data.csv\")\n\nAfter you are satisfied with your changes, save the file and knit the 4-lab4.qmd file to generate the HTML file."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#commit-local-changes-with-git",
    "href": "class/8-final-project-plan/index.html#commit-local-changes-with-git",
    "title": "Lab 4. Final Project Plan",
    "section": "Commit local changes with Git",
    "text": "Commit local changes with Git\n\nDetermine your file’s status.\n\ngit status\nYou should see a message that says “On branch feat/clean-data” and “Changes not staged for commit”.\n\nAdd the changes to the staging area.\n\ngit add .\n\nSee your file’s current status.\n\ngit status\nYour files should be listed under Changes to be committed.\n\nCommit the changes with a message. Replace  with a log message describing the changes.\n\ngit commit -m \"&lt;COMMIT-MESSAGE&gt;\""
  },
  {
    "objectID": "class/8-final-project-plan/index.html#open-a-pull-request-on-github",
    "href": "class/8-final-project-plan/index.html#open-a-pull-request-on-github",
    "title": "Lab 4. Final Project Plan",
    "section": "Open a pull request on GitHub",
    "text": "Open a pull request on GitHub\n\nPush the changes to the remote repository, replace  with the name of your branch, in this case feat/clean-data\n\ngit push origin &lt;BRANCH-NAME&gt;\n\nNavigate to your GitHub repository in your browser\nClick the Compare & pull requests button, if you don’t see it, navigate to the “Pull requests” tab and click the New pull reques button.\nIn the “Open a pull request” page, enter a title and description for your pull request. You can add a reviewer, for example your teammate on this pull request."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#merge-your-pull-request-on-github",
    "href": "class/8-final-project-plan/index.html#merge-your-pull-request-on-github",
    "title": "Lab 4. Final Project Plan",
    "section": "Merge your pull request on GitHub",
    "text": "Merge your pull request on GitHub\n\n\n\n\n\n\n\nNote\n\n\nSince this is your repository, you probably don’t have anyone to collaborate with (yet). Go ahead and merge your Pull Request now. Later in the semester you may want your teammate to look over your code before they merge.\n\n\n\n\n\nOn GitHub, navigate to the Pull Request that you just opened.\nScroll down and click the big green Merge Pull Request button.\nClick Confirm Merge.\nDelete the branch .\n\n\n  \nReference: GitHub and RStudio"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#congratulations",
    "href": "class/8-final-project-plan/index.html#congratulations",
    "title": "Lab 4. Final Project Plan",
    "section": "Congratulations",
    "text": "Congratulations\nYou have become a better collaborator!\n\n\nSource: Allison Horst and Julia Lowndes"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#outline-for-today-3",
    "href": "class/8-final-project-plan/index.html#outline-for-today-3",
    "title": "Lab 4. Final Project Plan",
    "section": "Outline for today",
    "text": "Outline for today\n\nOverview of common public data repository for developing data visualization projects\nForm final project teams\nGitHub flow for project collaboration\nProject Kick-off"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#grading",
    "href": "class/8-final-project-plan/index.html#grading",
    "title": "Lab 4. Final Project Plan",
    "section": "Grading",
    "text": "Grading\n\n\n\nAssignment\nDescription\nWeight\n\n\n\n\nProject proposal\nYou did this for HW3. Outlines your topic, research questions, and initial ideas\n7%\n\n\nProject plan\nYou are doing this for Lab4. Includes your final topic, selected data sources, and visualization plan\n3%\n\n\nProject prototype V1\nYou will bring this to class on June 24th and meet one-on-one with the teaching team to get feedback\n7%\n\n\nFinal data visualization product\nInclude at least three polished visualizations that answer your research questions\n18%\n\n\nFinal project presentation\nYou will present your project in a short, engaging walkthrough in class on June 26th\n10%\n\n\nPeer evaluation for final project\nYou will complete this in class on June 26th to provide constructive feedback to your peers\n5%"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#project-schedule",
    "href": "class/8-final-project-plan/index.html#project-schedule",
    "title": "Lab 4. Final Project Plan",
    "section": "Project schedule",
    "text": "Project schedule\n\n\n\nWeek\nDue date\nDeliverable\n\n\n\n\n4\nJune 9\nProject proposal\n\n\n5\nJune 16\nProject plan\n\n\n6\nJune 24\nProject prototype V1\n\n\n6\nJune 26\nFinal data visualization product\n\n\n6\nJune 26\nFinal project presentation\n\n\n6\nJune 26\nPeer evaluation for final project"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#team-policies",
    "href": "class/8-final-project-plan/index.html#team-policies",
    "title": "Lab 4. Final Project Plan",
    "section": "Team policies",
    "text": "Team policies\n\nHow and when you will meet: regular meeting time\nHow you will communicate: Slack, email, etc.\nHow you will collaborate on implementation: GitHub, Google Drive, etc.\nHow you will review each other’s work: code reviews, feedback sessions, etc.\nHow you will deal with non-performing members: discuss openly, involve a neutral party if needed, etc."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#section",
    "href": "class/8-final-project-plan/index.html#section",
    "title": "Lab 4. Final Project Plan",
    "section": "",
    "text": "In-Class Activity:\n\nFill in the team expectation agreement in 4-lab4.qmd\nStart a TODO list, including:\n\n\n\n\nTask\nDeadline\nPerson responsible\n\n\n\n\n(e.g.) set up GitHub repo\nJune 13\nSilas\n\n\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#project-plan",
    "href": "class/8-final-project-plan/index.html#project-plan",
    "title": "Lab 4. Final Project Plan",
    "section": "Project plan",
    "text": "Project plan\n\nName of all students who worked on this project plan\nTeam name\nDefine the topic, goals, and tasks of your project (300 - 400 words)\nA description of the data you will use, including:\n\nSource of the data\nHow you will access the data\nAny data cleaning or wrangling you anticipate needing to do\n\nAt least 3 sketches of visualization ideas for your project\nA sketch of your dashboard layout/storytelling flow\nA project timeline with milestones when you will complete each task\nA feature list (must-have, good-to-have, optional)\nA description of team roles and responsibilities"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#prototype-v1",
    "href": "class/8-final-project-plan/index.html#prototype-v1",
    "title": "Lab 4. Final Project Plan",
    "section": "Prototype V1",
    "text": "Prototype V1\n\nData scraping and cleaning complete (using real world datasets, do not use R built-in data)\nAt least one visualization already implemented, and draft for 2-3 more visualizations\nIf choosing R shiny app, rough webpage design and structure has to be done and implemented (placeholders for visualizations)\nIf choosing the other two options, clear outline and storytelling flow of the visualizations\nA README.md file in your GitHub repo that describes your project, how to view it, and any dependencies"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#final-data-visualization-product",
    "href": "class/8-final-project-plan/index.html#final-data-visualization-product",
    "title": "Lab 4. Final Project Plan",
    "section": "Final data visualization product",
    "text": "Final data visualization product\nChoose one from the following three options:\n\nSame Question, Different Audiences (3 static charts): Create three visualizations that answer the same question, each designed for a different audience (e.g., general public, policy makers, technical experts).\nSame Data, Different Questions (3 static charts): Use the same dataset to answer three different but related questions, each with its own focused visualization.\nInteractive Dashboard (1 app with 3 components): Build an interactive dashboard (e.g., with shiny, plotly, or similar tools) that includes at least three visual components for exploring your data dynamically.\n\n\nAccompanying your visualizations, you should also include a write-up around 500-1000 words that consists of an introduction, research questions, data sources, data wrangling, data visualizations, findings, and conclusion."
  },
  {
    "objectID": "class/8-final-project-plan/index.html#final-project-presentation",
    "href": "class/8-final-project-plan/index.html#final-project-presentation",
    "title": "Lab 4. Final Project Plan",
    "section": "Final project presentation",
    "text": "Final project presentation\n\n10 minutes presentation\nWhat questions do you set out to answer with your visualizations? Why are they important?\nYour data source and why they are chosen to answer your questions\nYour intended audience\nTwo to three visualization design choices and how they help tell your story\nTwo to three takeaways from your visualizations that your audience should remember\nLive demo of your visualizations (if applicable)\nOne to two challenges you encountered during this project and how you overcame them\nOne to two achievements you are proud of in this project\nThe presentation format is flexible, bring your laptop to present, and submit the presentation and final data visualization product as HW6"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#evaluation",
    "href": "class/8-final-project-plan/index.html#evaluation",
    "title": "Lab 4. Final Project Plan",
    "section": "Evaluation",
    "text": "Evaluation\n\n\nSource: CS171"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#evaluation-methods",
    "href": "class/8-final-project-plan/index.html#evaluation-methods",
    "title": "Lab 4. Final Project Plan",
    "section": "Evaluation methods",
    "text": "Evaluation methods\n\nWhat to evaluate?\n\nTarget:\n\nchoose domain: did you correctly understand users’ needs?\ndefine question: are you showing them the right thing?\n\nDesign:\n\ndesign visual encoding: does the way you show the data work?\n\nImplement:\n\nimplement visualization: does the code work? is it scalable?\n\n\n\nHow to evaluate?\n\nQualitative:\n\nObservational studies (“think aloud”)\nExpert interviews (design critiques)\nFocus groups\n\nQuantitative:\n\nA/B testing\nSurveys\nAnalytics (e.g., Google Analytics, Shiny Dashboard logs)"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#think-aloud-study",
    "href": "class/8-final-project-plan/index.html#think-aloud-study",
    "title": "Lab 4. Final Project Plan",
    "section": "Think aloud study",
    "text": "Think aloud study\n\n\nNaive (first time) users\nNo explanations and interference by evaluator\n\n“We are testing the system, not you.”\n“Will not answer any questions once started.”\n\nRemind subjects to talk about what they are doing"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#section-1",
    "href": "class/8-final-project-plan/index.html#section-1",
    "title": "Lab 4. Final Project Plan",
    "section": "",
    "text": "In-Class Activity: Think aloud study demo\nClimaWATCH\nhttps://climawatch.climate.mathematica.org/\nImagine you’re briefing a policymaker about heat risks in vulnerable counties. What would you show them from this tool?\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/8-final-project-plan/index.html#end-of-class-survey",
    "href": "class/8-final-project-plan/index.html#end-of-class-survey",
    "title": "Lab 4. Final Project Plan",
    "section": "End-of-Class Survey",
    "text": "End-of-Class Survey\n  \n\n\n Fill out the end-of-class survey\n\n\n~ This is the end of Lab 4 ~\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/7-r-shiny/index.html#outline-for-today",
    "href": "class/7-r-shiny/index.html#outline-for-today",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Outline for today",
    "text": "Outline for today\n\nWhat is R Shiny\nWrite a basic R shiny app\nDeploy your Shiny apps with shinyapps.io\nAI-powered help: using Shiny Assistant"
  },
  {
    "objectID": "class/7-r-shiny/index.html#about-r-shiny",
    "href": "class/7-r-shiny/index.html#about-r-shiny",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "About R Shiny",
    "text": "About R Shiny\n\nShiny is an R package that makes it easy to build interactive web applications (apps) straight from R\nShiny allows users to build dynamic, data-driven web apps without requiring extensive knowledge of web development\nTo install R Shiny run the following command in the console of your RStudio install.packages(\"shiny\")"
  },
  {
    "objectID": "class/7-r-shiny/index.html#key-features",
    "href": "class/7-r-shiny/index.html#key-features",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Key Features",
    "text": "Key Features\n\nInteractive Web Applications: Shiny makes web apps that respond to user inputs\nSeamless Integration with R: Users can leverage the full power of R, like data manipulation, statistical modeling, and plotting\nEasy Deployment using Shiny Cloud\nExtensibility: Shiny apps can be enhanced with custom HTML, CSS, and JavaScript"
  },
  {
    "objectID": "class/7-r-shiny/index.html#basic-structure-shiny-application",
    "href": "class/7-r-shiny/index.html#basic-structure-shiny-application",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Basic Structure Shiny Application",
    "text": "Basic Structure Shiny Application\n\nA typical Shiny application has two main components:\n\nUser Interface (UI): Defines the layout and appearance of the app, including input controls (like sliders and text boxes) and output displays (like plots and tables).\nServer Function: Contains the logic that processes inputs and generates outputs. It reacts to user interactions"
  },
  {
    "objectID": "class/7-r-shiny/index.html#visual-logic",
    "href": "class/7-r-shiny/index.html#visual-logic",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Visual Logic",
    "text": "Visual Logic\n\nHere we can see the visual logic behind a Shiny application"
  },
  {
    "objectID": "class/7-r-shiny/index.html#input-output-and-render",
    "href": "class/7-r-shiny/index.html#input-output-and-render",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "*Input(), *Output() and render*()",
    "text": "*Input(), *Output() and render*()\nThese three groups of functions are the core of Shiny’s reactive programming model:\n\n*Input(): Represents user inputs, such as text input, slider input, or checkbox input. For example, input$sliderValue retrieves the value of a slider input with the ID “sliderValue”.\n*Output(): Represents outputs that are displayed in the UI, such as plots, tables, or text. For example, output$histPlot refers to a plot output with the ID “histPlot”.\nrender*(): Functions that generate outputs based on inputs. For example, renderPlot() creates a plot output, and renderText() generates text output. These functions are reactive and will automatically update when the inputs change."
  },
  {
    "objectID": "class/7-r-shiny/index.html#input-function-syntax",
    "href": "class/7-r-shiny/index.html#input-function-syntax",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "*Input() function syntax",
    "text": "*Input() function syntax\nShiny input functions: sliderInput(), selectInput(), textInput() numericInput(), etc.\nGeneral format:\n\ninputFunction(inputId, label, value, ...)\n\n\ninputId: connects UI and server via input$inputId, must be a simple string without spaces, must be unique within the app\nlabel: text label for the input control, displayed in the UI\nvalue: initial value of the input control, can be a number, character, or logical value. For example:\n\n\n# use position for inputId and label\n# use named args for the rest\nsliderInput(\"min\", \"Limit (minimum)\", value = 50, min = 0, max = 100)"
  },
  {
    "objectID": "class/7-r-shiny/index.html#different-types-of-ui-inputs",
    "href": "class/7-r-shiny/index.html#different-types-of-ui-inputs",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Different types of UI Inputs",
    "text": "Different types of UI Inputs\n\n\nSource: Shiny for R cheatsheet"
  },
  {
    "objectID": "class/7-r-shiny/index.html#output-function-syntax",
    "href": "class/7-r-shiny/index.html#output-function-syntax",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "*Output() function syntax",
    "text": "*Output() function syntax\nShiny output functions: plotOutput(), tableOutput(), textOutput(), etc.\nWhat *Output() function does:\n\nOutput functions in the UI create placeholders.\nThese placeholders are filled by the server using a matching render*() function.\n\nGeneral format:\n\noutputFunction(outputId)\n\n\noutputId: connects UI and server via output$outputId, must be a simple string without spaces, must be unique within the app. For example:\n\n\nplotOutput(\"scatterplot\")\n\n\nAccessed in server as:\n\n\noutput$outputId &lt;- renderFunction({...})"
  },
  {
    "objectID": "class/7-r-shiny/index.html#output---render-pairing",
    "href": "class/7-r-shiny/index.html#output---render-pairing",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Output <-> Render pairing",
    "text": "Output &lt;-&gt; Render pairing\n\n# UI\nplotOutput(\"my_plot\")\n# Server\noutput$my_plot &lt;- renderPlot({\n  ggplot(data, aes(...)) + geom_point()\n})\n\n\n\nSource: Shiny for R cheatsheet"
  },
  {
    "objectID": "class/7-r-shiny/index.html#outline-for-today-1",
    "href": "class/7-r-shiny/index.html#outline-for-today-1",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Outline for today",
    "text": "Outline for today\n\nWhat is R Shiny\nWrite a basic R shiny app\nDeploy your Shiny apps with shinyapps.io\nAI-powered help: using Shiny Assistant"
  },
  {
    "objectID": "class/7-r-shiny/index.html#setting-up-a-shiny-app",
    "href": "class/7-r-shiny/index.html#setting-up-a-shiny-app",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Setting up a shiny app",
    "text": "Setting up a shiny app\n\nCreate a GitHub repo and clone the repo to our computer\nInstall R Shiny in your R environment : install.packages(\"shiny\")\nOrganize repo structure"
  },
  {
    "objectID": "class/7-r-shiny/index.html#two-options-for-shiny-apps",
    "href": "class/7-r-shiny/index.html#two-options-for-shiny-apps",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Two options for shiny apps",
    "text": "Two options for shiny apps\n\n\n\nSingle-File App: All code is in one file, typically named app.R. This is suitable for simple applications or creating a reprex example.\n\n\n\nTwo-File App: Code is split into multiple files, usually ui.R for the user interface and server.R for the server logic. Optionally, global.R can be used for data ingestion and wrangling. This is better for larger applications."
  },
  {
    "objectID": "class/7-r-shiny/index.html#create-a-single-file-shiny-app",
    "href": "class/7-r-shiny/index.html#create-a-single-file-shiny-app",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Create a single-file Shiny app",
    "text": "Create a single-file Shiny app\n\nCreate a new R script file named app.R\nThe file should contain both the UI and server components\nThe basic structure of a single-file Shiny app is as follows:\n\n\n# load packages ----\nlibrary(shiny)\n\n# user interface ----\nui &lt;- fluidPage()\n\n# server instructions ----\nserver &lt;- function(input, output) {}\n\n# combine UI & server into an app ----\nshinyApp(ui = ui, server = server)\n\n\nOnce you have this structure, RStudio recognize this is a R shiny app and you can run the app by clicking the “Run App” button in RStudio."
  },
  {
    "objectID": "class/7-r-shiny/index.html#lets-build-the-app-step-by-step",
    "href": "class/7-r-shiny/index.html#lets-build-the-app-step-by-step",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Let’s build the app step-by-step",
    "text": "Let’s build the app step-by-step\n\nWe will create a simple Shiny app that displays a histogram of random normal data\nThe app has a title and subtitle\nUsers can adjust the number of bins in the histogram using a slider input\nThe histogram will react to the slider input and update accordingly"
  },
  {
    "objectID": "class/7-r-shiny/index.html#code-breakdown-ui",
    "href": "class/7-r-shiny/index.html#code-breakdown-ui",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Code Breakdown UI",
    "text": "Code Breakdown UI\nCalling the library\n\nlibrary(shiny)\n\n\nDefine the User Interface (UI) of the app, consisting of a title, a subtitle, a slider input, and a plot output\n\nui &lt;- fluidPage(\n  # app title\n  \"Histogram Example\",\n  # app subtitle\n  \"Choose a number of bins to update the histogram\",\n  # slider input\n  sliderInput(\"bins\",\n              \"Number of bins:\",\n              min = 5, max = 50, value = 30),\n  # histogram output\n  plotOutput(\"histPlot\")\n)\n\n\n\nClick Run App, what do you see? what is different from what you imagined?"
  },
  {
    "objectID": "class/7-r-shiny/index.html#ui-work-in-progress",
    "href": "class/7-r-shiny/index.html#ui-work-in-progress",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "UI Work-in-Progress",
    "text": "UI Work-in-Progress\n\n\n\n\nThere is no distinction between title and subtitle\nThere is no plot"
  },
  {
    "objectID": "class/7-r-shiny/index.html#adding-hierarchy-to-the-text",
    "href": "class/7-r-shiny/index.html#adding-hierarchy-to-the-text",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Adding hierarchy to the text",
    "text": "Adding hierarchy to the text\n\n\nui &lt;- fluidPage(\n  # app title\n  h1(\"Histogram Example\"),\n  # app subtitle\n  h4(strong(\"Choose a number of bins to update the histogram\")),\n  # slider input\n  sliderInput(\"bins\",\n              \"Number of bins:\",\n              min = 5, max = 50, value = 30),\n  # histogram output\n  plotOutput(\"histPlot\")\n)"
  },
  {
    "objectID": "class/7-r-shiny/index.html#plot-placeholder-is-present",
    "href": "class/7-r-shiny/index.html#plot-placeholder-is-present",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Plot placeholder is present",
    "text": "Plot placeholder is present\nWhen developing with R shiny, it is recommended that you use Google Chrome browser, and learn how to inspect html pages by right-clicking on the page and selecting “Inspect” or pressing Ctrl + Shift + I (Windows/Linux) or Cmd + Option + I (Mac).\n\nBut the plot is not there yet, we need to add the server logic to create the plot."
  },
  {
    "objectID": "class/7-r-shiny/index.html#code-breakdown-server",
    "href": "class/7-r-shiny/index.html#code-breakdown-server",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Code Breakdown: Server",
    "text": "Code Breakdown: Server\nServer takes the inputs and create a reactive chart\n\nserver &lt;- function(input, output) {\n  \n  output$histPlot &lt;- renderPlot({\n    # Generate random data\n    data &lt;- rnorm(500)\n    \n    # Create histogram with user-specified bins\n    hist(data, breaks = 30, col = \"skyblue\",\n         border = \"white\", main = \"Histogram of Random Normal Data\",\n         xlab = \"Value\", ylab = \"Frequency\")\n  })\n}\n\nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "class/7-r-shiny/index.html#running-the-app",
    "href": "class/7-r-shiny/index.html#running-the-app",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Running the App",
    "text": "Running the App\n\nSave the code to an R script file, e.g., app.R.\nIn your R console, run shiny::runApp(\"app.R\")"
  },
  {
    "objectID": "class/7-r-shiny/index.html#how-to-make-it-reactive",
    "href": "class/7-r-shiny/index.html#how-to-make-it-reactive",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "How to make it reactive?",
    "text": "How to make it reactive?\n\nThis will not react to user input because the number of bins is always 30.\n\nserver &lt;- function(input, output) {\n  output$histPlot &lt;- renderPlot({\n    # Generate random data\n    data &lt;- rnorm(500)\n    # Create histogram with user-specified bins\n    hist(data, breaks = 30, col = \"skyblue\",\n         border = \"white\", main = \"Histogram of Random Normal Data\",\n         xlab = \"Value\", ylab = \"Frequency\")\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\n\n\n\nThis takes in user input and uses it to create a histogram with the specified number of bins.\n\nserver &lt;- function(input, output) {\n  output$histPlot &lt;- renderPlot({\n    # Generate random data\n    data &lt;- rnorm(500)\n    # Create histogram with user-specified bins\n    hist(data, breaks = input$bins, col = \"skyblue\",\n         border = \"white\", main = \"Histogram of Random Normal Data\",\n         xlab = \"Value\", ylab = \"Frequency\")\n  })\n}\n\nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "class/7-r-shiny/index.html#this-is-what-we-have-now",
    "href": "class/7-r-shiny/index.html#this-is-what-we-have-now",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "This is what we have now",
    "text": "This is what we have now\n\n\nui &lt;- fluidPage(\n  # app title\n  h1(\"Histogram Example\"),\n  # app subtitle\n  h4(strong(\"Choose a number of bins to update the histogram\")),\n  # slider input\n  sliderInput(\"bins\",\n              \"Number of bins:\",\n              min = 5, max = 50, value = 30),\n  # histogram output\n  plotOutput(\"histPlot\")\n)\n\n# Server\nserver &lt;- function(input, output) {\n\n  output$histPlot &lt;- renderPlot({\n    # Generate random data\n    data &lt;- rnorm(500)\n\n    # Create histogram with user-specified bins\n    hist(data, breaks = input$bins, col = \"skyblue\",\n         border = \"white\", main = \"Histogram of Random Normal Data\",\n         xlab = \"Value\", ylab = \"Frequency\")\n  })\n}\n\n# Run the app\nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "class/7-r-shiny/index.html#adding-visual-structures",
    "href": "class/7-r-shiny/index.html#adding-visual-structures",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Adding visual structures",
    "text": "Adding visual structures\n\n\nui &lt;- fluidPage(\n  titlePanel(\"Histogram Example\"),\n  h4(strong(\"Choose a number of bins to update the histogram\")),\n  \n  sidebarLayout(\n    sidebarPanel(\n      sliderInput(\"bins\",\n                  \"Number of bins:\",\n                  min = 5, max = 50, value = 30)\n    ),\n\n    mainPanel(\n      plotOutput(\"histPlot\")\n    )\n  )\n)\n\n# Server\nserver &lt;- function(input, output) {\n\n  output$histPlot &lt;- renderPlot({\n    # Generate random data\n    data &lt;- rnorm(500)\n\n    # Create histogram with user-specified bins\n    hist(data, breaks = input$bins, col = \"skyblue\",\n         border = \"white\", main = \"Histogram of Random Normal Data\",\n         xlab = \"Value\", ylab = \"Frequency\")\n  })\n}\n\n# Run the app\nshinyApp(ui = ui, server = server)"
  },
  {
    "objectID": "class/7-r-shiny/index.html#section",
    "href": "class/7-r-shiny/index.html#section",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "",
    "text": "In-Class Activity:\nAdd a second slider input so that the app reacts to the number of random data points generated for the histogram.\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/7-r-shiny/index.html#finished-app-with-two-slider-inputs",
    "href": "class/7-r-shiny/index.html#finished-app-with-two-slider-inputs",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Finished app with two slider inputs",
    "text": "Finished app with two slider inputs"
  },
  {
    "objectID": "class/7-r-shiny/index.html#two-file-shiny-app-with-a-dataset",
    "href": "class/7-r-shiny/index.html#two-file-shiny-app-with-a-dataset",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Two-file shiny app with a dataset",
    "text": "Two-file shiny app with a dataset\nIn this tutorial, we will build an interactive R Shiny application step-by-step. Our app will:\n\nDisplay a scatter plot using the mtcars dataset\nAllow users to choose x-axis and y-axis variables\nEnable plot color customization by a third variable\nLabel points with car names"
  },
  {
    "objectID": "class/7-r-shiny/index.html#global.r-load-libraries-clean-data",
    "href": "class/7-r-shiny/index.html#global.r-load-libraries-clean-data",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "global.R: load libraries, clean data",
    "text": "global.R: load libraries, clean data\n\nlibrary(shiny)\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Data wrangling: Add a car name column and factor variables\nmtcars_clean &lt;- mtcars %&gt;%\n  tibble::rownames_to_column(\"car\") %&gt;%\n  mutate(\n    cyl = as.factor(cyl),\n    gear = as.factor(gear)\n  )\nglimpse(mtcars_clean)\n\nRows: 32\nColumns: 12\n$ car  &lt;chr&gt; \"Mazda RX4\", \"Mazda RX4 Wag\", \"Datsun 710\", \"Hornet 4 Drive\", \"Ho…\n$ mpg  &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  &lt;fct&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear &lt;fct&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…"
  },
  {
    "objectID": "class/7-r-shiny/index.html#ui.r-define-user-interface",
    "href": "class/7-r-shiny/index.html#ui.r-define-user-interface",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "ui.R: define user interface",
    "text": "ui.R: define user interface\n\nui &lt;- fluidPage(\n  titlePanel(\"Interactive Scatter Plot - mtcars\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      selectInput(\"xvar\", \"Choose X-axis variable:\", choices = names(mtcars), selected = \"wt\"),\n      selectInput(\"yvar\", \"Choose Y-axis variable:\", choices = names(mtcars), selected = \"mpg\"),\n      selectInput(\"colorvar\", \"Choose color variable:\", choices = names(mtcars), selected = \"cyl\"),\n    ),\n    mainPanel(\n      plotOutput(\"scatterPlot\")\n    )\n  )\n)"
  },
  {
    "objectID": "class/7-r-shiny/index.html#intermediate-step-make-ggplot-in-scratch.r",
    "href": "class/7-r-shiny/index.html#intermediate-step-make-ggplot-in-scratch.r",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Intermediate step: make ggplot in scratch.R",
    "text": "Intermediate step: make ggplot in scratch.R\nThis is not a must but highly recommend, you can test out your ggplot code in a separate R script file, e.g., scratch.R, before integrating it into the Shiny app.\n\n\n\nggplot(mtcars_clean, aes(x = wt, y = mpg)) +\n  geom_point(aes(color = cyl)) +\n  ggrepel::geom_text_repel(aes(label = car), vjust = -1, size = 3) +\n  labs(\n    title = \"Scatter Plot of MPG vs Weight\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "class/7-r-shiny/index.html#server.r-adapt-regular-ggplot-code",
    "href": "class/7-r-shiny/index.html#server.r-adapt-regular-ggplot-code",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "server.R: adapt regular ggplot code",
    "text": "server.R: adapt regular ggplot code\n\nscratch.R\n\nggplot(mtcars_clean, aes(x = wt, y = mpg)) +\n  geom_point(aes(color = cyl)) +\n  geom_text(aes(label = car), vjust = -1, size = 3) +\n  labs(\n    title = \"Scatter Plot of MPG vs Weight\"\n  ) +\n  theme_minimal()\n\n\nRegular ggplot code for scatter plot\nx-axis is wt\ny-axis is mpg\ncolor by cyl\nlabel points with car names\n\n\n\n\nserver.R\n\nserver &lt;- function(input, output) {\n  # Render the plot\n  output$scatterPlot &lt;- renderPlot({\n    ggplot(mtcars_clean, aes_string(x = input$xvar, y = input$yvar)) +\n      geom_point(aes_string(color = input$colorvar), size = 3) +\n      geom_text(aes(label = car), vjust = -1, size = 3) +\n      theme_minimal() +\n      labs(title = paste(\"Scatter Plot of\", input$yvar, \"vs\", input$xvar),\n           x = input$xvar, y = input$yvar)\n  })\n}\n\n\nAdapt the ggplot code to use aes_string() for dynamic variable selection\nUse input$xvar, input$yvar, and input$colorvar to make the plot reactive"
  },
  {
    "objectID": "class/7-r-shiny/index.html#run-the-two-file-shiny-app",
    "href": "class/7-r-shiny/index.html#run-the-two-file-shiny-app",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Run the two-file Shiny app",
    "text": "Run the two-file Shiny app\nNo need for shinyApp(ui = ui, server = server) when you have two-file app structure:\n\nSave the ui.R and server.R files in the same directory\nShiny automatically stitch them together, and optionally look for global.R.\nIn RStudio, click the Run App button"
  },
  {
    "objectID": "class/7-r-shiny/index.html#outline-for-today-2",
    "href": "class/7-r-shiny/index.html#outline-for-today-2",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Outline for today",
    "text": "Outline for today\n\nWhat is R Shiny\nWrite a basic R shiny app\nDeploy your Shiny apps with shinyapps.io\nAI-powered help: using Shiny Assistant"
  },
  {
    "objectID": "class/7-r-shiny/index.html#why-shinyapps.io",
    "href": "class/7-r-shiny/index.html#why-shinyapps.io",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Why shinyapps.io?",
    "text": "Why shinyapps.io?\n\nFree: Free tier available for up to 5 small apps\nEasy to use: No need to set up a server or manage infrastructure\nScalable: Can handle apps of varying sizes and complexities\nIntegration with RStudio: Seamless deployment from RStudio IDE"
  },
  {
    "objectID": "class/7-r-shiny/index.html#getting-started-with-shinyapps.io",
    "href": "class/7-r-shiny/index.html#getting-started-with-shinyapps.io",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Getting started with shinyapps.io",
    "text": "Getting started with shinyapps.io\n\nCreate an account on shinyapps.io\nRecommended to log in using GitHub\nInstall the rsconnect package in R: install.packages(\"rsconnect\")\nFollowing the instructions on the shinyapps.io to authorize your account"
  },
  {
    "objectID": "class/7-r-shiny/index.html#deploy-your-app-to-shinyapps.io",
    "href": "class/7-r-shiny/index.html#deploy-your-app-to-shinyapps.io",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Deploy your app to shinyapps.io",
    "text": "Deploy your app to shinyapps.io\n\nIn RStudio, open the app you want to deploy\nClick on the Publish button in the top right corner of the RStudio IDE\nSelect the shinyapps.io account you just connected\nFill in the app name and description\nClick Publish to deploy your app\nOnce deployed, a browser will open to your application. https://{your-username}.shinyapps.io/{your-app-directory-name}\nYou should see a rsconnect/ folder within your app directory, which contains the deployment information. This should be added and committed into version control (i.e. push it to GitHub)"
  },
  {
    "objectID": "class/7-r-shiny/index.html#shinyapps.io-dashboard",
    "href": "class/7-r-shiny/index.html#shinyapps.io-dashboard",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "shinyapps.io dashboard",
    "text": "shinyapps.io dashboard\nDashboard provides an overview of your deployed apps, including: app name and URL, deployment status, usage statistics (e.g., number of active users, CPU usage)\n\n\nCheck out shinyapps.io user guide for more information on hosting your app!"
  },
  {
    "objectID": "class/7-r-shiny/index.html#outline-for-today-3",
    "href": "class/7-r-shiny/index.html#outline-for-today-3",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Outline for today",
    "text": "Outline for today\n\nWhat is R Shiny\nWrite a basic R shiny app\nDeploy your Shiny apps with shinyapps.io\nAI-powered help: using Shiny Assistant"
  },
  {
    "objectID": "class/7-r-shiny/index.html#what-is-shiny-assistant",
    "href": "class/7-r-shiny/index.html#what-is-shiny-assistant",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "What is Shiny Assistant?",
    "text": "What is Shiny Assistant?\nhttps://gallery.shinyapps.io/assistant/"
  },
  {
    "objectID": "class/7-r-shiny/index.html#use-shiny-assistant-to-recreate-the-two-file-shiny-app",
    "href": "class/7-r-shiny/index.html#use-shiny-assistant-to-recreate-the-two-file-shiny-app",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Use Shiny Assistant to recreate the two-file shiny app",
    "text": "Use Shiny Assistant to recreate the two-file shiny app\n\n\nPrompt: Create a shiny app using the mtcars dataset. Use three files global.R, ui.R, server.R. The app displays an interactive scatter plot that reacts to user input of x-axis, y-axis, and a third variable for color of the points. Show car name as label text next to the points."
  },
  {
    "objectID": "class/7-r-shiny/index.html#next-lets-build-a-shinydashboard",
    "href": "class/7-r-shiny/index.html#next-lets-build-a-shinydashboard",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Next, let’s build a shinydashboard",
    "text": "Next, let’s build a shinydashboard\n\nThe {shinydashboard} package provides a framework for building dashboards in R Shiny. It allows you to create visually appealing and interactive apps with a more classic “dashboard” layout, including sidebars, tabs, and boxes. You need both packages: {shiny} and {shinydashboard}."
  },
  {
    "objectID": "class/7-r-shiny/index.html#use-shiny-assistant-to-create-a-shinydashboard",
    "href": "class/7-r-shiny/index.html#use-shiny-assistant-to-create-a-shinydashboard",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Use Shiny Assistant to create a shinydashboard",
    "text": "Use Shiny Assistant to create a shinydashboard\n\n\nPrompt: Create a shinydashboard using the mtcars dataset. Use three files global.R, ui.R, server.R. The app allows users to filter by mpg and displays three output: an interactive scatter plot that reacts to user input of x-axis, y-axis, and color variable. A heatmap of car performance. And a data table of the filtered dataset. Show car name as label text next to the points in the scatter plot."
  },
  {
    "objectID": "class/7-r-shiny/index.html#refine-the-app-locally",
    "href": "class/7-r-shiny/index.html#refine-the-app-locally",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Refine the app locally",
    "text": "Refine the app locally\n\nDownload the code from Shiny Assistant \nSave the files in your local R project directory, remember to organize your repo structure well\nOpen the files in RStudio and run the app locally\nMake any necessary adjustments to the code"
  },
  {
    "objectID": "class/7-r-shiny/index.html#your-turn-in-hw4",
    "href": "class/7-r-shiny/index.html#your-turn-in-hw4",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Your turn in hw4",
    "text": "Your turn in hw4\nTry one of these built-in datasets to explore with Shiny Assistant\n\n\n\nDataset\nDescription\n\n\n\n\nmtcars 🚗\nCar performance data (mpg, cylinders, hp)\n\n\niris 🌸\nIris flower measurements (sepal, petal, species)\n\n\ndiamonds 💎\nDiamond pricing (carat, cut, price, etc.)\n\n\nfaithful 🌋\nOld Faithful geyser eruptions (duration, waiting time)\n\n\nairquality 🌍\nNew York air quality data (Ozone, Temp, Wind)\n\n\nToothGrowth 🦷\nVitamin C & tooth growth in guinea pigs\n\n\n\nOr upload your own dataset to GitHub and give Shiny Assistant a public URL!\n\nWrite good prompt, and you will get good code!\nDescribe what change you made to the app on top of what Shiny Assistant generated."
  },
  {
    "objectID": "class/7-r-shiny/index.html#further-resources",
    "href": "class/7-r-shiny/index.html#further-resources",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "Further resources",
    "text": "Further resources\nHow much time do you have?\n\n10 min: Print out this Shiny for R cheatsheet\n2.5 hrs: Follow this Posit tutorial\nLifetime: Check out resources like the Shiny Gallery, TidyTuesday, and Mastering Shiny book\nUnknown: chatGPT, Gemini, Shiny Assistant (powered by Anthropic), and other AI tools can help you build Shiny apps"
  },
  {
    "objectID": "class/7-r-shiny/index.html#end-of-class-survey",
    "href": "class/7-r-shiny/index.html#end-of-class-survey",
    "title": "Lecture 4.Introduction to R Shiny",
    "section": "End-of-Class Survey",
    "text": "End-of-Class Survey\n  \n\n\n Fill out the end-of-class survey\n\n\n~ This is the end of Lecture 4 ~\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#feedback-from-grading-hw1-lab-1",
    "href": "class/6-specialized-chart/index.html#feedback-from-grading-hw1-lab-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Feedback from grading HW1 & Lab 1",
    "text": "Feedback from grading HW1 & Lab 1\n\nEmpty html\nMissing the answer fields, included as plain text\nGenAI usage, even if you did not use it, you need to answer that section\nLog transform right skewed variables to show patterns better"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#outline-for-today",
    "href": "class/6-specialized-chart/index.html#outline-for-today",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview faceted plots\nIntroduce radar charts, Sankey diagrams, and parallel coordinates plot\nDos and Don’ts when designing visualizations"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#forest-fires-dataset",
    "href": "class/6-specialized-chart/index.html#forest-fires-dataset",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Forest Fires Dataset",
    "text": "Forest Fires Dataset\n\n\nSource: UCI Machine Learning Repository\nhttps://archive.ics.uci.edu/ml/datasets/forest+fires\nContext: Collected from the Montesinho Natural Park in Portugal, this dataset captures weather conditions and fire activity over 200+ days.\nVariables:\n\nmonth, day: Temporal context\ntemp, RH, wind, rain: Daily weather\nFFMC, DMC, DC, ISI: Fire weather indices\narea: Burned area in hectares\n\n\n\n\n\nCanadian Forest Fire Weather Index (FWI) System"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#forest-fires-dataset-1",
    "href": "class/6-specialized-chart/index.html#forest-fires-dataset-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Forest Fires Dataset",
    "text": "Forest Fires Dataset\n\nlibrary(tidyverse)\nforest &lt;- read_csv(\"https://archive.ics.uci.edu/ml/machine-learning-databases/forest-fires/forestfires.csv\")\nglimpse(forest)\n\nRows: 517\nColumns: 13\n$ X     &lt;dbl&gt; 7, 7, 7, 8, 8, 8, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 8, 6, 6, 6, 5…\n$ Y     &lt;dbl&gt; 5, 4, 4, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4…\n$ month &lt;chr&gt; \"mar\", \"oct\", \"oct\", \"mar\", \"mar\", \"aug\", \"aug\", \"aug\", \"sep\", \"…\n$ day   &lt;chr&gt; \"fri\", \"tue\", \"sat\", \"fri\", \"sun\", \"sun\", \"mon\", \"mon\", \"tue\", \"…\n$ FFMC  &lt;dbl&gt; 86.2, 90.6, 90.6, 91.7, 89.3, 92.3, 92.3, 91.5, 91.0, 92.5, 92.5…\n$ DMC   &lt;dbl&gt; 26.2, 35.4, 43.7, 33.3, 51.3, 85.3, 88.9, 145.4, 129.5, 88.0, 88…\n$ DC    &lt;dbl&gt; 94.3, 669.1, 686.9, 77.5, 102.2, 488.0, 495.6, 608.2, 692.6, 698…\n$ ISI   &lt;dbl&gt; 5.1, 6.7, 6.7, 9.0, 9.6, 14.7, 8.5, 10.7, 7.0, 7.1, 7.1, 22.6, 0…\n$ temp  &lt;dbl&gt; 8.2, 18.0, 14.6, 8.3, 11.4, 22.2, 24.1, 8.0, 13.1, 22.8, 17.8, 1…\n$ RH    &lt;dbl&gt; 51, 33, 33, 97, 99, 29, 27, 86, 63, 40, 51, 38, 72, 42, 21, 44, …\n$ wind  &lt;dbl&gt; 6.7, 0.9, 1.3, 4.0, 1.8, 5.4, 3.1, 2.2, 5.4, 4.0, 7.2, 4.0, 6.7,…\n$ rain  &lt;dbl&gt; 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,…\n$ area  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#adult-income-dataset",
    "href": "class/6-specialized-chart/index.html#adult-income-dataset",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Adult Income Dataset",
    "text": "Adult Income Dataset\n\nSource: UCI Machine Learning Repository\nhttps://archive.ics.uci.edu/ml/datasets/adult\nContext: Extracted from 1994 U.S. Census data to predict whether an individual’s income exceeds $50K/year.\nVariables:\n\nDemographics: age, sex, race, education, marital-status\nEmployment: workclass, occupation, hours-per-week\nTarget: income (&gt;50K or ≤50K)\n\nUse in Class:\n\nSankey diagram: Show flows like education → occupation → income\nParallel coordinates: Visualize patterns across age, hours, and income class"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#adult-income-dataset-1",
    "href": "class/6-specialized-chart/index.html#adult-income-dataset-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Adult Income Dataset",
    "text": "Adult Income Dataset\n\nadult &lt;- read_csv(\"https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data\",\n                  col_names = c(\"age\", \"workclass\", \"fnlwgt\", \"education\", \"education_num\",\n                                \"marital_status\", \"occupation\", \"relationship\", \"race\", \"sex\",\n                                \"capital_gain\", \"capital_loss\", \"hours_per_week\", \"native_country\", \"income\"))\nglimpse(adult)\n\nRows: 32,561\nColumns: 15\n$ age            &lt;dbl&gt; 39, 50, 38, 53, 28, 37, 49, 52, 31, 42, 37, 30, 23, 32,…\n$ workclass      &lt;chr&gt; \"State-gov\", \"Self-emp-not-inc\", \"Private\", \"Private\", …\n$ fnlwgt         &lt;dbl&gt; 77516, 83311, 215646, 234721, 338409, 284582, 160187, 2…\n$ education      &lt;chr&gt; \"Bachelors\", \"Bachelors\", \"HS-grad\", \"11th\", \"Bachelors…\n$ education_num  &lt;dbl&gt; 13, 13, 9, 7, 13, 14, 5, 9, 14, 13, 10, 13, 13, 12, 11,…\n$ marital_status &lt;chr&gt; \"Never-married\", \"Married-civ-spouse\", \"Divorced\", \"Mar…\n$ occupation     &lt;chr&gt; \"Adm-clerical\", \"Exec-managerial\", \"Handlers-cleaners\",…\n$ relationship   &lt;chr&gt; \"Not-in-family\", \"Husband\", \"Not-in-family\", \"Husband\",…\n$ race           &lt;chr&gt; \"White\", \"White\", \"White\", \"Black\", \"Black\", \"White\", \"…\n$ sex            &lt;chr&gt; \"Male\", \"Male\", \"Male\", \"Male\", \"Female\", \"Female\", \"Fe…\n$ capital_gain   &lt;dbl&gt; 2174, 0, 0, 0, 0, 0, 0, 0, 14084, 5178, 0, 0, 0, 0, 0, …\n$ capital_loss   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ hours_per_week &lt;dbl&gt; 40, 13, 40, 40, 40, 40, 16, 45, 50, 40, 80, 40, 30, 50,…\n$ native_country &lt;chr&gt; \"United-States\", \"United-States\", \"United-States\", \"Uni…\n$ income         &lt;chr&gt; \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"…"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#outline-for-today-1",
    "href": "class/6-specialized-chart/index.html#outline-for-today-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview faceted plots\nIntroduce radar charts, Sankey diagrams, and parallel coordinates plot\nDos and Don’ts when designing visualizations"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#review-faceted-plots",
    "href": "class/6-specialized-chart/index.html#review-faceted-plots",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Review: Faceted Plots",
    "text": "Review: Faceted Plots\n\nIn previous lecture/labs, we learned about faceted plots, which allow us to create multiple subplots based on a categorical variable. This is particularly useful for comparing distributions or trends across different groups.\n\n\n\n# Faceted scatter plot: Temp vs Wind, faceted by month\nggplot(forest, aes(x = temp, y = wind)) +\n  geom_point(alpha = 0.6, color = \"firebrick\") +\n  facet_wrap(~ month, ncol = 4) +\n  labs(title = \"Temperature vs Wind Speed by Month\",\n       x = \"Temperature (°C)\",\n       y = \"Wind Speed (km/h)\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#review-faceted-plots-1",
    "href": "class/6-specialized-chart/index.html#review-faceted-plots-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Review: Faceted Plots",
    "text": "Review: Faceted Plots\n\nOptional: convert month to ordered factor for nicer facet layout\n\n\n\nforest &lt;- forest %&gt;%\n  mutate(month = factor(month, levels = c(\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\",\n                                          \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\")))\n\nggplot(forest, aes(x = temp, y = wind)) +\n  geom_point(alpha = 0.6, color = \"firebrick\") +\n  facet_wrap(~ month, ncol = 4) +\n  labs(title = \"Temperature vs Wind Speed by Month\",\n       x = \"Temperature (°C)\",\n       y = \"Wind Speed (km/h)\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#facet-plots-by-combining-two-variables",
    "href": "class/6-specialized-chart/index.html#facet-plots-by-combining-two-variables",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Facet plots by combining two variables",
    "text": "Facet plots by combining two variables\n\nDoes dry air (low RH) change the relationship between wind and temperature across seasons? We use facet_grid() to create a grid of plots, where each row represents a season and each column represents a relative humidity level.\n\n\n\nforest &lt;- forest %&gt;%\n  mutate(\n    month = tolower(month),\n    season = case_when(\n      month %in% c(\"dec\", \"jan\", \"feb\") ~ \"Winter\",\n      month %in% c(\"mar\", \"apr\", \"may\") ~ \"Spring\",\n      month %in% c(\"jun\", \"jul\", \"aug\") ~ \"Summer\",\n      month %in% c(\"sep\", \"oct\", \"nov\") ~ \"Fall\",\n      TRUE ~ \"Unknown\"\n    ),\n    RH_level = if_else(RH &gt;= median(RH, na.rm = TRUE), \"High RH\", \"Low RH\"),\n    season = factor(season, levels = c(\"Spring\", \"Summer\", \"Fall\", \"Winter\")),\n    RH_level = factor(RH_level, levels = c(\"Low RH\", \"High RH\"))\n  )\n\n# Faceted scatter plot: temp vs wind by season and RH level\nggplot(forest, aes(x = temp, y = wind)) +\n  geom_point(alpha = 0.6, color = \"darkorange\") +\n  facet_grid(rows = vars(season), cols = vars(RH_level)) +\n  labs(\n    title = \"Temperature vs Wind Speed\\nby Season and Relative Humidity Level\",\n    x = \"Temperature (°C)\",\n    y = \"Wind Speed (km/h)\"\n  ) +\n  theme_minimal(base_size = 11)"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#use-fixed-vs-free-scales",
    "href": "class/6-specialized-chart/index.html#use-fixed-vs-free-scales",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Use fixed vs free scales",
    "text": "Use fixed vs free scales\n\nUsing fixed scales can help in comparing values across different facets, while free scales allow each facet to have its own scale, which can be useful when the data varies widely between groups.\n\n\n\nforest &lt;- forest %&gt;%\n  mutate(month = factor(month, levels = c(\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\",\n                                          \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\")))\n\nggplot(forest, aes(x = temp, y = wind)) +\n  geom_point(alpha = 0.6, color = \"firebrick\") +\n  facet_wrap(~ month, ncol = 4, scales = \"free_y\") +\n  labs(title = \"Temperature vs Wind Speed by Month\",\n       x = \"Temperature (°C)\",\n       y = \"Wind Speed (km/h)\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#section",
    "href": "class/6-specialized-chart/index.html#section",
    "title": "Lab 3. Specialized Chart Types",
    "section": "",
    "text": "Your turn, get on the bike!\n\n\n~ Head over to lab3 notebook! ~"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#outline-for-today-2",
    "href": "class/6-specialized-chart/index.html#outline-for-today-2",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview faceted plots\nIntroduce radar charts, Sankey diagrams, and parallel coordinates plot\nDos and Don’ts when designing visualizations"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#what-is-a-radar-chart",
    "href": "class/6-specialized-chart/index.html#what-is-a-radar-chart",
    "title": "Lab 3. Specialized Chart Types",
    "section": "What is a Radar Chart?",
    "text": "What is a Radar Chart?\n\nA radar chart (or spider chart) displays multivariate data on axes starting from the same point.\nGood for comparing profiles across a few categories or groups.\nUseful when variables are on the same scale or normalized."
  },
  {
    "objectID": "class/6-specialized-chart/index.html#why-use-a-radar-chart-to-explore-the-forest-data",
    "href": "class/6-specialized-chart/index.html#why-use-a-radar-chart-to-explore-the-forest-data",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Why Use a Radar Chart to explore the forest data?",
    "text": "Why Use a Radar Chart to explore the forest data?\n\nCompare weather profiles for different fire conditions.\nVisualize relative intensity of multiple variables at once (e.g., temp, wind, RH).\nSpot patterns across fire size categories."
  },
  {
    "objectID": "class/6-specialized-chart/index.html#step-1-load-and-prepare-the-data",
    "href": "class/6-specialized-chart/index.html#step-1-load-and-prepare-the-data",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Step 1: Load and prepare the data",
    "text": "Step 1: Load and prepare the data\n\nForest Fires Dataset This dataset contains 517 observations, each representing a single day of recorded weather conditions and fire activity in the Montesinho Natural Park in Portugal. Each observation includes meteorological variables such as temperature, relative humidity (RH), wind speed, and rainfall, as well as fire weather indices (e.g., FFMC, DMC) and the area burned in hectares. The data spans multiple months and is commonly used to study environmental drivers of wildfire risk.\n\n\n\n\nRows: 517\nColumns: 14\n$ X          &lt;dbl&gt; 7, 7, 7, 8, 8, 8, 8, 8, 8, 7, 7, 7, 6, 6, 6, 6, 5, 8, 6, 6,…\n$ Y          &lt;dbl&gt; 5, 4, 4, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4,…\n$ month      &lt;chr&gt; \"mar\", \"oct\", \"oct\", \"mar\", \"mar\", \"aug\", \"aug\", \"aug\", \"se…\n$ day        &lt;chr&gt; \"fri\", \"tue\", \"sat\", \"fri\", \"sun\", \"sun\", \"mon\", \"mon\", \"tu…\n$ FFMC       &lt;dbl&gt; 86.2, 90.6, 90.6, 91.7, 89.3, 92.3, 92.3, 91.5, 91.0, 92.5,…\n$ DMC        &lt;dbl&gt; 26.2, 35.4, 43.7, 33.3, 51.3, 85.3, 88.9, 145.4, 129.5, 88.…\n$ DC         &lt;dbl&gt; 94.3, 669.1, 686.9, 77.5, 102.2, 488.0, 495.6, 608.2, 692.6…\n$ ISI        &lt;dbl&gt; 5.1, 6.7, 6.7, 9.0, 9.6, 14.7, 8.5, 10.7, 7.0, 7.1, 7.1, 22…\n$ temp       &lt;dbl&gt; 8.2, 18.0, 14.6, 8.3, 11.4, 22.2, 24.1, 8.0, 13.1, 22.8, 17…\n$ RH         &lt;dbl&gt; 51, 33, 33, 97, 99, 29, 27, 86, 63, 40, 51, 38, 72, 42, 21,…\n$ wind       &lt;dbl&gt; 6.7, 0.9, 1.3, 4.0, 1.8, 5.4, 3.1, 2.2, 5.4, 4.0, 7.2, 4.0,…\n$ rain       &lt;dbl&gt; 0.0, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,…\n$ area       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ area_group &lt;chr&gt; \"No fire\", \"No fire\", \"No fire\", \"No fire\", \"No fire\", \"No …"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#step-2-summarize-and-normalize-variables",
    "href": "class/6-specialized-chart/index.html#step-2-summarize-and-normalize-variables",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Step 2: Summarize and normalize variables",
    "text": "Step 2: Summarize and normalize variables\n\n\nlibrary(scales)\nlibrary(fmsb)\n# Select and normalize variables\nradar_data &lt;- forest %&gt;%\n    group_by(area_group) %&gt;%\n    summarise(\n        temp = mean(temp),\n        RH = mean(RH),\n        wind = mean(wind),\n        rain = mean(rain)\n    ) %&gt;%\n    # normalize to [0, 1]\n    mutate(across(where(is.numeric), rescale))  \n\n# Convert to fmsb format\n# fmsb expects first two rows to be max and min\nradar_df &lt;- radar_data %&gt;%\n    tibble::column_to_rownames(\"area_group\") %&gt;%\n    as.data.frame()\n\n# fmsb expects first two rows: max then min\nmax_row &lt;- rep(1, ncol(radar_df))\nmin_row &lt;- rep(0, ncol(radar_df))\nradar_df &lt;- rbind(max = max_row, min = min_row, radar_df)\n\nprint(radar_df)\n\n\n\n\n                 temp        RH      wind      rain\nmax         1.0000000 1.0000000 1.0000000 1.0000000\nmin         0.0000000 0.0000000 0.0000000 0.0000000\nLarge fire  0.2189738 0.0000000 1.0000000 1.0000000\nMedium fire 0.2379999 0.6826801 0.2434875 0.1404139\nNo fire     0.0000000 1.0000000 0.0000000 0.2043269\nSmall fire  1.0000000 0.4812876 0.2399755 0.0000000"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#step-3-plot-the-radar-chart",
    "href": "class/6-specialized-chart/index.html#step-3-plot-the-radar-chart",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Step 3: Plot the Radar Chart",
    "text": "Step 3: Plot the Radar Chart\n\n\nradarchart(radar_df,\n           axistype = 1,\n           pcol = c(\"red\", \"orange\", \"grey\", \"darkgreen\"),\n           plwd = 2,\n           plty = 1,\n           cglcol = \"grey\",\n           cglty = 1,\n           axislabcol = \"black\",\n           caxislabels = seq(0, 1, 0.2),\n           title = \"Weather Profiles by Fire Size\")\n\nlegend(\"bottomright\", \n       legend = rownames(radar_df[-c(1,2),]), \n       col = c(\"red\", \"orange\", \"grey\", \"darkgreen\"), \n       lty = 1, lwd = 2, bty = \"n\")"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#make-radar-chart-with-ggradar",
    "href": "class/6-specialized-chart/index.html#make-radar-chart-with-ggradar",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Make radar chart with {ggradar}",
    "text": "Make radar chart with {ggradar}\nOnce you have radar_data prepared, you can use the ggradar package to create a more polished radar chart.\n\n\nremotes::install_github(\"ricardo-bion/ggradar\")\nlibrary(ggradar)\nggradar(radar_data,\n        grid.min = 0, grid.mid = 0.5, grid.max = 1,\n        group.line.width = 1.2,\n        group.colours = c('red', 'orange', 'grey', 'darkgreen'),\n        group.point.size = 3,\n        font.radar = \"Arial\",\n        values.radar = c(\"0\", \"0.5\", \"1\"),\n        background.circle.colour = \"transparent\",\n        legend.position = \"bottom\") +\n    ggtitle(\"Weather Profiles by Fire Size\") +\n    theme(\n        legend.text = element_text(size = 11),\n        legend.key.width = unit(0.5, \"cm\")\n    )"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#what-is-a-sankey-diagram",
    "href": "class/6-specialized-chart/index.html#what-is-a-sankey-diagram",
    "title": "Lab 3. Specialized Chart Types",
    "section": "What is a Sankey diagram?",
    "text": "What is a Sankey diagram?\n\nA Sankey diagram visualizes flows between categories.\nThe width of each flow is proportional to the count or magnitude.\nGreat for showing step-wise processes, transitions, or categorical relationships."
  },
  {
    "objectID": "class/6-specialized-chart/index.html#why-use-a-sankey-diagram-to-explore-the-adult-data",
    "href": "class/6-specialized-chart/index.html#why-use-a-sankey-diagram-to-explore-the-adult-data",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Why Use a Sankey Diagram to explore the adult data?",
    "text": "Why Use a Sankey Diagram to explore the adult data?\n\nVisualize income distribution across multiple categorical variables.\nVisualize distributional flows like:\n\nEducation → Occupation → Income\nGender → Workclass → Income"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#step-1-load-and-prepare-the-data-1",
    "href": "class/6-specialized-chart/index.html#step-1-load-and-prepare-the-data-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Step 1: Load and Prepare the Data",
    "text": "Step 1: Load and Prepare the Data\n\nAdult Income Dataset This dataset contains 32,561 observations, each representing a single adult individual from the 1994 U.S. Census database. Each observation includes demographic and employment-related variables such as age, sex, education, occupation, and work hours, as well as an income label indicating whether the person earns more or less than $50,000 per year. The dataset is commonly used to study social and economic patterns, and to explore factors associated with income inequality.\n\n\n\n# Keep only relevant columns\nadult_sankey &lt;- adult %&gt;%\n  select(sex, education, occupation, income) %&gt;%\n  filter(complete.cases(.))\n\nflow_data &lt;- adult_sankey %&gt;%\n  count(sex, education, occupation, income) %&gt;%\n  ungroup()\n\nglimpse(flow_data)\n\nRows: 623\nColumns: 5\n$ sex        &lt;chr&gt; \"Female\", \"Female\", \"Female\", \"Female\", \"Female\", \"Female\",…\n$ education  &lt;chr&gt; \"10th\", \"10th\", \"10th\", \"10th\", \"10th\", \"10th\", \"10th\", \"10…\n$ occupation &lt;chr&gt; \"?\", \"Adm-clerical\", \"Craft-repair\", \"Craft-repair\", \"Exec-…\n$ income     &lt;chr&gt; \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&gt;50K\", \"&lt;=50K\", \"&gt;50K\", \"&lt;=50K\"…\n$ n          &lt;int&gt; 42, 22, 10, 1, 7, 1, 4, 8, 30, 107, 4, 4, 3, 45, 1, 1, 5, 6…"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#step-2-summarize-and-plot-with-ggalluvial",
    "href": "class/6-specialized-chart/index.html#step-2-summarize-and-plot-with-ggalluvial",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Step 2: Summarize and plot with {ggalluvial}",
    "text": "Step 2: Summarize and plot with {ggalluvial}\n\n3-axis Sankey diagrams can quickly become cluttered when categorical variables have too many levels\n\n\n\nlibrary(ggalluvial)\nlibrary(ggplot2)\n\n# Basic 3-axis Sankey\nggplot(flow_data,\n       aes(axis1 = sex, axis2 = education, axis3 = occupation, y = n)) +\n    geom_alluvium(aes(fill = sex), width = 1/12) +\n    geom_stratum(width = 1/12, fill = \"grey80\", color = \"black\") +\n    geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 3) +\n    scale_x_discrete(limits = c(\"Sex\", \"Education\", \"Occupation\"), expand = c(.05, .05)) +\n    labs(title = \"Flow from Sex to Education to Occupation\",\n         y = \"Number of People\") +\n    theme_minimal()+\n    theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#step-3-regroup-categorical-data",
    "href": "class/6-specialized-chart/index.html#step-3-regroup-categorical-data",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Step 3: regroup categorical data",
    "text": "Step 3: regroup categorical data\n\nUsing tools like forcats::fct_lump() and binning to reduce the number of flows and make the diagram more readable.\n\n\nadult_sankey &lt;- adult_sankey %&gt;%\n    # keep the five most common occupations\n    mutate(occupation = fct_lump(occupation, n = 5)) %&gt;%\n    # group education levels\n    mutate(education_group = case_when(\n    education %in% c(\"Preschool\", \"1st-4th\", \"5th-6th\", \"7th-8th\", \"9th\", \"10th\", \"11th\", \"12th\") ~ \"Less than HS\",\n    education == \"HS-grad\" ~ \"HS Graduate\",\n    education %in% c(\"Some-college\", \"Assoc-acdm\", \"Assoc-voc\") ~ \"Some College / Associate\",\n    education %in% c(\"Bachelors\") ~ \"Bachelor's\",\n    education %in% c(\"Masters\", \"Doctorate\", \"Prof-school\") ~ \"Grad Degree\",\n    TRUE ~ \"Other\"\n  )) %&gt;%\n  mutate(education_group = factor(education_group, levels = c(\"Less than HS\", \"HS Graduate\", \"Some College / Associate\", \"Bachelor's\", \"Grad Degree\")))\nflow_data &lt;- adult_sankey %&gt;%\n  count(sex, education_group, occupation, income)\nglimpse(flow_data)\n\nRows: 120\nColumns: 5\n$ sex             &lt;chr&gt; \"Female\", \"Female\", \"Female\", \"Female\", \"Female\", \"Fem…\n$ education_group &lt;fct&gt; Less than HS, Less than HS, Less than HS, Less than HS…\n$ occupation      &lt;fct&gt; Adm-clerical, Adm-clerical, Craft-repair, Craft-repair…\n$ income          &lt;chr&gt; \"&lt;=50K\", \"&gt;50K\", \"&lt;=50K\", \"&gt;50K\", \"&lt;=50K\", \"&gt;50K\", \"&lt;=…\n$ n               &lt;int&gt; 108, 1, 29, 5, 25, 3, 20, 1, 191, 1, 925, 12, 883, 85,…"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#step-4-replot-sankey-diagram",
    "href": "class/6-specialized-chart/index.html#step-4-replot-sankey-diagram",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Step 4: replot Sankey diagram",
    "text": "Step 4: replot Sankey diagram\n\n\n# Plot Sankey with 4 axes\nggplot(flow_data,\n       aes(axis1 = sex, axis2 = education_group, axis3 = occupation, axis4 = income, y = n)) +\n    geom_alluvium(aes(fill = sex), width = 1/12) +\n    geom_stratum(width = 1/12, fill = \"grey90\", color = \"black\") +\n    geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 3) +\n    scale_x_discrete(limits = c(\"Sex\", \"Education\", \"Occupation\", \"Income\"), expand = c(.05, .05)) +\n    labs(title = \"Simplified Flow: Sex → Education → Occupation → Income\",\n         y = \"Number of People\") +\n    theme_minimal() +\n    theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#step-5-filter-out-weak-links",
    "href": "class/6-specialized-chart/index.html#step-5-filter-out-weak-links",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Step 5: filter out weak links",
    "text": "Step 5: filter out weak links\n\nflow_data_filtered &lt;- flow_data %&gt;%\n  filter(n &gt;= 0.005 * sum(n))  # Keep flows &gt;= 0.5% of total"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#what-is-a-parallel-coordinates-plot-pcp",
    "href": "class/6-specialized-chart/index.html#what-is-a-parallel-coordinates-plot-pcp",
    "title": "Lab 3. Specialized Chart Types",
    "section": "What is a Parallel Coordinates Plot (PCP)?",
    "text": "What is a Parallel Coordinates Plot (PCP)?\n\nA visualization for multivariate data, especially numeric.\nEach line represents:\n\nan individual (for raw data), or\na group profile (for summarized counts).\n\nUseful for spotting clusters, trends, and differences between groups."
  },
  {
    "objectID": "class/6-specialized-chart/index.html#variation-1-individual-level-pcp",
    "href": "class/6-specialized-chart/index.html#variation-1-individual-level-pcp",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Variation 1: Individual-level PCP",
    "text": "Variation 1: Individual-level PCP\n\nScaling variable is a crucial step to build a proper parallel coordinates chart. It transforms the raw data to a new scale that is common with other variables, and thus allow to compare them.\n\n\nlibrary(GGally)\n# Prepare numeric individual-level data\nadult_pc &lt;- adult %&gt;%\n  select(age, education_num, hours_per_week, capital_gain, capital_loss, income) %&gt;%\n  filter(complete.cases(.)) %&gt;%\n  mutate(across(where(is.numeric), rescale))  # normalize for comparability\n\n# Sample for readability\nset.seed(123)\nadult_sample &lt;- adult_pc %&gt;%\n  group_by(income) %&gt;%\n  sample_n(250)\nglimpse(adult_sample)\n\nRows: 500\nColumns: 6\nGroups: income [2]\n$ age            &lt;dbl&gt; 0.61643836, 0.38356164, 0.90410959, 0.24657534, 0.47945…\n$ education_num  &lt;dbl&gt; 0.5333333, 0.6000000, 0.5333333, 0.6666667, 0.6000000, …\n$ hours_per_week &lt;dbl&gt; 0.3979592, 0.3979592, 0.1938776, 0.2959184, 0.3979592, …\n$ capital_gain   &lt;dbl&gt; 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000…\n$ capital_loss   &lt;dbl&gt; 0.0000000, 0.0000000, 0.0000000, 0.0000000, 0.0000000, …\n$ income         &lt;chr&gt; \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"&lt;=50K\", \"…"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#variation-1-individual-level-pcp-1",
    "href": "class/6-specialized-chart/index.html#variation-1-individual-level-pcp-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Variation 1: Individual-level PCP",
    "text": "Variation 1: Individual-level PCP\n\n# Individual-level parallel coordinate plot\nGGally::ggparcoord(\n  data = adult_sample,\n  columns = 1:5,\n  groupColumn = 6,\n  scale = \"globalminmax\",\n  showPoints = FALSE,\n  alphaLines = 0.3,\n  title = \"Parallel Coordinate Plot (Individual-Level)\") +\n  theme_minimal() +\n  labs(x = \"Variables\", y = \"Normalized Value\")"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#variation-2-group-level-pcp",
    "href": "class/6-specialized-chart/index.html#variation-2-group-level-pcp",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Variation 2: Group-level PCP",
    "text": "Variation 2: Group-level PCP\n\nIn this variation, we summarize the data to create group profiles, which allows us to visualize the average characteristics of each income group across multiple variables.\n\n\n# Count and reshape for parallel coordinates\nedu_occ_income &lt;- adult_sankey %&gt;%\n  count(income, education_group, occupation) %&gt;%\n  pivot_wider(names_from = occupation, values_from = n, values_fill = 0)%&gt;%\n  mutate(income = factor(income, labels = c(\"&lt;=50K\", \"&gt;50K\")))\nglimpse(edu_occ_income)\n\nRows: 10\nColumns: 8\n$ income            &lt;fct&gt; &lt;=50K, &lt;=50K, &lt;=50K, &lt;=50K, &lt;=50K, &gt;50K, &gt;50K, &gt;50K,…\n$ education_group   &lt;fct&gt; Less than HS, HS Graduate, Some College / Associate,…\n$ `Adm-clerical`    &lt;int&gt; 170, 1202, 1451, 387, 53, 6, 163, 190, 119, 29\n$ `Craft-repair`    &lt;int&gt; 619, 1517, 881, 138, 15, 66, 405, 354, 88, 16\n$ `Exec-managerial` &lt;int&gt; 82, 546, 732, 590, 148, 26, 261, 442, 779, 460\n$ `Prof-specialty`  &lt;int&gt; 50, 173, 525, 916, 617, 7, 60, 213, 579, 1000\n$ Sales             &lt;int&gt; 328, 869, 979, 427, 64, 25, 200, 280, 382, 96\n$ Other             &lt;int&gt; 2760, 4519, 3159, 676, 127, 114, 586, 534, 274, 87"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#variation-2-group-level-pcp-1",
    "href": "class/6-specialized-chart/index.html#variation-2-group-level-pcp-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Variation 2: Group-level PCP",
    "text": "Variation 2: Group-level PCP\n\n\n# Group-level profile parallel coordinate plot\nincome_labels &lt;- c(`1` = \"Income &lt;=50K\", `2` = \"Income &gt;50K\")\nGGally::ggparcoord(\n    data = edu_occ_income,\n    columns = 3:ncol(edu_occ_income), # occupation columns\n    groupColumn = 2, #education group\n    scale = \"globalminmax\",\n    showPoints = TRUE,\n    title = \"Group Profile Plot:\\nEducation vs. Occupation by Income\") +\n    theme_minimal(base_size = 14) +\n    facet_wrap(. ~ income, ncol = 1, labeller = as_labeller(income_labels), scales = \"free\") +\n    labs(x = \"Occupation\", y = \"Relative Count\") +\n    coord_flip() +\n    theme(legend.position = \"bottom\")+\n    guides(color = guide_legend(nrow = 3))"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#comparing-two-variations",
    "href": "class/6-specialized-chart/index.html#comparing-two-variations",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Comparing two variations",
    "text": "Comparing two variations\n\nIndividual-level parallel coordinates plot:\n\nEach line = one person\nColor by group variable, income\nUse this to explore variable interactions and clusters\n\n\nGroup-level parallel coordinates plot:\n\nEach line = one education group\nUse this to compare how different education groups are distributed across occupations\nincome in represented by facets\n\n\n\nDiscussion:\nWhen is it better to use individual-level data vs. group-level profiles in a parallel coordinate plot?"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#section-1",
    "href": "class/6-specialized-chart/index.html#section-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "",
    "text": "Your turn to make some graphs!\n\n\n~ Head over to lab3 notebook! ~"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#outline-for-today-3",
    "href": "class/6-specialized-chart/index.html#outline-for-today-3",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview faceted plots\nIntroduce radar charts, Sankey diagrams, and parallel coordinates plot\nDos and Don’ts when designing visualizations"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#do-clear-informative-titles-and-labels",
    "href": "class/6-specialized-chart/index.html#do-clear-informative-titles-and-labels",
    "title": "Lab 3. Specialized Chart Types",
    "section": "DO: Clear, informative titles and labels",
    "text": "DO: Clear, informative titles and labels\n\n✅ DO\n\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot() +\n  labs(\n    title = \"Miles per Gallon by Number of Cylinders\",\n    x = \"Number of Cylinders\",\n    y = \"MPG\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n❌ Don’t\n\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot() +\n  ggtitle(\"Plot 1\") +  # Uninformative\n  theme_gray()         # Cluttered default theme"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#do-choose-the-right-chart-type",
    "href": "class/6-specialized-chart/index.html#do-choose-the-right-chart-type",
    "title": "Lab 3. Specialized Chart Types",
    "section": "DO: Choose the right chart type",
    "text": "DO: Choose the right chart type\n\n✅ DO\n\nggplot(airquality, aes(x = Day, y = Temp)) +\n  geom_line() +\n  facet_wrap(~ Month) +\n  labs(title = \"Daily Temperature by Month\", x = \"Day\", y = \"Temperature (F)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n❌ Don’t\n\nggplot(airquality, aes(x = Month, y = Temp)) +\n  geom_bar(stat = \"identity\") +\n  ggtitle(\"Temp by Month\")  # Misleading chart type\n\n\n\n\n\n\n\n\nWhat is this chart showing? Average temperature or total temperature by month?"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#do-choose-the-right-chart-type-1",
    "href": "class/6-specialized-chart/index.html#do-choose-the-right-chart-type-1",
    "title": "Lab 3. Specialized Chart Types",
    "section": "DO: Choose the right chart type",
    "text": "DO: Choose the right chart type\n\n✅ DO\n\nggplot(airquality, aes(x = Day, y = Temp)) +\n  geom_line() +\n  facet_wrap(~ Month) +\n  labs(title = \"Daily Temperature by Month\", x = \"Day\", y = \"Temperature (F)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n❌ Don’t\n\nggplot(airquality, aes(x = Month, y = Temp)) +\n  geom_bar(stat = \"identity\", color = 'orange') +\n  ggtitle(\"Temp by Month\")  # Misleading chart type\n\n\n\n\n\n\n\n\nIt stacks daily temperature on top of each other, which makes no sense"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#do-use-accessible-colors",
    "href": "class/6-specialized-chart/index.html#do-use-accessible-colors",
    "title": "Lab 3. Specialized Chart Types",
    "section": "DO: Use accessible colors",
    "text": "DO: Use accessible colors\n\n✅ DO use viridis scale\n\nggplot(mtcars, aes(x = wt, y = mpg, color = hp)) +\n  geom_point(size = 3) +\n  scale_color_viridis_c(option = \"plasma\") +\n  labs(\n    title = \"Fuel Efficiency vs Weight of Car\",\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles per Gallon\",\n    color = \"Horsepower\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n❌ Don’t use rainbow colors\n\nggplot(mtcars, aes(x = wt, y = mpg, color = hp)) +\n  geom_point(size = 3) +\n  scale_color_gradientn(colors = rainbow(7)) +\n  labs(\n    title = \"Fuel Efficiency vs Weight of Car\",\n    x = \"Weight (1000 lbs)\",\n    y = \"Miles per Gallon\",\n    color = \"Horsepower\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#do-order-categorical-axes-intentionally",
    "href": "class/6-specialized-chart/index.html#do-order-categorical-axes-intentionally",
    "title": "Lab 3. Specialized Chart Types",
    "section": "DO: Order categorical axes intentionally",
    "text": "DO: Order categorical axes intentionally\n\n✅ DO\n\nmtcars %&gt;%\n    rownames_to_column(var = \"model\") %&gt;%\n    ggplot(aes(x = fct_reorder(model, mpg), y = mpg)) +\n    geom_col(fill = \"steelblue\") +\n    labs(title = \"Fuel Efficiency by Car Model\", x = \"Car Model (ordered by MPG)\", y = \"Miles per Gallon\") +\n    coord_flip() +\n    theme_minimal()\n\n\n\n\n\n\n\n\n\n❌ Don’t\n\nmtcars %&gt;%\n    rownames_to_column(var = \"model\") %&gt;%\n    ggplot(aes(x = model, y = mpg)) +\n    geom_col(fill = \"steelblue\") +\n    labs(title = \"Fuel Efficiency by Car Model\", x = \"Car Model (ordered by MPG)\", y = \"Miles per Gallon\") +\n    coord_flip() +\n    theme_minimal()"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#do-use-appropriate-scales",
    "href": "class/6-specialized-chart/index.html#do-use-appropriate-scales",
    "title": "Lab 3. Specialized Chart Types",
    "section": "DO: Use appropriate scales",
    "text": "DO: Use appropriate scales\n\n✅ DO log-transform right skewed variables\n\nggplot(diamonds, aes(x = carat, y = price)) +\n  geom_point(alpha = 0.2, color = \"steelblue\") +\n  scale_x_log10() +\n  scale_y_log10(labels = scales::dollar_format(accuracy = 1)) +\n  labs(\n    title = \"Diamond Price vs Carat (Log-Log Scale)\",\n    x = \"Carat (log scale)\",\n    y = \"Price (log scale)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n❌ Don’t mindlessly use raw scale\n\nggplot(diamonds, aes(x = carat, y = price)) +\n  geom_point(alpha = 0.2, color = \"steelblue\") +\n  labs(\n    title = \"Diamond Price vs Carat (Raw Scale)\",\n    x = \"Carat\",\n    y = \"Price\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#do-add-helpful-annotations",
    "href": "class/6-specialized-chart/index.html#do-add-helpful-annotations",
    "title": "Lab 3. Specialized Chart Types",
    "section": "DO: Add helpful annotations",
    "text": "DO: Add helpful annotations\n\n✅ DO use direct labels\n\nlabel_df &lt;- mtcars %&gt;%\n  group_by(cyl) %&gt;%\n  summarise(hp = mean(hp), mpg = mean(mpg))\nggplot(mtcars, aes(x = hp, y = mpg, color = factor(cyl))) +\n  geom_point(size = 3, alpha = 0.6) +\n  ggrepel::geom_label_repel(\n    data = label_df,\n    aes(label = paste0(cyl, \" cyl\"), fill = factor(cyl)),\n    show.legend = FALSE, size = 4, fontface = \"bold\", color = \"black\") +\n  labs(title = \"Fuel Efficiency vs Horsepower\", x = \"Horsepower\", y = \"Miles per Gallon\") +\n    guides(color = \"none\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n❌ Don’t only rely on legends\n\nggplot(mtcars, aes(x = hp, y = mpg, color = factor(cyl))) +\n  geom_point(size = 3) +\n  labs(\n    title = \"Fuel Efficiency vs Horsepower\",\n    x = \"Horsepower\",\n    y = \"Miles per Gallon\",\n    color = \"Cylinders\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#do-use-clear-typeface-and-fonts",
    "href": "class/6-specialized-chart/index.html#do-use-clear-typeface-and-fonts",
    "title": "Lab 3. Specialized Chart Types",
    "section": "DO: Use clear typeface and fonts",
    "text": "DO: Use clear typeface and fonts\n\n✅ DO\n\nlibrary(showtext)\nfont_add_google(\"Lato\", \"lato\")\nshowtext_auto()\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot() +\n  theme_minimal(base_family = \"lato\") +\n  labs(title = \"MPG by Cylinders (Lato Font)\")\n\n\n\n\n\n\n\n\n\n❌ Don’t have tiny fonts\n\nggplot(mtcars, aes(x = factor(cyl), y = mpg)) +\n  geom_boxplot() +\n  theme(text = element_text(size = 8)) +\n  labs(title = \"MPG by Cylinders\")"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#more-on-typeface",
    "href": "class/6-specialized-chart/index.html#more-on-typeface",
    "title": "Lab 3. Specialized Chart Types",
    "section": "More on typeface",
    "text": "More on typeface\n\n\nSource: Typography for a better user experience, by Suvo Ray"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#some-general-rules",
    "href": "class/6-specialized-chart/index.html#some-general-rules",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Some general rules",
    "text": "Some general rules\n\nUse sans-serif fonts for digital displays (e.g., Arial, Helvetica, Lato).\nSerif fonts are typically only used for visualization headlines (e.g., Times New Roman, Georgia).\nAvoid using too many typefaces (just 1-3)\nUse a typeface with lining figures for numerals \nUse a monospaced typeface for numerals"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#create-hierarchy-with-font-size-weight-and-style",
    "href": "class/6-specialized-chart/index.html#create-hierarchy-with-font-size-weight-and-style",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Create hierarchy with font size, weight, and style",
    "text": "Create hierarchy with font size, weight, and style\n\n\nSource: The UX Designer’s Guide to Typography by Chaosamran_Studio"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#pick-a-typeface-from-google-fonts",
    "href": "class/6-specialized-chart/index.html#pick-a-typeface-from-google-fonts",
    "title": "Lab 3. Specialized Chart Types",
    "section": "Pick a typeface from Google Fonts",
    "text": "Pick a typeface from Google Fonts\n\n\nhttps://fonts.google.com/\nSource: EDS 240"
  },
  {
    "objectID": "class/6-specialized-chart/index.html#end-of-class-survey",
    "href": "class/6-specialized-chart/index.html#end-of-class-survey",
    "title": "Lab 3. Specialized Chart Types",
    "section": "End-of-Class Survey",
    "text": "End-of-Class Survey\n  \n\n\n Fill out the end-of-class survey\n\n\n~ This is the end of Lab 3 ~\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/5-case-study/index.html#class-today",
    "href": "class/5-case-study/index.html#class-today",
    "title": "Lecture 3. Case Study",
    "section": "Class today",
    "text": "Class today\nReading assignment:\n\nhttps://www.storytellingwithdata.com/chart-guide\nhttps://www.toptal.com/designers/ux/data-visualization-mistakes\n\nAbout your instructor:\nElena Jimenez (M.A., International Education, George Washington University) is a user-experienced designer at Mathematica with expertise in data visualization, web application designs, facilitating co-design workshops, and conducting user-experience research to increase the efficacy of services and digital platforms. She has worked with foundations, states, and different departments within the federal government to help teams identify problems and develop solutions through co-design workshops, developing prototypes, and feedback sessions.\nSlides:\nPlease use the “Download PDF” button to download the slides."
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#outline-for-today",
    "href": "class/4-fundamental-chart/index.html#outline-for-today",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview chart types to visualize basic quantitative information\nReview chart types to visualize trends over time\nReview chart types to visualize distribution\nReview chart types to visualize relationships"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#introducing-the-penguins-dataset-from-palmerpenguins",
    "href": "class/4-fundamental-chart/index.html#introducing-the-penguins-dataset-from-palmerpenguins",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Introducing the penguins dataset from {palmerpenguins}",
    "text": "Introducing the penguins dataset from {palmerpenguins}\nContains body measurements for 344 penguins on three islands in the Palmer Archipelago.\n\n\n\n\n\nArtwork by @allison_horst"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#introducing-the-penguins-dataset-from-palmerpenguins-1",
    "href": "class/4-fundamental-chart/index.html#introducing-the-penguins-dataset-from-palmerpenguins-1",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Introducing the penguins dataset from {palmerpenguins}",
    "text": "Introducing the penguins dataset from {palmerpenguins}\n\n\n\nRows: 342\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 34.1, 42.0…\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 18.1, 20.2…\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, 193, 190, 181, 195, 193, 190, 186, 18…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3475, 4250…\n$ sex               &lt;fct&gt; male, female, female, female, male, female, male, NA…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\n\nTwo penguins dropped out because missing data on important variables species, flipper_length_mm, and body_mass_g."
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#introducing-the-lyme-disease-surveillance-data",
    "href": "class/4-fundamental-chart/index.html#introducing-the-lyme-disease-surveillance-data",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Introducing the lyme disease surveillance data",
    "text": "Introducing the lyme disease surveillance data\n\nLyme disease has been a nationally notifiable condition in the U.S. sinde 1991. Local and state health departments collect reports of Lyme disease and shared the anonymized data with the Centers for Disease Control and Prevention (CDC). The CDC developed public use data sets to facilitate public health and reserach acccess to the data.\n\n\n\nDownload state and local data on Lyme disease case counts and incidence (cases/100k people) over time here."
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#introducing-the-lyme-disease-surveillance-data-1",
    "href": "class/4-fundamental-chart/index.html#introducing-the-lyme-disease-surveillance-data-1",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Introducing the lyme disease surveillance data",
    "text": "Introducing the lyme disease surveillance data\n\n\n\nRows: 714\nColumns: 4\n$ state          &lt;chr&gt; \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", …\n$ year           &lt;dbl&gt; 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2…\n$ cases          &lt;dbl&gt; 2, 24, 25, 24, 64, 25, 38, 41, 36, 66, 14, 51, 32, 36, …\n$ rates_per_100k &lt;dbl&gt; 0.0, 0.5, 0.5, 0.5, 1.3, 0.5, 0.8, 0.8, 0.7, 1.3, 0.3, …\n\n\n\nThe dataset contains the number of Lyme disease cases and incidence rates (cases per 100,000 people) for 49 states (missing Hawaii) and DC in the U.S. from 2010 to 2023."
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#outline-for-today-1",
    "href": "class/4-fundamental-chart/index.html#outline-for-today-1",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview chart types to visualize basic quantitative information\nReview chart types to visualize trends over time\nReview chart types to visualize distribution\nReview chart types to visualize relationships"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#lets-start-with-a-simple-example-how-many-penguins-are-there-in-each-species",
    "href": "class/4-fundamental-chart/index.html#lets-start-with-a-simple-example-how-many-penguins-are-there-in-each-species",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Let’s start with a simple example, how many penguins are there in each species?",
    "text": "Let’s start with a simple example, how many penguins are there in each species?\n\n\nBar chart is a good choice to visualize counts.\n\nggplot(penguins_clean, aes(x = species)) + \n  geom_bar() +\n  labs(title = \"Bar Chart: Count by Species\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nDot plot improves upon it due to higher data-ink ratio.\n\npenguins_clean %&gt;%\n  count(species) %&gt;%\n  ggplot(aes(x = species, y = n)) + \n  geom_point() +\n  geom_linerange(aes(ymin = 0, ymax = n)) +\n  labs(title = \"Dot plot: Count by Species\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#how-to-visualize-the-average-body-mass-of-each-species",
    "href": "class/4-fundamental-chart/index.html#how-to-visualize-the-average-body-mass-of-each-species",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "How to visualize the average body mass of each species?",
    "text": "How to visualize the average body mass of each species?\n\n\nThe default of geom_bar() is column plot, use coord_flip() to turn it horizontal.\n\nggplot(penguins_clean, aes(x = species, y = body_mass_g)) + \n  stat_summary(fun = mean, geom = \"bar\") +\n  labs(title = \"Mean Body Mass by Species\") +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nSimilarly, coord_flip() can be applied to dot plot\n\npenguins_clean %&gt;%\n  group_by(species) %&gt;%\n  summarise(mean_body_mass = mean(body_mass_g, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = species, y = mean_body_mass)) + \n  geom_point() +\n  geom_linerange(aes(ymin = 0, ymax = mean_body_mass)) +\n  labs(title = \"Mean Body Mass by Species\") +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#add-labels-if-the-exact-values-are-important",
    "href": "class/4-fundamental-chart/index.html#add-labels-if-the-exact-values-are-important",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Add labels if the exact values are important",
    "text": "Add labels if the exact values are important\n\nUse geom_text() to add labels to the bar chart and dot plot.\n\n\npenguins_clean %&gt;%\n  group_by(species) %&gt;%\n  summarise(mean_body_mass = mean(body_mass_g, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = species, y = mean_body_mass)) + \n  geom_col() +\n  geom_text(aes(label = round(mean_body_mass)), hjust = 1.2, color = \"white\") +\n  labs(title = \"Mean Body Mass by Species\") +\n  coord_flip() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\npenguins_clean %&gt;%\n  group_by(species) %&gt;%\n  summarise(mean_body_mass = mean(body_mass_g, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = species, y = mean_body_mass)) + \n  geom_point() +\n  geom_linerange(aes(ymin = 0, ymax = mean_body_mass)) +\n  geom_text(aes(label = round(mean_body_mass)), hjust = -0.2, color = \"black\") +\n  scale_y_continuous(limits = c(0, 6000)) + # set y-axis limits to give room to labels\n  labs(title = \"Mean Body Mass by Species\") +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#when-to-use-geom_col-vs-geom_bar",
    "href": "class/4-fundamental-chart/index.html#when-to-use-geom_col-vs-geom_bar",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "When to use geom_col() vs geom_bar()?",
    "text": "When to use geom_col() vs geom_bar()?\n\n\nUse geom_col() when data is already summarized, e.g., mean body mass by species.\n\npenguins_clean %&gt;%\n  group_by(species) %&gt;%\n  summarise(mean_body_mass = mean(body_mass_g, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = species, y = mean_body_mass)) + \n  geom_col() +\n  labs(title = \"Mean Body Mass by Species\")\n\n\n\n\n\n\n\n\n\n\n\nUse geom_bar() when data is not summarized, e.g., count of species.\n\nggplot(penguins_clean, aes(x = species, y = body_mass_g)) + \n  geom_bar(stat = \"summary\", fun = mean) +\n  labs(title = \"Mean Body Mass by Species\")"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#important-bar-plot-axis-must-start-at-zero",
    "href": "class/4-fundamental-chart/index.html#important-bar-plot-axis-must-start-at-zero",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "IMPORTANT: Bar plot axis must start at zero",
    "text": "IMPORTANT: Bar plot axis must start at zero\n\n\nYang et al (2021) study provided empirical evidence that y-axis truncation leads to viewers to perceive illustrated differences as larger (i.e., a truncation effect)."
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#important-bar-plot-axis-must-start-at-zero-1",
    "href": "class/4-fundamental-chart/index.html#important-bar-plot-axis-must-start-at-zero-1",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "IMPORTANT: Bar plot axis must start at zero",
    "text": "IMPORTANT: Bar plot axis must start at zero\n\n\nYang et al (2021) study provided empirical evidence that y-axis truncation leads to viewers to perceive illustrated differences as larger (i.e., a truncation effect)."
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#but-you-can-cut-the-y-axis-of-dot-plots",
    "href": "class/4-fundamental-chart/index.html#but-you-can-cut-the-y-axis-of-dot-plots",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "But you can cut the y-axis of dot plots!",
    "text": "But you can cut the y-axis of dot plots!\nA dot plot has has less ink and draw the eye to the end point rather than the middle of the bars. Cutting the y-axis allows easily differentiating differences in the values.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBar plots/dot plots shine when comparing counts, but you should be careful when using them to summarize your data. Why?"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#be-careful-when-using-bar-plotsdot-plots-to-summarize-continuous-data",
    "href": "class/4-fundamental-chart/index.html#be-careful-when-using-bar-plotsdot-plots-to-summarize-continuous-data",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Be careful when using bar plots/dot plots to summarize continuous data",
    "text": "Be careful when using bar plots/dot plots to summarize continuous data\n\n\n\nArt by Allison Horst\n\n\nBar plots hide the distribution of the data\nBar plot makes readers infer that data are normally distributed with no outliers"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#outline-for-today-2",
    "href": "class/4-fundamental-chart/index.html#outline-for-today-2",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview chart types to visualize basic quantitative information\nReview chart types to visualize trends over time\nReview chart types to visualize distribution\nReview chart types to visualize relationships"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#line-plots-show-trends-over-time",
    "href": "class/4-fundamental-chart/index.html#line-plots-show-trends-over-time",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Line plots show trends over time",
    "text": "Line plots show trends over time\n\nGoing back to the lyme disease dataset, use line plot to show changes in lyme disease incidence rates (case per 100,000 people) by state, from 2010 to 2023.\n\n\nBasic line graph uses geom_line()\n\nlyme %&gt;%\n  ggplot(aes(x = year, y = rates_per_100k, group = state)) +\n  geom_line()\n\n\n\n\n\n\n\n\n\n\n\nA line + point graph uses geom_point() to add points to the line graph.\n\nlyme %&gt;%\n  ggplot(aes(x = year, y = rates_per_100k, group = state)) +\n  geom_line()+\n  geom_point()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#improve-upon-spaghetti-plots",
    "href": "class/4-fundamental-chart/index.html#improve-upon-spaghetti-plots",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Improve upon “Spaghetti plots”",
    "text": "Improve upon “Spaghetti plots”\n\nA spaghetti plot is a line graph with many lines, which makes it hard to read. We can use {gghighlight} to draw attention to the lines of interest.\n\n\nHighlight a specific state or a group of states\n\nlyme %&gt;%\n  ggplot(aes(x = year, y = rates_per_100k, group = state, color = state)) +\n  geom_line() +\n  gghighlight::gghighlight(state %in% c(\"Michigan\", \"Florida\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nHighlight states based on the values of the incidence rate, for example, maximum rate exceeds 5 per 100k.\n\nlyme %&gt;%\n  ggplot(aes(x = year, y = rates_per_100k, group = state, color = state)) +\n  geom_line() +\n  gghighlight::gghighlight(max(rates_per_100k) &gt; 5) +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#area-chart-is-similar-to-line-graph-just-filled-in-and-stacked",
    "href": "class/4-fundamental-chart/index.html#area-chart-is-similar-to-line-graph-just-filled-in-and-stacked",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Area chart is similar to line graph, just filled in and stacked",
    "text": "Area chart is similar to line graph, just filled in and stacked\n\n\n\nlyme |&gt; \n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  ggplot(aes(x = year, y = rates_per_100k, group = state, color = state)) +\n  geom_line()\n\n\n\n\n\n\n\n\n\n\n\n\nlyme |&gt; \n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  ggplot(aes(x = year, y = rates_per_100k, group = state, fill = state)) +\n  geom_area()\n\n\n\n\n\n\n\n\nStacked area charts are useful for showing the evolution of a whole and the relative proportions of each group that make up the whole. But it has a few drawbacks: low data-ink ratio, using area rather than position to encode data."
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#a-variant-of-area-charts-proportional-stacked-area-charts",
    "href": "class/4-fundamental-chart/index.html#a-variant-of-area-charts-proportional-stacked-area-charts",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "A variant of area charts: proportional stacked area charts",
    "text": "A variant of area charts: proportional stacked area charts\n\nlyme |&gt; \n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  ggplot(aes(x = year, y = rates_per_100k, group = state, fill = state)) +\n  geom_area(position = \"fill\") + # this creates the proportional stacked area chart\n  scale_y_continuous(labels = scales::percent_format(scale = 100))"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#which-group-to-put-on-the-bottom",
    "href": "class/4-fundamental-chart/index.html#which-group-to-put-on-the-bottom",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Which group to put on the bottom?",
    "text": "Which group to put on the bottom?\n\nIt is important to consider which group you want to put it on the bottom of the area chart because it is the only group where your user can easily read the values off the chart.\n\nIf you want to draw attention to “Michigan”, put it on the bottom.\n\nlyme |&gt; \n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  mutate(state = fct_relevel(state, \"Michigan\", after = Inf)) |&gt;  # move Michigan to end\n  ggplot(aes(x = year, y = rates_per_100k, group = state, fill = state)) +\n  geom_area() +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nIf all groups are equally important and you are not as interested in showing the whole, use a faceted line plot instead!\n\nlyme |&gt; \n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  mutate(state = fct_relevel(state, \"Michigan\", after = Inf)) |&gt;  # move Michigan to end\n  ggplot(aes(x = year, y = rates_per_100k, group = state, color = state)) +\n  geom_line() +\n  facet_wrap(~ state) +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#section",
    "href": "class/4-fundamental-chart/index.html#section",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "",
    "text": "Practice makes perfect!\n\n\n~ Head over to lab2 notebook! ~"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#outline-for-today-3",
    "href": "class/4-fundamental-chart/index.html#outline-for-today-3",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview chart types to visualize basic quantitative information\nReview chart types to visualize trends over time\nReview chart types to visualize distribution\nReview chart types to visualize relationships"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#histogram",
    "href": "class/4-fundamental-chart/index.html#histogram",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Histogram",
    "text": "Histogram\nHistogram cuts a numeric variable into bins and counts the number of observations in each bin.\n\nToo many bins!\n\nggplot(penguins_clean, aes(x = body_mass_g, fill = species)) +\n  geom_histogram(binwidth = 30, alpha = 0.7) +\n  labs(title = \"Histogram: Body Mass Distribution\")\n\n\n\n\n\n\n\n\n\n\n\nA better binwidth parameter. The default is to divide data into 30 bins\n\nggplot(penguins_clean, aes(x = body_mass_g, fill = species)) +\n  geom_histogram(binwidth = 200, alpha = 0.7) +\n  labs(title = \"Histogram: Body Mass Distribution\")"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#density-plot",
    "href": "class/4-fundamental-chart/index.html#density-plot",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Density plot",
    "text": "Density plot\nDensity plot uses the kernel density estimate to show the probability density function of a variable. Area under each density curve sums to 1.\n\nA smoothed version of a histogram\n\nggplot(penguins_clean, aes(x = body_mass_g, fill = species)) +\n  geom_density(alpha = 0.5) +\n  labs(title = \"Density Plot: Body Mass by Species\")\n\n\n\n\n\n\n\n\n\n\n\nWhy is the histogram not the same?\n\nggplot(penguins_clean, aes(x = body_mass_g, fill = species)) +\n  geom_histogram(binwidth = 200, alpha = 0.7) +\n  labs(title = \"Histogram: Body Mass Distribution\")\n\n\n\n\n\n\n\n\n\n\nDensity plot does not indicate sample size."
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#box-plot",
    "href": "class/4-fundamental-chart/index.html#box-plot",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Box plot",
    "text": "Box plot\nBox plot shows the median, interquartile range (IQR), and outliers of a variable. Boxplot is often used with comparing the same numeric variable over multiple groups.\n\n\nBoxplot shows summary statistics, which may hide the distribution of the data.\n\n\n\n\nggplot(penguins_clean, aes(x = species, y = body_mass_g)) +\n  geom_boxplot() +\n  labs(title = \"Box Plot: Body Mass by Species\")"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#enhance-box-plot",
    "href": "class/4-fundamental-chart/index.html#enhance-box-plot",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Enhance box plot",
    "text": "Enhance box plot\n\nHighlight a group if you have many groups, also flip the coordinate if your categorical variable has long labels.\n\nlyme |&gt;\n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  ggplot(aes(x = state, y = rates_per_100k)) +\n  geom_boxplot() +\n  gghighlight::gghighlight(state == \"Michigan\") +\n  coord_flip() +\n  labs(title = \"Box Plot: Lyme Disease Incidence by State\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nJitter raw data, but remember to remove outliers\n\nlyme |&gt;\n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  ggplot(aes(x = state, y = rates_per_100k)) +\n  geom_boxplot(outlier.shape = NA) +\n  geom_jitter(alpha = 0.5, width = 0.2) +\n  coord_flip() +\n  labs(title = \"Box Plot: Lyme Disease Incidence by State\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#violin-plot",
    "href": "class/4-fundamental-chart/index.html#violin-plot",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Violin plot",
    "text": "Violin plot\nViolin plot shows the density estimate of the variable, similar to a density plot. It is often used with comparing the same numeric variable over multiple groups. It is usually a better alternative than a box plot.\n\nlyme |&gt;\n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  ggplot(aes(x = state, y = rates_per_100k)) +\n  geom_violin() +\n  coord_flip() +\n  labs(title = \"Violin Plot: Lyme Disease Incidence by State\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#enhance-violin-plot",
    "href": "class/4-fundamental-chart/index.html#enhance-violin-plot",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Enhance violin plot",
    "text": "Enhance violin plot\n\nIf you have many groups, consider ranking them by median values to make your readers’ brain hurt less. Recall law of continuity.\n\nlyme |&gt;\n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt;\n  mutate(state = fct_reorder(state, rates_per_100k, .fun = median, na.rm = TRUE)) |&gt;\n  ggplot(aes(x = state, y = rates_per_100k)) +\n  geom_violin() +\n  coord_flip() +\n  labs(title = \"Violin Plot: Lyme Disease Incidence by State\") +\n  theme_minimal() \n\n\n\n\n\n\n\n\n\n\n\nThe {see} package has geom_violindot() function that creates a half-violin half-dot plot, showing both distribution and sample size.\n\nlyme |&gt;\n  filter(state %in% c(\"Michigan\", \"Ohio\", \"Iowa\", \"North Dakota\")) |&gt; \n  ggplot(aes(x = state, y = rates_per_100k)) +\n  see::geom_violindot(size_dots = 2) +\n  coord_flip() +\n  labs(title = \"Box Plot: Lyme Disease Incidence by State\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#outline-for-today-4",
    "href": "class/4-fundamental-chart/index.html#outline-for-today-4",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroducing the datasets\nReview chart types to visualize basic quantitative information\nReview chart types to visualize trends over time\nReview chart types to visualize distribution\nReview chart types to visualize relationships"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#scatter-plot",
    "href": "class/4-fundamental-chart/index.html#scatter-plot",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Scatter plot",
    "text": "Scatter plot\n\nScatter plot is a good choice to visualize the relationship between two numeric variables. They help us answer questions around the effect of X on Y.\n\n\npenguins_clean %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(alpha = 0.5) +\n  labs(title = \"Effect of Flipper Length on Body Mass\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#add-rug-to-visualize-distribution",
    "href": "class/4-fundamental-chart/index.html#add-rug-to-visualize-distribution",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Add rug to visualize distribution",
    "text": "Add rug to visualize distribution\n\nRug plot uses distribution marks to visualize the distribution of the two numeric variables. Each narrow line represents one data point. It shows the density of the data along the x and y axes.\n\n\npenguins_clean %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(alpha = 0.5) +\n  geom_rug() +\n  labs(title = \"Effect of Flipper Length on Body Mass\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#add-trend-lines",
    "href": "class/4-fundamental-chart/index.html#add-trend-lines",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Add trend lines",
    "text": "Add trend lines\n\nTrend lines are used to show the overall trend of the data. Default method for geom_smooth() is LOESS (locally estimated scatter plot smoothing), think of it as a moving average.\n\n\n\nLOESS\n\npenguins_clean %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth() +\n  labs(title = \"Effect of Flipper Length on Body Mass\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nLinear regression\n\npenguins_clean %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(title = \"Effect of Flipper Length on Body Mass\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#add-a-third-numeric-variable-with-bubble-chart",
    "href": "class/4-fundamental-chart/index.html#add-a-third-numeric-variable-with-bubble-chart",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Add a third numeric variable with bubble chart",
    "text": "Add a third numeric variable with bubble chart\n\nWe can use a bubble chart to show the third numeric variable. The size of the point represents the third variable.\n\n\n\npenguins_clean %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(size = bill_length_mm), alpha = 0.4) +\n  labs(title = \"Effect of Flipper Length on Body Mass\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nA few caveats:\n\nThe relationship between X and Y will be the primary focus\nIt may be difficult to distinguish the size of the bubbles"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#adjust-the-size-of-the-bubbles",
    "href": "class/4-fundamental-chart/index.html#adjust-the-size-of-the-bubbles",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Adjust the size of the bubbles",
    "text": "Adjust the size of the bubbles\n\nUse scale_size() to adjust the size of the bubbles. Do not use scale_radius().\n\n\nThis is good.\n\npenguins_clean %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(size = bill_length_mm), alpha = 0.4) +\n  scale_size(range = c(1, 4), name = \"Bill Length (mm)\") + # adjust the size of the bubbles\n  labs(title = \"Effect of Flipper Length on Body Mass\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nThis is misleading.\n\npenguins_clean %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(size = bill_length_mm), alpha = 0.4) +\n  scale_radius(range = c(1, 4), name = \"Bill Length (mm)\") + # adjust the size of the bubbles\n  labs(title = \"Effect of Flipper Length on Body Mass\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#add-a-third-numeric-variable-with-color",
    "href": "class/4-fundamental-chart/index.html#add-a-third-numeric-variable-with-color",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "Add a third numeric variable with color",
    "text": "Add a third numeric variable with color\n\nRecall that color hue does not natually have meaning for magnitude, consider using intensity\n\n\npenguins_clean %&gt;%\n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point(aes(color = bill_length_mm)) +\n  scale_color_gradient(low = \"white\", high = \"royalblue\", name = \"Bill Length (mm)\") + \n  labs(title = \"Effect of Flipper Length on Body Mass\") +\n  theme_minimal()"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#section-1",
    "href": "class/4-fundamental-chart/index.html#section-1",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "",
    "text": "Your turn, get on the bike!\n\n\n~ Head over to lab2 notebook! ~"
  },
  {
    "objectID": "class/4-fundamental-chart/index.html#end-of-class-survey",
    "href": "class/4-fundamental-chart/index.html#end-of-class-survey",
    "title": "Lab 2. Fundamental Chart Types",
    "section": "End-of-Class Survey",
    "text": "End-of-Class Survey\n  \n\n\n Fill out the end-of-class survey\n\n\n~ This is the end of Lab 2 ~\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#outline-for-today",
    "href": "class/3-visual-vocabulary/index.html#outline-for-today",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Outline for today",
    "text": "Outline for today\n\nHow human see data\nData-Ink Maximization and Graphical Redesign\nDesign considerations for different types of intended audience"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#good-data-visualization-is-optimized-for-our-visual-memory-system",
    "href": "class/3-visual-vocabulary/index.html#good-data-visualization-is-optimized-for-our-visual-memory-system",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Good data visualization is optimized for our visual-memory system",
    "text": "Good data visualization is optimized for our visual-memory system\n\n\nHelps us understand trends and patterns\nMakes data more accessible to different audiences\nUseful in decision-making and communication"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#the-power-of-pre-attentive-processing",
    "href": "class/3-visual-vocabulary/index.html#the-power-of-pre-attentive-processing",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "The power of pre-attentive processing",
    "text": "The power of pre-attentive processing\n\nCount all the 5s in the following image"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#the-power-of-pre-attentive-processing-1",
    "href": "class/3-visual-vocabulary/index.html#the-power-of-pre-attentive-processing-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "The power of pre-attentive processing",
    "text": "The power of pre-attentive processing\n\nCount all the 5s in the following image"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#what-is-pre-attentive-processing",
    "href": "class/3-visual-vocabulary/index.html#what-is-pre-attentive-processing",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "What is pre-attentive processing?",
    "text": "What is pre-attentive processing?\n\nRapid, automatic processing of visual information before conscious attention kicks in.\nHappens within &lt;250 milliseconds.\nHelps identify key patterns without effort."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#not-all-pre-attentive-features-are-created-equal",
    "href": "class/3-visual-vocabulary/index.html#not-all-pre-attentive-features-are-created-equal",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Not all pre-attentive features are created equal",
    "text": "Not all pre-attentive features are created equal\n\nRaise your hand when you see the red dot?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#classify-data-types",
    "href": "class/3-visual-vocabulary/index.html#classify-data-types",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Classify data types",
    "text": "Classify data types"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#introducing-visual-variable",
    "href": "class/3-visual-vocabulary/index.html#introducing-visual-variable",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Introducing visual variable",
    "text": "Introducing visual variable\n\n“A visual variable, in data visualization, is an aspect of a graphical object that can visually differentiate it from other objects, and can be controlled during the design process.”\n\n\n- Jacques Bertin, 1967, Sémiologie Graphique"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#section",
    "href": "class/3-visual-vocabulary/index.html#section",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "",
    "text": "In-Class Activity:\nCreate at least three sketches to visualize these two quantities\n\n42, 23\n\nWhich Bertin’s visual variables did you use in your sketches?\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#ways-to-visualizae-two-quantities",
    "href": "class/3-visual-vocabulary/index.html#ways-to-visualizae-two-quantities",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "45 ways to visualizae two quantities",
    "text": "45 ways to visualizae two quantities\n\n\nhttps://rockcontent.com/blog/45-ways-to-communicate-two-quantities/"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#clevelands-three-visual-operations-of-pattern-perception",
    "href": "class/3-visual-vocabulary/index.html#clevelands-three-visual-operations-of-pattern-perception",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Cleveland’s three visual operations of pattern perception",
    "text": "Cleveland’s three visual operations of pattern perception\n🎯 Detection: Recognizing that a geometric object encodes a physical value.\n🧩 Assembly: Grouping detected graphical elements into patterns.\n\n📏 Estimation: Visually assessing the relative magnitude of two or more values."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#starting-with-estimation-because-it-is-the-hardest",
    "href": "class/3-visual-vocabulary/index.html#starting-with-estimation-because-it-is-the-hardest",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Starting with estimation because it is the hardest",
    "text": "Starting with estimation because it is the hardest\n\nThree levels of estimation\n\n\n\nLevel\nExample\n\n\n\n\n1. Discrimination\nX = Y X != Y\n\n\n2. Ranking\nX &lt; Y X &gt; Y\n\n\n3. Ratioing\nX / Y = ?\n\n\n\n📏 We want to get as far down this list as possible with efficiency and accuracy"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#what-visual-cues-are-most-effective-for-which-type-of-data",
    "href": "class/3-visual-vocabulary/index.html#what-visual-cues-are-most-effective-for-which-type-of-data",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "What visual cues are most effective for which type of data?",
    "text": "What visual cues are most effective for which type of data?\n\n\nSource: Yau, N. (2013). Data Points: Visualization That Means Something. Wiley."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#introducing-the-coffee-ratings-dataset",
    "href": "class/3-visual-vocabulary/index.html#introducing-the-coffee-ratings-dataset",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Introducing the coffee ratings dataset",
    "text": "Introducing the coffee ratings dataset\n\nThese data contain reviews of 1312 arabica and 28 robusta coffee beans from the Coffee Quality Institute’s trained reviewers. (Link to dataset)\nIt contains detailed information on coffee samples from different countries, focusing on nine attributes like aroma, flavor, aftertaste, acidity, body, balance, uniformity, cup cleanliness, sweetness.\nTotal cup points measures the overall coffee quality.\n\n\n\nlibrary(tidyverse)\nlibrary(kableExtra)\ncoffee_ratings &lt;- readr::read_csv(\"data/coffee_ratings.csv\")\nglimpse(coffee_ratings)\n\nRows: 1,337\nColumns: 43\n$ total_cup_points      &lt;dbl&gt; 90.58, 89.92, 89.75, 89.00, 88.83, 88.83, 88.75,…\n$ species               &lt;chr&gt; \"Arabica\", \"Arabica\", \"Arabica\", \"Arabica\", \"Ara…\n$ owner                 &lt;chr&gt; \"metad plc\", \"metad plc\", \"grounds for health ad…\n$ country_of_origin     &lt;chr&gt; \"Ethiopia\", \"Ethiopia\", \"Guatemala\", \"Ethiopia\",…\n$ farm_name             &lt;chr&gt; \"metad plc\", \"metad plc\", \"san marcos barrancas …\n$ lot_number            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ mill                  &lt;chr&gt; \"metad plc\", \"metad plc\", NA, \"wolensu\", \"metad …\n$ ico_number            &lt;chr&gt; \"2014/2015\", \"2014/2015\", NA, NA, \"2014/2015\", N…\n$ company               &lt;chr&gt; \"metad agricultural developmet plc\", \"metad agri…\n$ altitude              &lt;chr&gt; \"1950-2200\", \"1950-2200\", \"1600 - 1800 m\", \"1800…\n$ region                &lt;chr&gt; \"guji-hambela\", \"guji-hambela\", NA, \"oromia\", \"g…\n$ producer              &lt;chr&gt; \"METAD PLC\", \"METAD PLC\", NA, \"Yidnekachew Dabes…\n$ number_of_bags        &lt;dbl&gt; 300, 300, 5, 320, 300, 100, 100, 300, 300, 50, 3…\n$ bag_weight            &lt;chr&gt; \"60 kg\", \"60 kg\", \"1\", \"60 kg\", \"60 kg\", \"30 kg\"…\n$ in_country_partner    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ harvest_year          &lt;chr&gt; \"2014\", \"2014\", NA, \"2014\", \"2014\", \"2013\", \"201…\n$ grading_date          &lt;chr&gt; \"April 4th, 2015\", \"April 4th, 2015\", \"May 31st,…\n$ owner_1               &lt;chr&gt; \"metad plc\", \"metad plc\", \"Grounds for Health Ad…\n$ variety               &lt;chr&gt; NA, \"Other\", \"Bourbon\", NA, \"Other\", NA, \"Other\"…\n$ processing_method     &lt;chr&gt; \"Washed / Wet\", \"Washed / Wet\", NA, \"Natural / D…\n$ aroma                 &lt;dbl&gt; 8.67, 8.75, 8.42, 8.17, 8.25, 8.58, 8.42, 8.25, …\n$ flavor                &lt;dbl&gt; 8.83, 8.67, 8.50, 8.58, 8.50, 8.42, 8.50, 8.33, …\n$ aftertaste            &lt;dbl&gt; 8.67, 8.50, 8.42, 8.42, 8.25, 8.42, 8.33, 8.50, …\n$ acidity               &lt;dbl&gt; 8.75, 8.58, 8.42, 8.42, 8.50, 8.50, 8.50, 8.42, …\n$ body                  &lt;dbl&gt; 8.50, 8.42, 8.33, 8.50, 8.42, 8.25, 8.25, 8.33, …\n$ balance               &lt;dbl&gt; 8.42, 8.42, 8.42, 8.25, 8.33, 8.33, 8.25, 8.50, …\n$ uniformity            &lt;dbl&gt; 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00,…\n$ clean_cup             &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, …\n$ sweetness             &lt;dbl&gt; 10.00, 10.00, 10.00, 10.00, 10.00, 10.00, 10.00,…\n$ cupper_points         &lt;dbl&gt; 8.75, 8.58, 9.25, 8.67, 8.58, 8.33, 8.50, 9.00, …\n$ moisture              &lt;dbl&gt; 0.12, 0.12, 0.00, 0.11, 0.12, 0.11, 0.11, 0.03, …\n$ category_one_defects  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ quakers               &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ color                 &lt;chr&gt; \"Green\", \"Green\", NA, \"Green\", \"Green\", \"Bluish-…\n$ category_two_defects  &lt;dbl&gt; 0, 1, 0, 2, 2, 1, 0, 0, 0, 4, 1, 0, 0, 2, 2, 0, …\n$ expiration            &lt;chr&gt; \"April 3rd, 2016\", \"April 3rd, 2016\", \"May 31st,…\n$ certification_body    &lt;chr&gt; \"METAD Agricultural Development plc\", \"METAD Agr…\n$ certification_address &lt;chr&gt; \"309fcf77415a3661ae83e027f7e5f05dad786e44\", \"309…\n$ certification_contact &lt;chr&gt; \"19fef5a731de2db57d16da10287413f5f99bc2dd\", \"19f…\n$ unit_of_measurement   &lt;chr&gt; \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\", \"m\"…\n$ altitude_low_meters   &lt;dbl&gt; 1950.0, 1950.0, 1600.0, 1800.0, 1950.0, NA, NA, …\n$ altitude_high_meters  &lt;dbl&gt; 2200.0, 2200.0, 1800.0, 2200.0, 2200.0, NA, NA, …\n$ altitude_mean_meters  &lt;dbl&gt; 2075.0, 2075.0, 1700.0, 2000.0, 2075.0, NA, NA, …"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#calculate-country-level-summaries",
    "href": "class/3-visual-vocabulary/index.html#calculate-country-level-summaries",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Calculate country-level summaries",
    "text": "Calculate country-level summaries\nFor each country in the 18 most frequent levels, calculate the average total cup points and the number of coffee bean varieties, lump the other countries into the Other category.\n\n\ncountry_summary &lt;- coffee_ratings %&gt;%\n  mutate(country = fct_lump(country_of_origin, 18)) %&gt;%\n  group_by(country) %&gt;%\n  summarize(mean_rating = mean(total_cup_points, na.rm = TRUE),\n            n = n()) %&gt;%\n  arrange(desc(mean_rating)) \nhead(country_summary, 19)\n\n# A tibble: 19 × 3\n   country                      mean_rating     n\n   &lt;fct&gt;                              &lt;dbl&gt; &lt;int&gt;\n 1 Ethiopia                            85.5    44\n 2 Kenya                               84.3    25\n 3 Uganda                              83.5    36\n 4 Colombia                            83.1   183\n 5 El Salvador                         83.1    21\n 6 China                               82.9    16\n 7 Costa Rica                          82.8    51\n 8 Thailand                            82.6    32\n 9 Indonesia                           82.6    20\n10 Brazil                              82.4   132\n11 Tanzania, United Republic Of        82.4    40\n12 Taiwan                              82.0    75\n13 Guatemala                           81.8   181\n14 United States (Hawaii)              81.8    73\n15 Other                               81.7    80\n16 India                               81.1    14\n17 Mexico                              80.9   236\n18 Honduras                            80.9    52\n19 Nicaragua                           80.5    26"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#lets-start-from-the-bottom-of-the-list",
    "href": "class/3-visual-vocabulary/index.html#lets-start-from-the-bottom-of-the-list",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Let’s start from the bottom of the list",
    "text": "Let’s start from the bottom of the list\n\nPosition on a common scale\nPosition on non-aligned scales\nLength\nAngle\nArea\nVolume &lt;&gt; Density &lt;&gt; Color saturation\nColor hue"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#use-color-hue-to-visualize-average-ratings",
    "href": "class/3-visual-vocabulary/index.html#use-color-hue-to-visualize-average-ratings",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Use color hue to visualize average ratings",
    "text": "Use color hue to visualize average ratings\n\nEasy: which has higher ratings, Kenya or Indonesia?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#use-color-hue-to-visualize-average-ratings-1",
    "href": "class/3-visual-vocabulary/index.html#use-color-hue-to-visualize-average-ratings-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Use color hue to visualize average ratings",
    "text": "Use color hue to visualize average ratings\n\nHard: which has higher ratings, Indonesia or Costa Rica?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#what-about-now",
    "href": "class/3-visual-vocabulary/index.html#what-about-now",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "What about now?",
    "text": "What about now?\n\nObservation: alphabetical ordering of the categorical variable is almost never useful, re-rank as needed."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#move-up-one-level-to-color-saturation",
    "href": "class/3-visual-vocabulary/index.html#move-up-one-level-to-color-saturation",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Move up one level to color saturation",
    "text": "Move up one level to color saturation\n\nPosition on a common scale\nPosition on non-aligned scales\nLength\nAngle\nArea\nVolume &lt;&gt; Density &lt;&gt; Color saturation\nColor hue"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#use-color-saturation-to-visualize-average-ratings",
    "href": "class/3-visual-vocabulary/index.html#use-color-saturation-to-visualize-average-ratings",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Use color saturation to visualize average ratings",
    "text": "Use color saturation to visualize average ratings\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo legend?\nNo problem.\nBecause color saturation has natural ordering."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#color-saturation-is-easier-to-quantify",
    "href": "class/3-visual-vocabulary/index.html#color-saturation-is-easier-to-quantify",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Color saturation is easier to quantify",
    "text": "Color saturation is easier to quantify\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe ratio between Mexico and United States is…\n2 or 3\nMoving down to the third level of estimation"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#move-up-one-level-to-area",
    "href": "class/3-visual-vocabulary/index.html#move-up-one-level-to-area",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Move up one level to area",
    "text": "Move up one level to area\n\nPosition on a common scale\nPosition on non-aligned scales\nLength\nAngle\nArea\nVolume &lt;&gt; Density &lt;&gt; Color saturation\nColor hue"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#this-is-weird-graph-but-still-informative",
    "href": "class/3-visual-vocabulary/index.html#this-is-weird-graph-but-still-informative",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "This is weird graph but still informative",
    "text": "This is weird graph but still informative"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#move-up-one-level-to-angle",
    "href": "class/3-visual-vocabulary/index.html#move-up-one-level-to-angle",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Move up one level to angle",
    "text": "Move up one level to angle\n\nPosition on a common scale\nPosition on non-aligned scales\nLength\nAngle\nArea\nVolume &lt;&gt; Density &lt;&gt; Color saturation\nColor hue"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#use-angle-to-visualize-coffee-bean-varieties",
    "href": "class/3-visual-vocabulary/index.html#use-angle-to-visualize-coffee-bean-varieties",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Use angle to visualize coffee bean varieties",
    "text": "Use angle to visualize coffee bean varieties"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#pie-charts-use-angles-to-encode-data",
    "href": "class/3-visual-vocabulary/index.html#pie-charts-use-angles-to-encode-data",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Pie charts use angles to encode data",
    "text": "Pie charts use angles to encode data\n\n\nFor categorical data, no more than 6 colors is best.\n(Source: European Environment Agency)"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#we-are-so-close",
    "href": "class/3-visual-vocabulary/index.html#we-are-so-close",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "We are so close!",
    "text": "We are so close!\n\n\nPosition on a common scale\nPosition on non-aligned scales\nLength\nAngle\nArea\nVolume &lt;&gt; Density &lt;&gt; Color saturation\nColor hue\n\n\n\n\n\n\n\n\n\n\n\n\n\nWait, I thought there is some difference…"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#the-start-at-zero-rule",
    "href": "class/3-visual-vocabulary/index.html#the-start-at-zero-rule",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "The start-at-zero rule",
    "text": "The start-at-zero rule"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#how-to-lie-with-statistics-1954",
    "href": "class/3-visual-vocabulary/index.html#how-to-lie-with-statistics-1954",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "How to Lie with Statistics (1954)",
    "text": "How to Lie with Statistics (1954)\n\nDarrell Huff argues that truncating the y-axis can exaggerate differences and mislead the viewer.\nIt creates a false impression of dramatic change where the actual variation is small."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#the-visual-display-of-quantitative-information-1983",
    "href": "class/3-visual-vocabulary/index.html#the-visual-display-of-quantitative-information-1983",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "The Visual Display of Quantitative Information (1983)",
    "text": "The Visual Display of Quantitative Information (1983)\n\n\nEdward Tufte prioritizes data density and the detection of subtle patterns.\nHe argues that starting at zero can waste valuable space, obscuring meaningful variations.\n\n\nCombined MMR vaccination rate, 1994/95 to 2014/15, England\n\n\nTake another look, axis doesn’t start at zero"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#position-but-not-a-common-scale",
    "href": "class/3-visual-vocabulary/index.html#position-but-not-a-common-scale",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Position, but not a common scale",
    "text": "Position, but not a common scale\n\n\nPosition on a common scale\nPosition on non-aligned scales\nLength\nAngle\nArea\nVolume &lt;&gt; Density &lt;&gt; Color saturation\nColor hue"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#position-and-a-common-scale",
    "href": "class/3-visual-vocabulary/index.html#position-and-a-common-scale",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Position, and a common scale",
    "text": "Position, and a common scale\n\n\nPosition on a common scale\nPosition on non-aligned scales\nLength\nAngle\nArea\nVolume &lt;&gt; Density &lt;&gt; Color saturation\nColor hue"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#position-and-a-common-scale-1",
    "href": "class/3-visual-vocabulary/index.html#position-and-a-common-scale-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Position, and a common scale",
    "text": "Position, and a common scale\n\n\nPosition on a common scale\nPosition on non-aligned scales\nLength\nAngle\nArea\nVolume &lt;&gt; Density &lt;&gt; Color saturation\nColor hue\n\n\n\n\n\n\n\n\n\n\n\n\nRe-ranking categorical variables still matters!"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#implications-for-designing-effective-data-visualizations",
    "href": "class/3-visual-vocabulary/index.html#implications-for-designing-effective-data-visualizations",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Implications for designing effective data visualizations",
    "text": "Implications for designing effective data visualizations\n\nStacked anything is nearly always a mistake\nPie charts are always a mistake\nScatterplot are the best way to show the relationships between two variables\nIf growth (slope) is important, plot it directly"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#stacked-anything-is-nearly-always-a-mistake",
    "href": "class/3-visual-vocabulary/index.html#stacked-anything-is-nearly-always-a-mistake",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Stacked anything is nearly always a mistake!",
    "text": "Stacked anything is nearly always a mistake!\n\n\nWhich category has higher count: SI1-Premium or VS2-Premium?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#transform-stacked-barplot-to-a-parallel-coordinate-plot",
    "href": "class/3-visual-vocabulary/index.html#transform-stacked-barplot-to-a-parallel-coordinate-plot",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Transform stacked barplot to a parallel coordinate plot",
    "text": "Transform stacked barplot to a parallel coordinate plot\n\n\nWhich category has higher count: SI1-Premium or VS2-Premium?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#you-lose-some-information-but-just-use-two-charts-if-needed",
    "href": "class/3-visual-vocabulary/index.html#you-lose-some-information-but-just-use-two-charts-if-needed",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "You lose some information, but just use two charts if needed",
    "text": "You lose some information, but just use two charts if needed"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#why-are-pie-charts-never-a-good-idea",
    "href": "class/3-visual-vocabulary/index.html#why-are-pie-charts-never-a-good-idea",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Why are pie charts never a good idea?",
    "text": "Why are pie charts never a good idea?\n\n\n\nAngle is #4 on the accuracy list, we can do better."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#if-you-have-a-small-amount-of-data-to-show-dont-use-pie-charts",
    "href": "class/3-visual-vocabulary/index.html#if-you-have-a-small-amount-of-data-to-show-dont-use-pie-charts",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "If you have a small amount of data to show, don’t use pie charts",
    "text": "If you have a small amount of data to show, don’t use pie charts\n\nDon’t do this!\n\n\n\n\n\n\n\n\n\n\nDo this instead!\n\n\n\nLabel\nValue\n\n\n\n\nA\n25\n\n\nB\n60\n\n\nC\n15"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#if-you-have-a-lot-of-data-to-show-dont-use-pie-charts",
    "href": "class/3-visual-vocabulary/index.html#if-you-have-a-lot-of-data-to-show-dont-use-pie-charts",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "If you have a lot of data to show, don’t use pie charts",
    "text": "If you have a lot of data to show, don’t use pie charts\n\n\nDon’t do this!\n\n\n\n\n\n\n\n\n\n\nOr this!"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#all-good-pie-charts-are-jokes",
    "href": "class/3-visual-vocabulary/index.html#all-good-pie-charts-are-jokes",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "All good pie charts are jokes",
    "text": "All good pie charts are jokes"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#if-you-want-to-show-the-relationship-between-two-variables-use-scatterplot",
    "href": "class/3-visual-vocabulary/index.html#if-you-want-to-show-the-relationship-between-two-variables-use-scatterplot",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "If you want to show the relationship between two variables, use scatterplot",
    "text": "If you want to show the relationship between two variables, use scatterplot\n\n\nWhat is the relationship between Ozone concentrations and temperature?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#if-you-want-to-show-the-relationship-between-two-variables-use-scatterplot-1",
    "href": "class/3-visual-vocabulary/index.html#if-you-want-to-show-the-relationship-between-two-variables-use-scatterplot-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "If you want to show the relationship between two variables, use scatterplot",
    "text": "If you want to show the relationship between two variables, use scatterplot"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#if-you-care-about-the-growth-slope-plot-it-directly",
    "href": "class/3-visual-vocabulary/index.html#if-you-care-about-the-growth-slope-plot-it-directly",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "If you care about the growth (slope), plot it directly",
    "text": "If you care about the growth (slope), plot it directly\n\n\nWhich country has higher population growth: Nigeria or India?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#if-you-care-about-the-growth-slope-plot-it-directly-1",
    "href": "class/3-visual-vocabulary/index.html#if-you-care-about-the-growth-slope-plot-it-directly-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "If you care about the growth (slope), plot it directly",
    "text": "If you care about the growth (slope), plot it directly\n\n\nMost countries’ population growth are slowing down, which wasn’t obvious in the previous graph."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#clevelands-three-visual-operations-of-pattern-perception-1",
    "href": "class/3-visual-vocabulary/index.html#clevelands-three-visual-operations-of-pattern-perception-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Cleveland’s three visual operations of pattern perception",
    "text": "Cleveland’s three visual operations of pattern perception\n🎯 Detection: Recognizing that a geometric object encodes a physical value.\n\n🧩 Assembly: Grouping detected graphical elements into patterns.\n\n📏 Estimation: Visually assessing the relative magnitude of two or more values."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#assembly-gestalt-psychology",
    "href": "class/3-visual-vocabulary/index.html#assembly-gestalt-psychology",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Assembly: Gestalt Psychology",
    "text": "Assembly: Gestalt Psychology\n\n“Gestalt (German for form, shape, or configuration). Gestalt psychology proposes that the human brain perceives objects as part of a greater whole rather than as isolated elements.”\n\n\n\nReification\n\n\n\nEmergence"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#applying-gestalt-principles-to-data-visualization",
    "href": "class/3-visual-vocabulary/index.html#applying-gestalt-principles-to-data-visualization",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Applying Gestalt principles to data visualization",
    "text": "Applying Gestalt principles to data visualization\n\n“The law of Prãgnanz, also known as the law of good Gestalt. People tend to experience things as regular, orderly, symmetrical, and simple.”\n\n\nLaw of Continuity \n\n\nLaw of Similarity\n\n\n\n\nLaw of Closure \n\n\n\nLaw of Proximity"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#bad-visualizations-lack-law-of-continuity",
    "href": "class/3-visual-vocabulary/index.html#bad-visualizations-lack-law-of-continuity",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Bad visualizations lack law of continuity",
    "text": "Bad visualizations lack law of continuity\n\n\nThis hurts our brain."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#good-visualizations-leverage-law-of-continuity",
    "href": "class/3-visual-vocabulary/index.html#good-visualizations-leverage-law-of-continuity",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Good visualizations leverage law of continuity",
    "text": "Good visualizations leverage law of continuity\n\n\nThis is much easier."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#use-law-of-similarity-to-group-similar-data",
    "href": "class/3-visual-vocabulary/index.html#use-law-of-similarity-to-group-similar-data",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Use law of similarity to group similar data",
    "text": "Use law of similarity to group similar data"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#some-encodings-are-better-than-others",
    "href": "class/3-visual-vocabulary/index.html#some-encodings-are-better-than-others",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Some encodings are better than others",
    "text": "Some encodings are better than others"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#shape-is-less-effective-than-color-hue-for-nominal-data",
    "href": "class/3-visual-vocabulary/index.html#shape-is-less-effective-than-color-hue-for-nominal-data",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Shape is less effective than color hue for nominal data",
    "text": "Shape is less effective than color hue for nominal data"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#you-can-combine-both-color-and-shape-to-be-more-effective",
    "href": "class/3-visual-vocabulary/index.html#you-can-combine-both-color-and-shape-to-be-more-effective",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "You can combine both color and shape to be more effective",
    "text": "You can combine both color and shape to be more effective"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#use-law-of-closure-to-group-similar-data",
    "href": "class/3-visual-vocabulary/index.html#use-law-of-closure-to-group-similar-data",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Use law of closure to group similar data",
    "text": "Use law of closure to group similar data"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#law-of-proximity-we-see-elements-near-each-other-as-part-of-the-same-object",
    "href": "class/3-visual-vocabulary/index.html#law-of-proximity-we-see-elements-near-each-other-as-part-of-the-same-object",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Law of proximity: we see elements near each other as part of the same object",
    "text": "Law of proximity: we see elements near each other as part of the same object"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#still-worse-than-parallel-coordinate-plot",
    "href": "class/3-visual-vocabulary/index.html#still-worse-than-parallel-coordinate-plot",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Still worse than parallel coordinate plot",
    "text": "Still worse than parallel coordinate plot"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#clevelands-three-visual-operations-of-pattern-perception-2",
    "href": "class/3-visual-vocabulary/index.html#clevelands-three-visual-operations-of-pattern-perception-2",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Cleveland’s three visual operations of pattern perception",
    "text": "Cleveland’s three visual operations of pattern perception\n\n🎯 Detection: Recognizing that a geometric object encodes a physical value.\n\n🧩 Assembly: Grouping detected graphical elements into patterns.\n📏 Estimation: Visually assessing the relative magnitude of two or more values."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#detection-should-be-trivial-dont-make-it-hard",
    "href": "class/3-visual-vocabulary/index.html#detection-should-be-trivial-dont-make-it-hard",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Detection should be trivial, don’t make it hard",
    "text": "Detection should be trivial, don’t make it hard"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#detection-should-be-trivial-dont-make-it-hard-1",
    "href": "class/3-visual-vocabulary/index.html#detection-should-be-trivial-dont-make-it-hard-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Detection should be trivial, don’t make it hard",
    "text": "Detection should be trivial, don’t make it hard"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#detection-should-be-trivial-dont-make-it-hard-2",
    "href": "class/3-visual-vocabulary/index.html#detection-should-be-trivial-dont-make-it-hard-2",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Detection should be trivial, don’t make it hard",
    "text": "Detection should be trivial, don’t make it hard"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#end-break",
    "href": "class/3-visual-vocabulary/index.html#end-break",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "",
    "text": "Take a Break\n\n\n~ This is the end of part 1 ~\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#outline-for-today-1",
    "href": "class/3-visual-vocabulary/index.html#outline-for-today-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Outline for today",
    "text": "Outline for today\n\nHow human see data\nData-Ink Maximization and Graphical Redesign\nDesign considerations for different types of intended audience"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#principles-of-graphical-excellence",
    "href": "class/3-visual-vocabulary/index.html#principles-of-graphical-excellence",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Principles of Graphical Excellence",
    "text": "Principles of Graphical Excellence\n\nGraphical excellence is the well-designed presentation of interesting data - a matter of substance, of statistics, and of design.\nGraphical excellence consists of complex ideas communicated with clarity, precision, and efficiency.\nGraphical excellence is that which gives the viewer the greatest number of ideas in the shortest time with the least ink in the smallest space.\n\n\n\nGraphical excellence is nearly always multivariate.\nGraphical excellence requires telling the truth about the data."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#lie-factor",
    "href": "class/3-visual-vocabulary/index.html#lie-factor",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Lie factor",
    "text": "Lie factor\n\\[\n\\text{Lie Factor} = \\frac{\\text{size of effect shown in graphic}}{\\text{size of effect in data}}\n\\]\n\n\nCan you calculate the lie factor in this graph?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#why-are-3d-graphs-bad",
    "href": "class/3-visual-vocabulary/index.html#why-are-3d-graphs-bad",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Why are 3D graphs bad?",
    "text": "Why are 3D graphs bad?\n\n\nSource: the Guardian, 2008"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#how-should-the-data-be-plotted",
    "href": "class/3-visual-vocabulary/index.html#how-should-the-data-be-plotted",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "How should the data be plotted?",
    "text": "How should the data be plotted?"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#or-even-better",
    "href": "class/3-visual-vocabulary/index.html#or-even-better",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Or even better",
    "text": "Or even better"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#maximize-data-ink-ratio",
    "href": "class/3-visual-vocabulary/index.html#maximize-data-ink-ratio",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Maximize Data-Ink Ratio",
    "text": "Maximize Data-Ink Ratio\n\\[\n\\begin{aligned}\n\\text{Data-Ink Ratio} &= \\frac{\\text{Data ink}}{\\text{Total ink used in graphic}} \\\\\n                      &= \\text{proportion of a graphic's ink devoted to the} \\\\\n                      &\\quad \\text{non-redundant display of data-information} \\\\\n                      &= 1 - \\frac{\\text{Redundant ink}}{\\text{Total ink used in graphic}}\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#avoid-junk-chart",
    "href": "class/3-visual-vocabulary/index.html#avoid-junk-chart",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Avoid junk chart",
    "text": "Avoid junk chart"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#avoid-junk-chart-1",
    "href": "class/3-visual-vocabulary/index.html#avoid-junk-chart-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Avoid junk chart",
    "text": "Avoid junk chart"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#avoid-junk-chart-2",
    "href": "class/3-visual-vocabulary/index.html#avoid-junk-chart-2",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Avoid junk chart",
    "text": "Avoid junk chart"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#avoid-junk-chart-3",
    "href": "class/3-visual-vocabulary/index.html#avoid-junk-chart-3",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Avoid junk chart",
    "text": "Avoid junk chart"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#avoid-junk-chart-4",
    "href": "class/3-visual-vocabulary/index.html#avoid-junk-chart-4",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Avoid junk chart",
    "text": "Avoid junk chart"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#avoid-junk-chart-5",
    "href": "class/3-visual-vocabulary/index.html#avoid-junk-chart-5",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Avoid junk chart",
    "text": "Avoid junk chart"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#data-density-in-graphical-practice",
    "href": "class/3-visual-vocabulary/index.html#data-density-in-graphical-practice",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Data density in graphical practice",
    "text": "Data density in graphical practice\n\n\n\nOffice of Management and Budget\nSocial Indicators, 1973\n\n\n \n\\[\n\\text{data density of a graphic} = \\frac{\\text{number of entries in data matrix}}{\\text{area of data graphic}}\n\\]\n\n\\[\n\\begin{aligned}\n\\text{data density} &= \\frac{\\text{2 data points}}{\\text{graph covres 26.5 square inch}} \\\\\n&= 0.15 \\text{ numbers per square inch}\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#data-density-in-graphical-practice-1",
    "href": "class/3-visual-vocabulary/index.html#data-density-in-graphical-practice-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Data density in graphical practice",
    "text": "Data density in graphical practice\n\n\n\nJacques Bertin, Semiologie Graphique, 1973\n\n\n\n\\[\n\\text{data density of a graphic} = \\frac{\\text{number of entries in data matrix}}{\\text{area of data graphic}}\n\\]\n \n\\[\n\\begin{aligned}\n\\text{data density} &= \\frac{\\text{240,000 data points}}{\\text{graph covres 27 square inch}} \\\\\n&= 9,000 \\text{ numbers per square inch}\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#how-to-create-high-information-graphics-design",
    "href": "class/3-visual-vocabulary/index.html#how-to-create-high-information-graphics-design",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "How to create high-information graphics design?",
    "text": "How to create high-information graphics design?\nGraphics can be shrunk way down\n\nDefault size\n\n\n\n\n\n\n\n\n\n\nAppropriate size"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#small-multiples",
    "href": "class/3-visual-vocabulary/index.html#small-multiples",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Small Multiples",
    "text": "Small Multiples\n\n“Small multiples resemble the frames of a movie: a series of graphics, showing the same combination of variables, indexed by changes in another variable.”\n\n\nTufte, E. R. (1983). The Visual Display of Quantitative Information. Cheshire, CT: Graphics Press.\n\n\n\nPew Research Center"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#well-designed-small-multiples-are",
    "href": "class/3-visual-vocabulary/index.html#well-designed-small-multiples-are",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Well-designed small multiples are",
    "text": "Well-designed small multiples are\n\ninevitably comparative\ndeftly multivariate\nshrunken, high-density graphics\nusually based on a large data matrix\ndraw almost entirely with data-ink\nefficient in interpretation\noften narrative in content, showing shifts in the relationship between variables as the index variable changes (thereby revealing interaction or multiplicative effects)"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#outline-for-today-2",
    "href": "class/3-visual-vocabulary/index.html#outline-for-today-2",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Outline for today",
    "text": "Outline for today\n\nHow human see data\nData-Ink Maximization and Graphical Redesign\nDesign considerations for different types of intended audience"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#audience-dimensions",
    "href": "class/3-visual-vocabulary/index.html#audience-dimensions",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Audience dimensions",
    "text": "Audience dimensions\nAudience may vary by:\n\nDomain knowledge: the field of study\nStatistical literacy: the level of knowledge\nTime constraints: the time available to read the data\nCognitive load: the ability to process large amount of information\nExpectations for interactivity or aesthetics"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#tuftes-design-principles",
    "href": "class/3-visual-vocabulary/index.html#tuftes-design-principles",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Tufte’s design principles",
    "text": "Tufte’s design principles\n\n\nGraphical integrity\nThe Lie Factor\nMaximize data-ink ratio\nAvoid chart junk\n\n\n\n\n\nMost useful for analytical or technical audience, e.g. scientists, engineers, and data analysts. Less useful for the general public or media campaigns."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#useful-junk",
    "href": "class/3-visual-vocabulary/index.html#useful-junk",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Useful junk",
    "text": "Useful junk\n\n\n\n\n\n\nBateman et al, CHI 2010: Graphs"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#section-1",
    "href": "class/3-visual-vocabulary/index.html#section-1",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "",
    "text": "In-Class Activity:\nChoose one of the three visualizations and answer:\n\nWhat message is this chart trying to convey?\nHow do the visuals help (or hurt) comprehension?\nIf you removed the embellishments, what would be lost or gained?\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#data-accessibility-for-individuals-with-intellectural-or-developmental-disabilities",
    "href": "class/3-visual-vocabulary/index.html#data-accessibility-for-individuals-with-intellectural-or-developmental-disabilities",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Data accessibility for individuals with intellectural or developmental disabilities",
    "text": "Data accessibility for individuals with intellectural or developmental disabilities\n\n\nYour browser does not support the video tag."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#data-accessibility-for-individuals-with-color-blindedness",
    "href": "class/3-visual-vocabulary/index.html#data-accessibility-for-individuals-with-color-blindedness",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "Data accessibility for individuals with color blindedness",
    "text": "Data accessibility for individuals with color blindedness\n\nColor blindness affects approximately 1 in 12 men and 1 in 200 women. To ensure your visualizations remain accessible:\n\nAvoid red-green or red-brown combinations\nUse colorblind-friendly palettes, such as viridis, Okabe-Ito, or Color Universal Design (CUD)\nAdd texture, shape, or direct labels to differentiate groups beyond color\nTest your charts with tools like colorblindr\nUse contrast checkers to ensure sufficient visual separation\n\n\n\n\nDesigning with color blindness in mind improves clarity for everyone."
  },
  {
    "objectID": "class/3-visual-vocabulary/index.html#end-of-class-survey",
    "href": "class/3-visual-vocabulary/index.html#end-of-class-survey",
    "title": "Lecture 2. Visual Vocabulary & Effective Visualizations",
    "section": "End-of-Class Survey",
    "text": "End-of-Class Survey\n  \n\n\n Fill out the end-of-class survey\n\n\n~ This is the end of Lecture 2 ~\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#outline-for-today",
    "href": "class/2-data-wrangling/index.html#outline-for-today",
    "title": "Lab 1. Data Wrangling",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroduction to GitHub and Git\nData transformation\nData tidying"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#about-github",
    "href": "class/2-data-wrangling/index.html#about-github",
    "title": "Lab 1. Data Wrangling",
    "section": "About GitHub",
    "text": "About GitHub\n\nGitHub is a cloud-based platform for version control and collaboration.\nStoring your code in a “repository” on GitHub allows you to:\n\nTrack changes to your code over time\nCollaborate with others on projects, including your “future self”\nShare your work with the world\n\nMade possible by the open-source software, Git"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#about-git",
    "href": "class/2-data-wrangling/index.html#about-git",
    "title": "Lab 1. Data Wrangling",
    "section": "About Git",
    "text": "About Git\n\nGit is a version control system that allows you to track changes to files.\nA typical Git-based workflow includes:\n\nClone a repository from GitHub to your local machine\nBranch off the main copy of the files that you are working on\nEdit files independently and safely on your own branch\nLet Git keep track of the changes you and others make\nLet Git intelligently merge your changes back into the main copy of the files"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#how-do-git-and-github-work-together",
    "href": "class/2-data-wrangling/index.html#how-do-git-and-github-work-together",
    "title": "Lab 1. Data Wrangling",
    "section": "How do Git and GitHub work together?",
    "text": "How do Git and GitHub work together?\n\n\nWhat is a Git repository?\n\nA collection of files and their history, can be local (on your computer) or remote (on GitHub)\nWhen you make changes (or commits) to the files, Git keeps track of the changes\n\nPlenty to do in your browser\n\nCreate a Git repository, create branches, upload and edit files\n\nBut, most people work locally, then continue to sync local changes with the remote repository on GitHub\n\n\nUse Git commands in the terminal or GitHub Desktop\nPull the latest changes from the remote repository\nPush back your own changes to the same remote repository"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#section",
    "href": "class/2-data-wrangling/index.html#section",
    "title": "Lab 1. Data Wrangling",
    "section": "",
    "text": "In-Class Activity:   GitHub and RStudio tutorial"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#prerequisites",
    "href": "class/2-data-wrangling/index.html#prerequisites",
    "title": "Lab 1. Data Wrangling",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nYou have a GitHub account\nYou have downloaded and installed Git\nYou have downloaded and installed RStudio\n\n5 minutes to catch up on these if you haven’t done so already!\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#create-the-remote-repository-on-github",
    "href": "class/2-data-wrangling/index.html#create-the-remote-repository-on-github",
    "title": "Lab 1. Data Wrangling",
    "section": "Create the remote repository on GitHub",
    "text": "Create the remote repository on GitHub\n\nAccept the invitation to join the GitHub Classroom, check your email\nAccept the assignment titled lab 1, check your email or use this link https://classroom.github.com/a/XXXX\nNavigate to GitHub, under the class organization, you should see a repository named lab1-&lt;your-github-username&gt;."
  },
  {
    "objectID": "class/2-data-wrangling/index.html#clone-the-repository-with-rstudio",
    "href": "class/2-data-wrangling/index.html#clone-the-repository-with-rstudio",
    "title": "Lab 1. Data Wrangling",
    "section": "Clone the repository with RStudio",
    "text": "Clone the repository with RStudio\n\nOn GitHub, navigate to the Code tab of the repository\nClick the green &lt;&gt; Codebutton\nClcik the Copy to clipboard button to copy the repository URL\nOpen RStudio on your local environment\nClick File, New Project, Version Control, Git\nPaste the URL you copied from GitHub into the Repository URL field and enter TAB to move to the Project directory name field\nClick Create Project"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#edit-the-lab-notebook-in-rstudio",
    "href": "class/2-data-wrangling/index.html#edit-the-lab-notebook-in-rstudio",
    "title": "Lab 1. Data Wrangling",
    "section": "Edit the lab notebook in RStudio",
    "text": "Edit the lab notebook in RStudio\n\nIn RStudio, click Files, Open File, and select 1-lab1.qmd\nUpdate the header - put your name in the author argument and put today’s date in the date argument.\nSave the file, and click Render to generate the HTML file."
  },
  {
    "objectID": "class/2-data-wrangling/index.html#commit-and-push-the-changes-to-github",
    "href": "class/2-data-wrangling/index.html#commit-and-push-the-changes-to-github",
    "title": "Lab 1. Data Wrangling",
    "section": "Commit and push the changes to GitHub",
    "text": "Commit and push the changes to GitHub\n\n\nIn RStudio, click the Git tab in the upper right pane\nClick Commit\nIn the Commit window, check the box next to the file you want to commit (1-lab1.qmd and 1-lab1.html)\nEnter a commit message in the Commit message field (e.g., “Update lab notebook header”)\nClick the Commit button\nClick the Pull button to fetch any remote changes\nClick the Push button to push your changes to GitHub\nNavigate to your GitHub repository in your browser and check that the changes have been pushed successfully"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#congratulations",
    "href": "class/2-data-wrangling/index.html#congratulations",
    "title": "Lab 1. Data Wrangling",
    "section": "Congratulations!",
    "text": "Congratulations!"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#introducing-github-flow",
    "href": "class/2-data-wrangling/index.html#introducing-github-flow",
    "title": "Lab 1. Data Wrangling",
    "section": "Introducing GitHub Flow",
    "text": "Introducing GitHub Flow\n\n\nImage by Yan Min Thwin"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#create-local-branches-with-git",
    "href": "class/2-data-wrangling/index.html#create-local-branches-with-git",
    "title": "Lab 1. Data Wrangling",
    "section": "Create local branches with Git",
    "text": "Create local branches with Git\n\n\n\n\n\n\n\nTip\n\n\nYou can do these using the Git GUI in RStudio, I am showing you the command line version so you can learn a different method and choose what you prefer.\n\n\n\n\n\nIn RStudio click the Terminal tab in the lower left pane, next to the Console tab\n\n\n\n\n\n\n\n\nNote\n\n\nIf you cannot find the Terminal tab, you can also open a terminal window by clicking on the Tools menu and selecting Terminal &gt; New Terminal. If that doesn’t work, check if your RStudio is out of date. Click Help, About RStudio to check the current version."
  },
  {
    "objectID": "class/2-data-wrangling/index.html#create-local-branches-with-git-1",
    "href": "class/2-data-wrangling/index.html#create-local-branches-with-git-1",
    "title": "Lab 1. Data Wrangling",
    "section": "Create local branches with Git",
    "text": "Create local branches with Git\n\nIn the terminal, type the following command to create a new branch called feat/clean-data:\n\ngit checkout -b feat/clean-data\n\n\nType the following command to check that you are on the new branch:\n\ngit status\nYou should see a message that says “On branch feat/clean-data” and “nothing to commit, working tree clean”.\nYou are ready to start making changes to your files!"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#make-local-changes-with-git",
    "href": "class/2-data-wrangling/index.html#make-local-changes-with-git",
    "title": "Lab 1. Data Wrangling",
    "section": "Make local changes with Git",
    "text": "Make local changes with Git\nIn RStudio, open the 1-lab1.qmd file and make some changes to the text.\nFor example, you can add a new section called “Data Wrangling” and write a few sentences about what tidy data is about.\nYou can also add a new code chunk to the file and write some R code to load the tidyverse package and read in a CSV file.\n\nlibrary(tidyverse)\nraw_data &lt;- read_csv(\"raw_data.csv\")\n\nAfter you are satisfied with your changes, save the file and knit the 1-lab1.qmd file to generate the HTML file."
  },
  {
    "objectID": "class/2-data-wrangling/index.html#commit-local-changes-with-git",
    "href": "class/2-data-wrangling/index.html#commit-local-changes-with-git",
    "title": "Lab 1. Data Wrangling",
    "section": "Commit local changes with Git",
    "text": "Commit local changes with Git\n\nDetermine your file’s status.\n\ngit status\nYou should see a message that says “On branch feat/clean-data” and “Changes not staged for commit”.\n\nAdd the changes to the staging area.\n\ngit add .\n\nSee your file’s current status.\n\ngit status\nYour files should be listed under Changes to be committed.\n\nCommit the changes with a message. Replace  with a log message describing the changes.\n\ngit commit -m \"&lt;COMMIT-MESSAGE&gt;\""
  },
  {
    "objectID": "class/2-data-wrangling/index.html#open-a-pull-request-on-github",
    "href": "class/2-data-wrangling/index.html#open-a-pull-request-on-github",
    "title": "Lab 1. Data Wrangling",
    "section": "Open a pull request on GitHub",
    "text": "Open a pull request on GitHub\n\nPush the changes to the remote repository, replace  with the name of your branch, in this case feat/clean-data\n\ngit push origin &lt;BRANCH-NAME&gt;\n\nNavigate to your GitHub repository in your browser\nClick the Compare & pull requests button, if you don’t see it, navigate to the “Pull requests” tab and click the New pull reques button.\nIn the “Open a pull request” page, enter a title and description for your pull request. You can add a reviewer, for example your teammate on this pull request."
  },
  {
    "objectID": "class/2-data-wrangling/index.html#merge-your-pull-request-on-github",
    "href": "class/2-data-wrangling/index.html#merge-your-pull-request-on-github",
    "title": "Lab 1. Data Wrangling",
    "section": "Merge your pull request on GitHub",
    "text": "Merge your pull request on GitHub\n\n\n\n\n\n\n\nNote\n\n\nSince this is your repository, you probably don’t have anyone to collaborate with (yet). Go ahead and merge your Pull Request now. Later in the semester you may want your teammate to look over your code before they merge.\n\n\n\n\n\nOn GitHub, navigate to the Pull Request that you just opened.\nScroll down and click the big green Merge Pull Request button.\nClick Confirm Merge.\nDelete the branch .\n\n\n  \nReference: GitHub and RStudio"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#end-break",
    "href": "class/2-data-wrangling/index.html#end-break",
    "title": "Lab 1. Data Wrangling",
    "section": "",
    "text": "Take a Break\n\n\n~ This is the end of part 1 ~\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#outline-for-today-1",
    "href": "class/2-data-wrangling/index.html#outline-for-today-1",
    "title": "Lab 1. Data Wrangling",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroduction to GitHub and Git\nData transformation\nData tidying"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#of-data-scientists-time-is-spent-on-data-wrangling",
    "href": "class/2-data-wrangling/index.html#of-data-scientists-time-is-spent-on-data-wrangling",
    "title": "Lab 1. Data Wrangling",
    "section": "“80% of data scientists’ time is spent on data wrangling”",
    "text": "“80% of data scientists’ time is spent on data wrangling”\nData wrangling: also known as data cleaning or data preparation, is the process of collecting, cleaning, transforming and organizing data from one “raw” form into another format with the intent of making it more appropriate for analysis.\n\n\nSource: R for Data Science"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#manipulate-data-in-r-using-dplyr",
    "href": "class/2-data-wrangling/index.html#manipulate-data-in-r-using-dplyr",
    "title": "Lab 1. Data Wrangling",
    "section": "Manipulate data in R using dplyr",
    "text": "Manipulate data in R using dplyr\nCommonality:\n\nThe first argument is always a data frame\nThe subsequent arguments are the columns of the data frame (without quotes)\nThe output is a new data frame . . .\n\nIndividuality:\n\nRows\n\nfilter(): filter rows\narrange(): change the order of rows\ndistinct(): remove duplicate rows\n\n\nColumns\n\nselect(): select columns\nrename(): rename columns\nmutate(): add new columns\n\n\nGroups\n\ngroup_by(): group rows by one or more columns\nsummarize(): summarize data by groups\nslice_*(): extract specific rows\nungroup(): remove grouping"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#a-word-on-pipe",
    "href": "class/2-data-wrangling/index.html#a-word-on-pipe",
    "title": "Lab 1. Data Wrangling",
    "section": "A word on pipe",
    "text": "A word on pipe\n%&gt;% in {magrittr} or |&gt; in base R\n\nPipe is a tool to combine multiple verbs.\nIt takes the thing on the left and passes it to the function on the right.\nx |&gt; f(y) is equivalent to f(x, y)\nx |&gt; f(y) |&gt; g(z) is equivalent to g(f(x, y), z).\nPronounces as “then”\nAdd pipe to your code using keyboard shortcut Ctrl/Cmd + Shift + M\n\n\nflights |&gt;\n  filter(dest == \"IAH\") |&gt; \n  group_by(year, month, day) |&gt; \n  summarize(\n    arr_delay = mean(arr_delay, na.rm = TRUE)\n  )"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#lots-of-verbs-to-remember",
    "href": "class/2-data-wrangling/index.html#lots-of-verbs-to-remember",
    "title": "Lab 1. Data Wrangling",
    "section": "Lots of verbs to remember!",
    "text": "Lots of verbs to remember!\n\n\nRefer to this cheat sheet"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#section-1",
    "href": "class/2-data-wrangling/index.html#section-1",
    "title": "Lab 1. Data Wrangling",
    "section": "",
    "text": "Practice makes perfect!\n\n\n~ Head over to lab1 notebook! ~"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#outline-for-today-2",
    "href": "class/2-data-wrangling/index.html#outline-for-today-2",
    "title": "Lab 1. Data Wrangling",
    "section": "Outline for today",
    "text": "Outline for today\n\nIntroduction to GitHub and Git\nData transformation\nData tidying"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#introduction-to-tidy-data",
    "href": "class/2-data-wrangling/index.html#introduction-to-tidy-data",
    "title": "Lab 1. Data Wrangling",
    "section": "Introduction to tidy data",
    "text": "Introduction to tidy data\n\n“Happy families are all alike; every unhappy family is unhappy in its own way.”\n\n\n- Leo Tolstoy, Anna Karenina\n\n\n“Tidy datasets are all alike, but every messy dataset is messy in its own way.”\n\n\n- Hadley Wickham, Tidy Data"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#what-is-tidy-data",
    "href": "class/2-data-wrangling/index.html#what-is-tidy-data",
    "title": "Lab 1. Data Wrangling",
    "section": "What is tidy data?",
    "text": "What is tidy data?\n\n\nBy Julia Lowndes and Allison Horst"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#what-is-an-example-of-untidy-data",
    "href": "class/2-data-wrangling/index.html#what-is-an-example-of-untidy-data",
    "title": "Lab 1. Data Wrangling",
    "section": "What is an example of untidy data?",
    "text": "What is an example of untidy data?\n\n\nSource: National Center for Ecological Analysis & Synthesis"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#section-2",
    "href": "class/2-data-wrangling/index.html#section-2",
    "title": "Lab 1. Data Wrangling",
    "section": "",
    "text": "Multiple tables, not machine-readable\n\n\n\nInconsistent columns\n\n\n\n\nInconsistent rows\n\n\n\n\nMarginal sums and statistics"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#a-single-untidy-table-climate_raw",
    "href": "class/2-data-wrangling/index.html#a-single-untidy-table-climate_raw",
    "title": "Lab 1. Data Wrangling",
    "section": "A single untidy table, climate_raw",
    "text": "A single untidy table, climate_raw\n\n\n\n\n\ndate\ncity\nzone\ntemp_morning\ntemp_afternoon\nhumid_morning\nhumid_afternoon\n\n\n\n\n2022-07-01\nPhoenix\nurban\n78\n104\n71\n36\n\n\n2022-07-02\nPhoenix\nurban\n79\n104\n19\n12\n\n\n2022-07-03\nPhoenix\nurban\n80\n99\n18\n19\n\n\n2022-07-04\nPhoenix\nurban\n76\n104\n50\n35\n\n\n2022-07-05\nPhoenix\nurban\n82\n106\n66\n33\n\n\n2022-07-01\nMiami\ncoastal\n89\n104\n89\n51\n\n\n2022-07-02\nMiami\ncoastal\n81\n96\n15\n32\n\n\n2022-07-03\nMiami\ncoastal\n75\n102\n70\n74\n\n\n2022-07-04\nMiami\ncoastal\n85\n107\n87\n36\n\n\n2022-07-05\nMiami\ncoastal\n83\n102\n17\n36"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#section-3",
    "href": "class/2-data-wrangling/index.html#section-3",
    "title": "Lab 1. Data Wrangling",
    "section": "",
    "text": "In-Class Activity:\nIn pairs, discuss the following:\n\nWhat makes climate_raw untidy?\nSketch out on paper what a tidy version of climate_raw would look like.\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#why-do-untidy-data-exist-and-what-to-do-about-it",
    "href": "class/2-data-wrangling/index.html#why-do-untidy-data-exist-and-what-to-do-about-it",
    "title": "Lab 1. Data Wrangling",
    "section": "Why do untidy data exist and what to do about it?",
    "text": "Why do untidy data exist and what to do about it?\n\nData is collected in a way that is convenient for the collector, not the analyst\nMost people aren’t familiar with the principles of tidy data unless you are a data professional\n\n\n\nTo tidy data:\n\nBegin by figuring out what are the variables and observations\nTalk to the data curator if needed\npivot your data into a tidy form"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#pivot_longer",
    "href": "class/2-data-wrangling/index.html#pivot_longer",
    "title": "Lab 1. Data Wrangling",
    "section": "pivot_longer()",
    "text": "pivot_longer()\n\nSuppose we have three patients with ids A, B, and C. Each patient has two blood pressure measurements: bp1 and bp2. The data is in wide format:\n\ndf &lt;- tibble::tribble(\n  ~id,  ~bp1, ~bp2,\n   \"A\",  100,  120,\n   \"B\",  140,  115,\n   \"C\",  120,  125\n)\n\n\n\n\n\nWe want our new dataset to have three variables: id (already exists), measurement (the column names), and value (the cell values). To achieve this, we pivot df longer:\n\ndf |&gt; \n  tidyr::pivot_longer(\n    cols = bp1:bp2,\n    names_to = \"measurement\",\n    values_to = \"value\"\n  )\n\n# A tibble: 6 × 3\n  id    measurement value\n  &lt;chr&gt; &lt;chr&gt;       &lt;dbl&gt;\n1 A     bp1           100\n2 A     bp2           120\n3 B     bp1           140\n4 B     bp2           115\n5 C     bp1           120\n6 C     bp2           125"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#how-does-pivot_longer-work",
    "href": "class/2-data-wrangling/index.html#how-does-pivot_longer-work",
    "title": "Lab 1. Data Wrangling",
    "section": "How does pivot_longer() work?",
    "text": "How does pivot_longer() work?\n\nRepeat id twice\n\n\nbp1 and bp2 become values in a new column\n\n\n\n\n  \nThe number of values is preserved and unwound row-by-row."
  },
  {
    "objectID": "class/2-data-wrangling/index.html#pivot_wider",
    "href": "class/2-data-wrangling/index.html#pivot_wider",
    "title": "Lab 1. Data Wrangling",
    "section": "pivot_wider()",
    "text": "pivot_wider()\n\nSuppose we have two patients with ids A and B. We have three blood measurements on patient A and two on patient B. The data is in long format:\n\ndf &lt;- tribble(\n  ~id, ~measurement, ~value,\n  \"A\",        \"bp1\",    100,\n  \"B\",        \"bp1\",    140,\n  \"B\",        \"bp2\",    115, \n  \"A\",        \"bp2\",    120,\n  \"A\",        \"bp3\",    105\n)\n\n\n\n\n\nWe’ll take the values from the value column and the names from the measurement column:\n\ndf |&gt; \n  tidyr::pivot_wider(\n    names_from = measurement,\n    values_from = value\n  )\n\n# A tibble: 2 × 4\n  id      bp1   bp2   bp3\n  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 A       100   120   105\n2 B       140   115    NA\n\n\npivot_wider() can make missing values."
  },
  {
    "objectID": "class/2-data-wrangling/index.html#how-does-pivot_wider-work",
    "href": "class/2-data-wrangling/index.html#how-does-pivot_wider-work",
    "title": "Lab 1. Data Wrangling",
    "section": "How does pivot_wider() work?",
    "text": "How does pivot_wider() work?\n\nFirst, figure out what will be the new column names, taken from measurement.\n\nlibrary(tidyverse)\ndf |&gt; \n  distinct(measurement) |&gt; \n  pull()\n\n[1] \"bp1\" \"bp2\" \"bp3\"\n\n\n\nThen, figure out what will be the rows in the output, determined by all the variables that aren’t going into the new names or values. Can be one or many.\n\ndf |&gt; \n  select(-measurement, -value) |&gt; \n  distinct()\n\n# A tibble: 2 × 1\n  id   \n  &lt;chr&gt;\n1 A    \n2 B    \n\n\n\n\n\n\n\n \npivot_wider() then combine the columns and rows to generate an empty data frame, then fill it with value in the input.\n\ndf |&gt; \n  select(-measurement, -value) |&gt; \n  distinct() |&gt; \n  mutate(bp1 = NA, bp2 = NA, bp3 = NA)\n\n# A tibble: 2 × 4\n  id    bp1   bp2   bp3  \n  &lt;chr&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;lgl&gt;\n1 A     NA    NA    NA   \n2 B     NA    NA    NA   \n\n\npivot_wider() can make missing values."
  },
  {
    "objectID": "class/2-data-wrangling/index.html#why-do-we-need-pivot_wider",
    "href": "class/2-data-wrangling/index.html#why-do-we-need-pivot_wider",
    "title": "Lab 1. Data Wrangling",
    "section": "Why do we need pivot_wider()?",
    "text": "Why do we need pivot_wider()?\n\nIsn’t tidy data long?\n\nYes — tidy data often means long format, especially for:\n\nplotting\nfiltering\ngrouping\n\nBut tidy ≠ always long!\n\nTidy = Structure\n\nEach variable in a column, each observation in a row\nSometimes wide format is tidy — it depends on context.\n\n\n\nWhen do we need pivot_wider()?\n\n✅ For modeling:\n\nlm(bp1 ~ bp2) needs one column per variable\n\n✅ For presentation:\n\nEasier to read tables with 1 row per subject\n\n✅ For joining:\n\nMerge with spatial data or metadata\n\n✅ To undo a pivot_longer()"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#section-4",
    "href": "class/2-data-wrangling/index.html#section-4",
    "title": "Lab 1. Data Wrangling",
    "section": "",
    "text": "Let’s tidy climate_raw\n\n\n~ Head over to lab1 notebook! ~"
  },
  {
    "objectID": "class/2-data-wrangling/index.html#end-of-class-survey",
    "href": "class/2-data-wrangling/index.html#end-of-class-survey",
    "title": "Lab 1. Data Wrangling",
    "section": "End-of-Class Survey",
    "text": "End-of-Class Survey\n  \n\n\n Fill out the end-of-class survey\n\n\n~ This is the end of Lab 1 ~\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/10-recreate-viz/index.html#no-class-today",
    "href": "class/10-recreate-viz/index.html#no-class-today",
    "title": "Lab 5. Recreate Visualization from Public Source",
    "section": "No Class Today",
    "text": "No Class Today\nReading assignment:\n\nMapping water insecurities in R with tidycensus\nBasic usage of {tidycensus}\nR for Data Science (2e), Chapter 11 – Visualize\n\nLab:\nPlease accept the Lab 5 assignment on GitHub Classroom and follow the tutorial on your own time. See the #announcement channel in Slack for the link. As always, labs are due next Monday June 23, 2025, at 11:59 PM."
  },
  {
    "objectID": "class/10-recreate-viz/index.html#how-to-store-api-key-without-committing-it-to-github",
    "href": "class/10-recreate-viz/index.html#how-to-store-api-key-without-committing-it-to-github",
    "title": "Lab 5. Recreate Visualization from Public Source",
    "section": "How to store API key without committing it to GitHub",
    "text": "How to store API key without committing it to GitHub\n\nTo use the {tidycensus} package, you need to set up a Census API key. You can obtain one from the Census Bureau’s website.\nYou can store your API key in a .Renviron file in your repository’s root directory (same directory as your .Rproj). Add .Renviron to .gitignore so that this file is not committed to GitHub."
  },
  {
    "objectID": "class/10-recreate-viz/index.html#how-to-store-api-key-without-committing-it-to-github-1",
    "href": "class/10-recreate-viz/index.html#how-to-store-api-key-without-committing-it-to-github-1",
    "title": "Lab 5. Recreate Visualization from Public Source",
    "section": "How to store API key without committing it to GitHub",
    "text": "How to store API key without committing it to GitHub\n\n\nThen in your R scripts, you can access the API key using Sys.getenv(\"CENSUS_API_KEY\"). This way, you can use the API key without hardcoding it into your scripts.\n\nlibrary(tidycensus)\ninvisible(\n  census_api_key(Sys.getenv(\"CENSUS_API_KEY\"), install = TRUE, overwrite = TRUE)\n)\noptions(tigris_use_cache = TRUE)\n\n\n\n\n\nProtect yourself against this!\n\n\nSource: Reddit"
  },
  {
    "objectID": "class/1-course-introduction/quarto_demo.html",
    "href": "class/1-course-introduction/quarto_demo.html",
    "title": "quarto_demo",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "class/1-course-introduction/quarto_demo.html#quarto",
    "href": "class/1-course-introduction/quarto_demo.html#quarto",
    "title": "quarto_demo",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "class/1-course-introduction/quarto_demo.html#running-code",
    "href": "class/1-course-introduction/quarto_demo.html#running-code",
    "title": "quarto_demo",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "class/1-course-introduction/quarto_demo.html#make-a-plot",
    "href": "class/1-course-introduction/quarto_demo.html#make-a-plot",
    "title": "quarto_demo",
    "section": "Make a plot",
    "text": "Make a plot\n\nlibrary(tidyverse)\nggplot(mtcars, aes(x = factor(gear), y = mpg)) +\n  geom_boxplot(fill = \"#2a7ae2\", alpha = 0.6) +\n  labs(\n    title = \"Miles Per Gallon by Gear Count\",\n    x = \"Number of Gears\",\n    y = \"Miles per Gallon (MPG)\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "class/1-course-introduction.html",
    "href": "class/1-course-introduction.html",
    "title": "Getting Started",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "Licensing and copyright information",
    "section": "",
    "text": "The course material is licensed under the Creative Commons ShareAlike 4.0 International License.\nIn developing this course, I draw contents from the following courses, workshops, and talks:\n\nCourses / workshops\n\n\n\nName\nAuthor(s)\nLinks\n\n\n\n\nCS 171\nHarvard University\ncourse\n\n\nEDS 240\nUniversity of California Santa Barbara\ncourse\n\n\nEMSE 4572\nGeorge Washington University\ncourse, github\n\n\nHow Humans See Data\nJohn Rauser\nyoutube\n\n\n\n\n\nBooks\n\n\n\nName\nAuthor(s)\nLinks\n\n\n\n\nR for Data Science\nGarrett Grolemund & Hadley Wickham\nonline book; GitHub; purchase",
    "crumbs": [
      "Other",
      "License"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This course will equip students with the skills and knowledge to create impactful and responsible data visualizations using the R programming language. At the end of this class, students will gain proficiency in both fundamental (e.g. bar chart, bubble chart, choropleth maps) as well as advanced graph types (e.g. Sankey diagram, heatmap, parallel coordinates plot, faceted graphs) and know how to create them using R.\nThis course was inspired by many other courses / resources that cover similar material - a full list of sources can be found in the LICENSE page.\nThis course was originally created by Dr. Xindi (Cindy) Hu at the George Washington University for the Summer 2025 semester.",
    "crumbs": [
      "Other",
      "About"
    ]
  },
  {
    "objectID": "class/1-course-introduction/index.html#outline-for-today",
    "href": "class/1-course-introduction/index.html#outline-for-today",
    "title": "1. Course Introduction",
    "section": "Outline for today",
    "text": "Outline for today\n\nWho?\nHow?\nWhat?\nWhy?\nIntroduction to {ggplot2}"
  },
  {
    "objectID": "class/1-course-introduction/index.html#meet-your-instructor",
    "href": "class/1-course-introduction/index.html#meet-your-instructor",
    "title": "1. Course Introduction",
    "section": "Meet your instructor",
    "text": "Meet your instructor\n\n\nXindi (Cindy) Hu, ScD\nAssistant Professor, Department of Environmental and Occupational Health\nScD in Environmental Health, Harvard University"
  },
  {
    "objectID": "class/1-course-introduction/index.html#water-health-and-opportunity-lab",
    "href": "class/1-course-introduction/index.html#water-health-and-opportunity-lab",
    "title": "1. Course Introduction",
    "section": "Water, Health, and Opportunity Lab",
    "text": "Water, Health, and Opportunity Lab\n\nOur Research:\nEnvironmental Data Science, Drinking Water Quality, Health Equity, Climate Change, Geospatial Analysis, Machine Learning"
  },
  {
    "objectID": "class/1-course-introduction/index.html#meet-your-tas",
    "href": "class/1-course-introduction/index.html#meet-your-tas",
    "title": "1. Course Introduction",
    "section": "Meet your TAs",
    "text": "Meet your TAs\n\n\n\nSilas Horn\nMPH Candidate\nEnvironmental Health Science and Policy\nGW SPH\n\n\n\n\nSayam Palrecha\nMS Candidate\nData Science\nGW CCAS"
  },
  {
    "objectID": "class/1-course-introduction/index.html#about-you",
    "href": "class/1-course-introduction/index.html#about-you",
    "title": "1. Course Introduction",
    "section": "About you",
    "text": "About you"
  },
  {
    "objectID": "class/1-course-introduction/index.html#outline-for-today-1",
    "href": "class/1-course-introduction/index.html#outline-for-today-1",
    "title": "1. Course Introduction",
    "section": "Outline for today",
    "text": "Outline for today\n\nWho?\nHow?\nWhat?\nWhy?\nIntroduction to {ggplot2}"
  },
  {
    "objectID": "class/1-course-introduction/index.html#pubh-6199-goals",
    "href": "class/1-course-introduction/index.html#pubh-6199-goals",
    "title": "1. Course Introduction",
    "section": "PUBH 6199 Goals",
    "text": "PUBH 6199 Goals\n\n\nTheory\n\nApply fundamental principles & techniques\n\n\nDesign Skills\n\nCreate, evaluate, and critique visualization designs\n\n\nCoding Skills\n\nImplement static and interactive data visualizations\n\n\n\nDevelop a substantial visualization project!"
  },
  {
    "objectID": "class/1-course-introduction/index.html#course-component",
    "href": "class/1-course-introduction/index.html#course-component",
    "title": "1. Course Introduction",
    "section": "Course component",
    "text": "Course component\n\nLectures: Tuesdays 3:10-5:10 PM\nLab: Thursdays 3:10-5:10 PM\nHomework: Weekly assignments due Mondays\nFinal project: Team of 2-3 people"
  },
  {
    "objectID": "class/1-course-introduction/index.html#what-about-gradings",
    "href": "class/1-course-introduction/index.html#what-about-gradings",
    "title": "1. Course Introduction",
    "section": "What about gradings???",
    "text": "What about gradings???"
  },
  {
    "objectID": "class/1-course-introduction/index.html#grading",
    "href": "class/1-course-introduction/index.html#grading",
    "title": "1. Course Introduction",
    "section": "Grading",
    "text": "Grading\n\nClass Participation (attendance, contribution to in-class activities, completion of end-of-class surveys): 10%\nHomework (5 weekly assignments): 35%\nLab (5 weekly lab notebooks): 15%\nFinal Project (team of 2): 40%\n\n25% for the final data visualization product\n10% for the presentation\n5% for peer evaluation"
  },
  {
    "objectID": "class/1-course-introduction/index.html#prerequisites",
    "href": "class/1-course-introduction/index.html#prerequisites",
    "title": "1. Course Introduction",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nProgramming experience at the level of PUBH 6131 or similar\nWillingness to learn new software & tools\n\nThis can be time consuming\nLearning by doing is the best way of acquiring new skills, get on the bike"
  },
  {
    "objectID": "class/1-course-introduction/index.html#course-policies",
    "href": "class/1-course-introduction/index.html#course-policies",
    "title": "1. Course Introduction",
    "section": "Course policies",
    "text": "Course policies\n\nBe respectful and inclusive\nGet on the bike\nDon’t cheat!"
  },
  {
    "objectID": "class/1-course-introduction/index.html#device-policy",
    "href": "class/1-course-introduction/index.html#device-policy",
    "title": "1. Course Introduction",
    "section": "Device policy",
    "text": "Device policy\n\nBring laptop to lecture, lab, and office hour\nPlease only use it for in-class activities!"
  },
  {
    "objectID": "class/1-course-introduction/index.html#generative-ai-policy",
    "href": "class/1-course-introduction/index.html#generative-ai-policy",
    "title": "1. Course Introduction",
    "section": "Generative AI policy",
    "text": "Generative AI policy\n\nGenerative AI is another tool in your toolbox, use it but be prepared to be responsible.\nUsage of GenAI tools is permitted but please be transparent about it.\nLazy usage of GenAI tools (homework prompt -&gt; output -&gt; submission) is prohibited.\nInclude a “How I used GenAI” section in your homework and final project (include prompt, date, model version, and link to chat history)."
  },
  {
    "objectID": "class/1-course-introduction/index.html#communication",
    "href": "class/1-course-introduction/index.html#communication",
    "title": "1. Course Introduction",
    "section": "Communication",
    "text": "Communication\n\nSlack: PUBH 6199 channel\nCourse website: https://pubh6199-data-viz-with-r.github.io/2025-Summer/\nBlackboard\nOffice hours:\n\nSayam: Mondays 4-5 PM\nSilas: Wednesdays 2-3 PM,\nCindy: By appointment\n\nBoundaries:\n\nPlease allow 24 hrs for slack/email response\nReplies in the after hours (after 6pm ET) and over the weekends are not guaranteed"
  },
  {
    "objectID": "class/1-course-introduction/index.html#class-mascot",
    "href": "class/1-course-introduction/index.html#class-mascot",
    "title": "1. Course Introduction",
    "section": "Class Mascot",
    "text": "Class Mascot\n\n \nRubber Duck Debugging 🐤\n\nExplain your problem out loud — as if you’re talking to a rubber duck.\n\nSlows down your thinking\nReveals skipped steps\nHelps you find mistakes\nWorks even without another person!"
  },
  {
    "objectID": "class/1-course-introduction/index.html#outline-for-today-2",
    "href": "class/1-course-introduction/index.html#outline-for-today-2",
    "title": "1. Course Introduction",
    "section": "Outline for today",
    "text": "Outline for today\n\nWho?\nHow?\nWhat?\nWhy?\nIntroduction to {ggplot2}"
  },
  {
    "objectID": "class/1-course-introduction/index.html#what-is-data-visualization",
    "href": "class/1-course-introduction/index.html#what-is-data-visualization",
    "title": "1. Course Introduction",
    "section": "What is data visualization?",
    "text": "What is data visualization?\n\n“The practice of designing and creating graphic or visual representations of a large amount of complex quantitative and qualitative data and information with the help of static, dynamic or interactive visual items.”\n\n\n-from Wikipedia"
  },
  {
    "objectID": "class/1-course-introduction/index.html#section",
    "href": "class/1-course-introduction/index.html#section",
    "title": "1. Course Introduction",
    "section": "",
    "text": "Made with {ggplot2} \n\nMade with {ggplot2} and publication ready \n\n\n\nMade with {gganimate} \n\nMade with Shiny"
  },
  {
    "objectID": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-adapted-from-eds-240",
    "href": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-adapted-from-eds-240",
    "title": "1. Course Introduction",
    "section": "A brief history of Data Visualization (Adapted from EDS 240)",
    "text": "A brief history of Data Visualization (Adapted from EDS 240)\n\n16,500 years ago, Pleistocene\n\nSource: BBC"
  },
  {
    "objectID": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization",
    "href": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization",
    "title": "1. Course Introduction",
    "section": "A brief history of Data Visualization",
    "text": "A brief history of Data Visualization\n\n~1150 BC, Ancient Egypt\n\nSource: Wikipedia"
  },
  {
    "objectID": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-1",
    "href": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-1",
    "title": "1. Course Introduction",
    "section": "A brief history of Data Visualization",
    "text": "A brief history of Data Visualization\n\n1400 - 1532 AD, Inca Empire\n\nQuipus (kee-poos) were recording devices for data collection, census records, calendaring…\nSource: Smithsonian"
  },
  {
    "objectID": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-2",
    "href": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-2",
    "title": "1. Course Introduction",
    "section": "A brief history of Data Visualization",
    "text": "A brief history of Data Visualization\n\n1786, William Playfair\n\nCreated first bar chart (featuring Scottish trade data, 1780 - 1781), as well as line and pie charts.\nSource: Wikipedia"
  },
  {
    "objectID": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-3",
    "href": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-3",
    "title": "1. Course Introduction",
    "section": "A brief history of Data Visualization",
    "text": "A brief history of Data Visualization\n\n1854, John Snow\n\nUsed a dot map and showed the clusters of cholera cases in the London epidemic of 1854\nSource: Wikipedia"
  },
  {
    "objectID": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-4",
    "href": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-4",
    "title": "1. Course Introduction",
    "section": "A brief history of Data Visualization",
    "text": "A brief history of Data Visualization\n\n1869, Charles Minard\n\nCreated a flow map showing the number of troops lost during Napoleon’s 1812 Russian campaign.\nEdward Tufte called this the greatest visualization created, displaying 6 types of data in 2D (# of troops, distance traveled, temperature, lat/lon, direction of travel, location relative to specific dates)\nSource: Wikipedia"
  },
  {
    "objectID": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-5",
    "href": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-5",
    "title": "1. Course Introduction",
    "section": "A brief history of Data Visualization",
    "text": "A brief history of Data Visualization\n\n1900, William Edward Burghardt Du Bois\n\nOrganized an exhibit at the Paris 1900 Exposition, showcasing photographs, charts, and maps that documented the lives of African Americans at the time.\nIn 2021, people on Twitter recreated his historicall data visualizations using modern tools.\nSource: Nightingale"
  },
  {
    "objectID": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-6",
    "href": "class/1-course-introduction/index.html#a-brief-history-of-data-visualization-6",
    "title": "1. Course Introduction",
    "section": "A brief history of Data Visualization",
    "text": "A brief history of Data Visualization\n\nModern day\n\nSource: Jonathan Schwabish"
  },
  {
    "objectID": "class/1-course-introduction/index.html#what-will-you-learn-in-this-class",
    "href": "class/1-course-introduction/index.html#what-will-you-learn-in-this-class",
    "title": "1. Course Introduction",
    "section": "What will you learn in this class?",
    "text": "What will you learn in this class?\n\nIdentify the effective types of data visualization for the data at hand and the intended audience\nCritique data visualizations and provide constructive feedback\nPrepare dataset for developing data visualization\nCreate effective, ethical, and aesthetically-pleasing visualizations using R programming language\nCollaborate with classmates from diverse disciplinary background to carry out a visualization project"
  },
  {
    "objectID": "class/1-course-introduction/index.html#outline-for-today-3",
    "href": "class/1-course-introduction/index.html#outline-for-today-3",
    "title": "1. Course Introduction",
    "section": "Outline for today",
    "text": "Outline for today\n\nWho?\nHow?\nWhat?\nWhy?\nIntroduction to {ggplot2}"
  },
  {
    "objectID": "class/1-course-introduction/index.html#section-1",
    "href": "class/1-course-introduction/index.html#section-1",
    "title": "1. Course Introduction",
    "section": "",
    "text": "In-Class Activity:\nIn small group of 2, discuss your favorite example of data visualization, why do you like it? what functionality does that data visualization serve?\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "class/1-course-introduction/index.html#why-do-we-visualize-data",
    "href": "class/1-course-introduction/index.html#why-do-we-visualize-data",
    "title": "1. Course Introduction",
    "section": "Why do we visualize data?",
    "text": "Why do we visualize data?\nTo reveal patterns that are hard to see in raw numbers…"
  },
  {
    "objectID": "class/1-course-introduction/index.html#to-communicate-complex-ideas-quickly",
    "href": "class/1-course-introduction/index.html#to-communicate-complex-ideas-quickly",
    "title": "1. Course Introduction",
    "section": "To communicate complex ideas quickly…",
    "text": "To communicate complex ideas quickly…\n\n\n\nIncome Group\nMales: Under 65\nMales: 65 or Over\nFemales: Under 65\nFemales: 65 or Over\n\n\n\n\n0–$24,999\n250\n200\n375\n550\n\n\n$25,000+\n430\n300\n700\n500\n\n\n\n\nIs the effect of age on cholesterol levels the same for all subgroups defined by sex and income?"
  },
  {
    "objectID": "class/1-course-introduction/index.html#to-communicate-complex-ideas-quickly-1",
    "href": "class/1-course-introduction/index.html#to-communicate-complex-ideas-quickly-1",
    "title": "1. Course Introduction",
    "section": "To communicate complex ideas quickly…",
    "text": "To communicate complex ideas quickly…\n\n\nSource: SM Kosslyn: Clear and to the point"
  },
  {
    "objectID": "class/1-course-introduction/index.html#to-explore-and-generate-new-questions",
    "href": "class/1-course-introduction/index.html#to-explore-and-generate-new-questions",
    "title": "1. Course Introduction",
    "section": "To explore and generate new questions",
    "text": "To explore and generate new questions\n\n\n“Exploratory Data Analysis, or EDA, is a process to use visualization and transformation to explore your data in a systemic way. EDA is not a formal process with a strict set of rules. More than anything, EDA is a state of mind. During the initial phases of EDA you should feel free to investigate every idea that occurs to you. Some of these ideas will pan out, and some will be dead ends. As your exploration continues, you will home in on a few particularly productive areas that you’ll eventually write up and communicate to others.”\n\n\n\n-from R for Data Science\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(diamonds, aes(x = carat)) +\n  geom_histogram(binwidth = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(mpg, aes(x = fct_reorder(class, hwy, median), y = hwy)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(diamonds, aes(x = price, y = after_stat(density))) + \n  geom_freqpoly(aes(color = cut), binwidth = 500, linewidth = 0.75)"
  },
  {
    "objectID": "class/1-course-introduction/index.html#to-tell-a-story-and-evoke-emotions",
    "href": "class/1-course-introduction/index.html#to-tell-a-story-and-evoke-emotions",
    "title": "1. Course Introduction",
    "section": "To tell a story and evoke emotions",
    "text": "To tell a story and evoke emotions\n\n\nSource: Ed Hawkins, Climate Stripes"
  },
  {
    "objectID": "class/1-course-introduction/index.html#why-r",
    "href": "class/1-course-introduction/index.html#why-r",
    "title": "1. Course Introduction",
    "section": "Why R?",
    "text": "Why R?\n\n \n\nOpen-source and free\nHighly customizable\nScript-based and reproducible\nData analysis and visualization in one language\nLarge open-source community and ecosystem\n\n\n\n\nArt by Allison Horst"
  },
  {
    "objectID": "class/1-course-introduction/index.html#end-break",
    "href": "class/1-course-introduction/index.html#end-break",
    "title": "1. Course Introduction",
    "section": "",
    "text": "Take a Break\n\n\n~ This is the end of part 1 ~\n\n\n\n\n\n−+\n05:00"
  },
  {
    "objectID": "class/1-course-introduction/index.html#outline-for-today-4",
    "href": "class/1-course-introduction/index.html#outline-for-today-4",
    "title": "1. Course Introduction",
    "section": "Outline for today",
    "text": "Outline for today\n\nWho?\nHow?\nWhat?\nWhy?\nIntroduction to {ggplot2}"
  },
  {
    "objectID": "class/1-course-introduction/index.html#welcome-to-ggplot2",
    "href": "class/1-course-introduction/index.html#welcome-to-ggplot2",
    "title": "1. Course Introduction",
    "section": "Welcome to {ggplot2}",
    "text": "Welcome to {ggplot2}\n\n\nBased on Grammar of Graphics (Wilkinson 2005)\nHadley Wickham developed ggplot2 based on Wilkinson’s grammar of graphics in 2009\nAllow you to compose graphs by combining independent components\nDesigned to work iteratively:\n\nStart with a simple layer that shows the raw data\nAdd layers of annotations and summary statistics\nEach layer can be customized independently\n\n\n\n\n\nArt by Allison Horst"
  },
  {
    "objectID": "class/1-course-introduction/index.html#what-is-the-grammar-of-graphics",
    "href": "class/1-course-introduction/index.html#what-is-the-grammar-of-graphics",
    "title": "1. Course Introduction",
    "section": "What is the grammar of graphics?",
    "text": "What is the grammar of graphics?\n\n“A graphic maps the data to the aesthetic attribuets (color, shape, size) of geometric objects (points, lines, bars). The plot may also include statistical transformations of the data and information about the plot’s coordinate system. Facetting can be used to plot for different subsets of the data. The combination of these independent components are what make up a graphic.”\n\n\nWilkinson (2005)"
  },
  {
    "objectID": "class/1-course-introduction/index.html#ggplot2-graphic-layers",
    "href": "class/1-course-introduction/index.html#ggplot2-graphic-layers",
    "title": "1. Course Introduction",
    "section": "{ggplot2} graphic layers",
    "text": "{ggplot2} graphic layers\n\nFirst these:\n\ndata: in tidy format (Lab 1)\nmapping: how variables are mapped to aesthetic attributes\ngeom: the geometric object used to display the data\n\n\n\nThen these:\n\nstat: statistical transformations, e.g. binning and counting, fitting a linear model\nscale: maps values in data space to values in the aesthetics space, also draw the legend\ncoord: normally the Cartesian coordinate system, but can be polar, map, etc.\nfacet: display subsets of data as small multiples\ntheme: non-data ink, e.g. background color, grid lines, font size, etc."
  },
  {
    "objectID": "class/1-course-introduction/index.html#airquality-dataset",
    "href": "class/1-course-introduction/index.html#airquality-dataset",
    "title": "1. Course Introduction",
    "section": "Airquality dataset",
    "text": "Airquality dataset\nThe airquality dataset contains daily air quality measurements in New York, May to September 1973. The data frame has 153 observations and 6 variables:\n\n\nOzone: Ozone in parts per billion (ppb)\nSolar.R: Solar radiation in langleys\nWind: Average wind speed in miles per hour (mph)\nTemp: Maximum daily temperature in degrees Fahrenheit (F)\nMonth: Month of the year (1-12)\nDay: Day of the month (1-31)\n\n\n\nlibrary(tidyverse)\ndata(airquality)\nglimpse(airquality)\n\nRows: 153\nColumns: 6\n$ Ozone   &lt;int&gt; 41, 36, 12, 18, NA, 28, 23, 19, 8, NA, 7, 16, 11, 14, 18, 14, …\n$ Solar.R &lt;int&gt; 190, 118, 149, 313, NA, NA, 299, 99, 19, 194, NA, 256, 290, 27…\n$ Wind    &lt;dbl&gt; 7.4, 8.0, 12.6, 11.5, 14.3, 14.9, 8.6, 13.8, 20.1, 8.6, 6.9, 9…\n$ Temp    &lt;int&gt; 67, 72, 74, 62, 56, 66, 65, 59, 61, 69, 74, 69, 66, 68, 58, 64…\n$ Month   &lt;int&gt; 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,…\n$ Day     &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,…"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-0-initialize-a-plot-object",
    "href": "class/1-course-introduction/index.html#step-0-initialize-a-plot-object",
    "title": "1. Course Introduction",
    "section": "Step 0: Initialize a plot object",
    "text": "Step 0: Initialize a plot object\nInitialize the plot using ggplot(). It is empty because we haven’t told ggplot how to map the data to the plot yet.\n\nlibrary(tidyverse)\ndata(airquality)\nggplot(data = airquality)"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-1-map-the-variables",
    "href": "class/1-course-introduction/index.html#step-1-map-the-variables",
    "title": "1. Course Introduction",
    "section": "Step 1: Map the variables",
    "text": "Step 1: Map the variables\nThe mapping argument is used to specify how variables in the data are mapped to aesthetic attributes of the plot. The aes() function is used to define the mapping.\n\nlibrary(tidyverse)\ndata(airquality)\nggplot(data = airquality,\n       mapping = aes(x = Temp, y = Ozone)) # x-axis and y-axis"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-2-add-points-geom_point",
    "href": "class/1-course-introduction/index.html#step-2-add-points-geom_point",
    "title": "1. Course Introduction",
    "section": "Step 2: Add points (geom_point)",
    "text": "Step 2: Add points (geom_point)\nNext, we add a geometric object (geom) that represents the data. In this case, we use geom_point() to add points to the plot. There are many more geoms (geom_*()) built into {ggplot2} and extension packages.\n\nlibrary(tidyverse)\ndata(airquality)\nggplot(data = airquality, mapping = aes(x = Temp, y = Ozone)) + # x-axis and y-axis\n  geom_point() # add points"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-3-color-aesthetic-month",
    "href": "class/1-course-introduction/index.html#step-3-color-aesthetic-month",
    "title": "1. Course Introduction",
    "section": "Step 3: Color aesthetic (Month)",
    "text": "Step 3: Color aesthetic (Month)\nIf we like to add more information to the plot, we can use the color aesthetic to map another variable to the color of the points. In this case, we will use Month as the color aesthetic.\n\nggplot(airquality, aes(x = Temp, y = Ozone, color = Month)) +\n  geom_point() +\n  labs(title = \"Ozone vs Temperature Colored by Month\")"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-3-color-aesthetic-month-1",
    "href": "class/1-course-introduction/index.html#step-3-color-aesthetic-month-1",
    "title": "1. Course Introduction",
    "section": "Step 3: Color aesthetic (Month)",
    "text": "Step 3: Color aesthetic (Month)\nInstead of treating Month as a continuous variable, maybe we want to treat Month like a categorical variable.\n\nggplot(airquality, aes(x = Temp, y = Ozone, color = as.factor(Month))) +\n  geom_point() +\n  labs(title = \"Ozone vs Temperature Colored by Month\")"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-4-add-layers-smoother-lines-with-geom_smooth",
    "href": "class/1-course-introduction/index.html#step-4-add-layers-smoother-lines-with-geom_smooth",
    "title": "1. Course Introduction",
    "section": "Step 4: Add layers (smoother lines with geom_smooth)",
    "text": "Step 4: Add layers (smoother lines with geom_smooth)\nWe can add a smoother line to the plot using geom_smooth(). The default method is linear regression, but we can also use other methods like LOESS (locally weighted scatterplot smoothing).\n\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point() +\n  geom_smooth(method = \"loess\") +\n  labs(title = \"Ozone vs Temperature with LOESS Smoother\")"
  },
  {
    "objectID": "class/1-course-introduction/index.html#global-mapping-v.s.-local-mapping",
    "href": "class/1-course-introduction/index.html#global-mapping-v.s.-local-mapping",
    "title": "1. Course Introduction",
    "section": "Global mapping v.s. Local mapping",
    "text": "Global mapping v.s. Local mapping\n\nGlobal mapping are passed down to each subsequent layer\n\nggplot(airquality, aes(x = Temp, y = Ozone, color = as.factor(Month))) +\n  geom_point() +\n  geom_smooth(method = \"loess\") \n\n\n\n\n\n\n\n\ncolor = as.factor(Month) is passed to both geom_point() and geom_smooth(), so the points and the line are colored by month.\n\nLocal mapping are only used in that layer and don’t affect other layers\n\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point(aes(color = as.factor(Month))) +\n  geom_smooth(method = \"loess\") \n\n\n\n\n\n\n\n\ncolor = as.factor(Month) is only passed to geom_point(), so the points are colored by month, but the line is not colored by month."
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-5-facet-by-month-facet_wrap",
    "href": "class/1-course-introduction/index.html#step-5-facet-by-month-facet_wrap",
    "title": "1. Course Introduction",
    "section": "Step 5: Facet by month (facet_wrap)",
    "text": "Step 5: Facet by month (facet_wrap)\nWe can use facet_wrap() to create small multiples of the plot, one for each month. This allows us to see how the relationship between temperature and ozone varies by month.\n\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point() +\n  facet_wrap(~ Month) +\n  geom_smooth(method = \"loess\") +\n  labs(title = \"Ozone vs Temperature by Month\")"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-6-customize-the-appearance",
    "href": "class/1-course-introduction/index.html#step-6-customize-the-appearance",
    "title": "1. Course Introduction",
    "section": "Step 6: Customize the appearance",
    "text": "Step 6: Customize the appearance\n{ggplot2} has a number of built-in themes, which control all non-data display.\n\nNever use the default theme\n\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point(aes(color = as.factor(Month))) +\n  geom_smooth(method = \"loess\") \n\n\n\n\n\n\n\n\n\ntheme_classic() is a good starting point\n\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point(aes(color = as.factor(Month))) +\n  geom_smooth(method = \"loess\") +\n  theme_classic()"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-6-customize-the-appearance-1",
    "href": "class/1-course-introduction/index.html#step-6-customize-the-appearance-1",
    "title": "1. Course Introduction",
    "section": "Step 6: Customize the appearance",
    "text": "Step 6: Customize the appearance\nAlmost always the default font size in ggplot2 are too small. This is because the font size is set to 11 by default, but the size of the figure is set to 10 inches by 5 inches, so when you insert the figure to a Word or Powerpoint, it ends up being too small\n\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point(aes(color = as.factor(Month))) +\n  geom_smooth(method = \"loess\") +\n  theme_classic(base_size = 11) # I set the output figure size to be 5 inches by 3 inches"
  },
  {
    "objectID": "class/1-course-introduction/index.html#step-6-customize-the-appearance-2",
    "href": "class/1-course-introduction/index.html#step-6-customize-the-appearance-2",
    "title": "1. Course Introduction",
    "section": "Step 6: Customize the appearance",
    "text": "Step 6: Customize the appearance\nYou can explore other pre-built themes in the {ggthemes}.\n\nTheme economist\n\nlibrary(ggthemes)\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point(aes(color = as.factor(Month))) +\n  geom_smooth(method = \"loess\") +\n  theme_economist() \n\n\n\n\n\n\n\n\n\nTheme 538\n\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point(aes(color = as.factor(Month))) +\n  geom_smooth(method = \"loess\") +\n  scale_color_fivethirtyeight() + \n  theme_fivethirtyeight(base_size = 15)\n\n\n\n\n\n\n\n\n\nTheme Tufte\n\nggplot(airquality, aes(x = Temp, y = Ozone)) +\n  geom_point(aes(color = as.factor(Month))) +\n  geom_smooth(method = \"loess\") +\n  theme_tufte(base_size = 15) +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "class/1-course-introduction/index.html#building-a-data-viz-is-an-interative-process",
    "href": "class/1-course-introduction/index.html#building-a-data-viz-is-an-interative-process",
    "title": "1. Course Introduction",
    "section": "Building a data viz is an interative process!",
    "text": "Building a data viz is an interative process!\n\n\nMake your own ggplot evolution using the {camcorder} package"
  },
  {
    "objectID": "class/1-course-introduction/index.html#end-of-class-survey",
    "href": "class/1-course-introduction/index.html#end-of-class-survey",
    "title": "1. Course Introduction",
    "section": "End-of-Class Survey",
    "text": "End-of-Class Survey\n  \n\n\n Fill out the end-of-class survey\n\n\n~ This is the end of Lecture 1 ~\n\n\n\n\n\n−+\n10:00"
  },
  {
    "objectID": "class/10-recreate-viz.html",
    "href": "class/10-recreate-viz.html",
    "title": "Recreate visualization from public source",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "class/2-data-wrangling.html",
    "href": "class/2-data-wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "class/3-visual-vocabulary.html",
    "href": "class/3-visual-vocabulary.html",
    "title": "Visual vocabulary",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "class/4-fundamental-chart.html",
    "href": "class/4-fundamental-chart.html",
    "title": "Fundamental Chart Types",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "class/5-case-study.html",
    "href": "class/5-case-study.html",
    "title": "Case Study",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "class/6-specialized-chart.html",
    "href": "class/6-specialized-chart.html",
    "title": "Specialized Chart Types",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "class/7-r-shiny.html",
    "href": "class/7-r-shiny.html",
    "title": "Introduction to R Shiny",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "class/8-final-project-plan.html",
    "href": "class/8-final-project-plan.html",
    "title": "Final Project Plan",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "class/9-maps.html",
    "href": "class/9-maps.html",
    "title": "Maps",
    "section": "",
    "text": "KEYBOARD SHORTCUTS FOR SLIDES:\n\nUse ← and → to navigate through the slides.\nUse f to toggle full screen.\nUse o to view an overview of all slides.\nUse h to see a list of other shortcuts.\n\n\n\n\nSLIDES\n View slides\n Download PDF\n\n\n\n\nCLASS PRACTICE\n Notes zip file"
  },
  {
    "objectID": "course-primer.html",
    "href": "course-primer.html",
    "title": "Course Primer",
    "section": "",
    "text": "Students should have taken EMSE 4571 / 6571: Intro to Programming for Analytics prior to taking this course.\nFor those who did not, I strongly suggest you go through all the lessons in this primer course:\n\nR for Analytics Primer\n\nAfter completing these lessons, you should be able to:\n\nUse RStudio to write basic R commands.\nKnow the distinctions between different R operators and data types, including numeric, string, and logical data.\nUse tidyverse functions to wrangle and manipulate data in R.\nUse the ggplot2 library to create plots in R.\n\nAlso, it can be very helpful to see these skills applied in practice. Take a look at this example of using Tidyverse tools to explore and visualize data on survivors aboard the Titantic. It’s a good example of conducting an Exploratory Data Analysis to gain insights about a data set."
  },
  {
    "objectID": "course-primer.html#this-assignment-is-optional",
    "href": "course-primer.html#this-assignment-is-optional",
    "title": "Course Primer",
    "section": "",
    "text": "Students should have taken EMSE 4571 / 6571: Intro to Programming for Analytics prior to taking this course.\nFor those who did not, I strongly suggest you go through all the lessons in this primer course:\n\nR for Analytics Primer\n\nAfter completing these lessons, you should be able to:\n\nUse RStudio to write basic R commands.\nKnow the distinctions between different R operators and data types, including numeric, string, and logical data.\nUse tidyverse functions to wrangle and manipulate data in R.\nUse the ggplot2 library to create plots in R.\n\nAlso, it can be very helpful to see these skills applied in practice. Take a look at this example of using Tidyverse tools to explore and visualize data on survivors aboard the Titantic. It’s a good example of conducting an Exploratory Data Analysis to gain insights about a data set."
  },
  {
    "objectID": "finding-data.html",
    "href": "finding-data.html",
    "title": "Finding Data",
    "section": "",
    "text": "The world is full of data, but sometimes finding it can be difficult. As a starting point, GW libraries has an excellent set of Research Guides that can be helpful. Depending on your research question, searching Google can also lead to good sources.\nHere are some other resources:\n\nLarge, search-able sites\nBasically like running a Google search but only for data sets:\n\nGoogle Dataset Search\nQuandl: Over 2 million financial, economic, and social datasets.\nWharton Research Data Services: Single-point access to over 200 terabytes of data across multiple disciplines, including Finance, Marketing, and Economics.\n\n\n\nWebsites\nA collection of various websites that have lots of interesting datasets:\n\n“Tidy Tuesday” challenges: Wide variety of datasets for data visualization practice. See many of the visualizations others have created here.\n“Makeover Monday” challenges: Wide variety of datasets for data visualization practice.\nTableau Community Forums: Sometimes you’ll find some interesting datasets in here.\n“Data is Beautiful” subreddit: Feed of user-generated data visualizations, though quality varies substantially.\nKaggle: Hosts machine learning competitions, and as a result has lots of really interesting data sets open to the public.\n\n\n\nPackages\nMany packages contain interesting datasets. If you can find a package with data, it will usually be nicely-formatted 😄\nHere is a table of lots of packages that contain multiple dataset. Some of my favorites are:\n\ndslabs\nDAAG\nMASS\n\nIn addition, some packages exclusively just contain datasets, such as:\n\nfivethirtyeight: Datasets and code published by the data journalism website ‘FiveThirtyEight’, available at https://github.com/fivethirtyeight/data\ngapminder\nbabynames\nnycflights13\nfueleconomy\nnasaweather\nusdanutrients\n\n\n\nGovernment-ish sources:\n“Government-ish” because while some of these sites host government data, the sites themselves may or may not be affiliated with a government agency:\n\nUS Open Gov Data: links to federal and non-federal sources in US and abroad\nUS City Open Data Census: Open data from more than 100 U.S. cities.\nOpen Africa\nEU Open Data Portal\nChina data: Various datasets on China posted by Gang He.\n\n\n\nEnergy data\nSince I happen to work with energy data a lot, here’s some common go-to sources:\n\nChina Energy Portal Statistics: Loads of energy statistics from China.\nU.S. Energy Information Administration: from Wikipedia: the “principal agency of the U.S. Federal Statistical System responsible for collecting, analyzing, and disseminating energy information to promote sound policymaking, efficient markets, and public understanding of energy and its interaction with the economy and the environment. EIA programs cover data on coal, petroleum, natural gas, electric, renewable and nuclear energy. EIA is part of the U.S. Department of Energy.”\nEnvironmental Performance Index, Yale University: Ranks 163 countries on 25 performance indicators tracked across ten policy categories covering both environmental public health and ecosystem vitality. These indicators provide a gauge at a national government scale of how close countries are to established environmental policy goals.\n\n\n\nSpatial data\n\nhttp://freegisdata.rtwilson.com/\nhttps://data.nasa.gov/\nhttps://planet.parts/\nhttps://www.efi.int/knowledge/maps/forest\nhttps://land.copernicus.eu/\nhttps://maps.elie.ucl.ac.be/CCI/viewer/\nhttps://www.ecad.eu//dailydata/predefinedseries.php\nhttp://www.worldclim.org/version2\nhttps://www.geoportal.org/\nhttps://scihub.copernicus.eu/\nhttps://sedac.ciesin.columbia.edu/\nhttps://earthexplorer.usgs.gov/"
  },
  {
    "objectID": "hw/2-hw2.html",
    "href": "hw/2-hw2.html",
    "title": "Homework 2",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 2-hw2.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/2-hw2.html#before-your-start-the-assignment",
    "href": "hw/2-hw2.html#before-your-start-the-assignment",
    "title": "Homework 2",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 2-hw2.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/2-hw2.html#overview-of-hw2",
    "href": "hw/2-hw2.html#overview-of-hw2",
    "title": "Homework 2",
    "section": "Overview of HW2",
    "text": "Overview of HW2\nCreate a data visualization that helps answer the question:\n\nHow have the number and cost of billion-dollar disasters in the US changed over time?\n\nYou will use the NOAA Billion-Dollar Disaster dataset to explore how visual encoding choices (e.g., color, position, length) help communicate trends clearly and effectively.\nSkills practiced:\n\nDownloading and importing real-world data from a public source (NOAA)\nWrangle and explore a real-world dataset using tidyverse\nIdentify appropriate visual encodings based on variable types and goals\nCreate a clear and effective time-series visualization with ggplot2\nApply design principles (titles, colors, themes, alt text) for accessibility and clarity\n\n\nLoad Required Packages\n\nlibrary(tidyverse)\nlibrary(janitor)\n# load other packages as you see fit but remember to add comments to explain what each package does"
  },
  {
    "objectID": "hw/2-hw2.html#q1-prepare-the-data",
    "href": "hw/2-hw2.html#q1-prepare-the-data",
    "title": "Homework 2",
    "section": "Q1: Prepare the data",
    "text": "Q1: Prepare the data\nFollowing these steps to download and read in the dataset:\n\nDownload the dataset from NOAA. Under “Access” tab, choose the HTTPS option to download the data. Scroll to the bottom of the list to download the most recent published version. Read more about the dataset here.\nPlace the downloaded CSV file events-US-1980-2024-Q4.csv into your data/ folder in your HW repository. You will notice there is a graph that comes with the data, we will circle back to it later.\nAdd your data/ folder to .gitignore to avoid pushing data to GitHub.\nRead in the CSV file using read_csv()\n\n\n# remove the eval=FALSE when you render quarto document\ndf_disasters &lt;- read_csv(\"data/events-US-1980-2024-Q4.csv\", skip = 2) |&gt;\n  janitor::clean_names()\n# the skip argument is used to skip the first two rows of the CSV file, which contain metadata about the dataset.\n\n\nSkim through the dataset to get familiar with the variable names, especially:\n\n\ndisaster: the type of disaster (e.g., flood, drought, etc.)\nbegin_date: the date when the disaster began\nend_date: the date when the disaster ended\ncpi_adjusted_cost: the total damages caused by the disaster (in billions of dollars)\ndeaths: the number of deaths caused by the disaster\n\n\nCreate a new column year that extracts the year from the begin_date column. You can use the lubridate package to do this.\n\n\n# remove the eval=FALSE when you render quarto document\ndf_disasters &lt;- df_disasters |&gt;\n  mutate(year = lubridate::year(ymd(begin_date)))\n\n\nExplore the dataset and answer these questions:\n\n\nAre there any missing or zero values in the cost or deaths columns? How might they affect your visualizations?\nWhat are the top 5 most common disaster types?\nCalculate the total CPI-adjusted cost of disasters per year. Identify the top 3 most expensive years.\n\n\n#your code here\n\n\n\n\n\n\n\nYour Answer\n\n\n\n\nMissing data:\n5 most disaster types:\n3 most expensive years by CPI-adjusted cost:"
  },
  {
    "objectID": "hw/2-hw2.html#q2-build-your-visualization",
    "href": "hw/2-hw2.html#q2-build-your-visualization",
    "title": "Homework 2",
    "section": "Q2: Build your visualization",
    "text": "Q2: Build your visualization\nCreate a data visualization that summarizes trends over time (year or decade) in the frequency and/or cost of disasters.\nYour final visualization should:\n\nUse data from 1980 to 2024 only\nInclude a title (short, descriptive), subtitle (main takeaway), caption (e.g., “Data: NOAA Billion-Dollar Disasters (accessed 2025)”)\nApply strategies for highlighting patterns or trends (e.g., highlighting recent years, distinguishing types of disasters)\nUse custom colors rather than ggplot defaults\nUse a clean, polished theme\nInclude at least one theme adjustments (e.g., axis labels, legend position, font size) to improve readability/visual appeal\n\n\n#your code here\n\nWhat do you notice about the trends over time in the frequency and/or cost of disasters? Anything unexpected?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/2-hw2.html#q3-reflection",
    "href": "hw/2-hw2.html#q3-reflection",
    "title": "Homework 2",
    "section": "Q3: Reflection",
    "text": "Q3: Reflection\n\nWhat are your variables of interest and what kinds of data (e.g., numeric, categorical, ordered, etc.) are they?\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\nHow did you decide which type of graphic form was best suited for answering the question? What alternative graphic forms could you have used instead? Why did you settle on this particular form?\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\nWhat modifications did you make to this viz to improve readability and accessibility?\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\nIs there anything you wanted to implement but didn’t know how? If so, describe it.\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/2-hw2.html#q4-critique-the-original-graph-from-noaa",
    "href": "hw/2-hw2.html#q4-critique-the-original-graph-from-noaa",
    "title": "Homework 2",
    "section": "Q4: Critique the original graph from NOAA",
    "text": "Q4: Critique the original graph from NOAA\n\n\n\nNOAA Billion-Dollar Disaster Events (1980–2024)\n\n\nThis plot appears on NOAA’s official Billion-Dollar Disaster website and summarizes annual disaster frequency and cost.\n\nDescribe the graphic\n\n\nWhat type(s) of chart(s) are used?\nWhat variables are encoded? How are they mapped to visual channels (e.g., position, color, size)?\nWhat is the intended takeaway?\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\nAssess strengths\n\n\nWhat aspects of the chart help communicate the intended message clearly?\nIs there anything done particularly well in terms of accessibility, color use, or labeling?\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\nAssess limitations\n\n\nWhat elements of the chart are confusing, cluttered, or potentially misleading?\nAre any visual encodings hard to interpret?\nDoes the chart overcomplicate the message or try to show too much?\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\nRecommend improvements\n\n\nSuggest 2–3 specific changes that would improve the effectiveness of the chart.\nWould you consider separating out the lines from the stacked bars? Using interactivity? Changing the layout?\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/2-hw2.html#bonus-create-an-alternative-data-visualization-from-the-dataset",
    "href": "hw/2-hw2.html#bonus-create-an-alternative-data-visualization-from-the-dataset",
    "title": "Homework 2",
    "section": "BONUS: Create an alternative data visualization from the dataset",
    "text": "BONUS: Create an alternative data visualization from the dataset\n\nUse the from Data to Viz tool here to help determine graph types you can use that are different from what you have implemented above\nCreate a new visualization that uses a different type of graph than the one you created in Q2.\n\n\n#your code here\n\n\n\n\n\n\n\nYour Reflection\n\n\n\nType your reflection here."
  },
  {
    "objectID": "hw/4-hw4.html",
    "href": "hw/4-hw4.html",
    "title": "Homework 4",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 4-hw4.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/4-hw4.html#before-your-start-the-assignment",
    "href": "hw/4-hw4.html#before-your-start-the-assignment",
    "title": "Homework 4",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 4-hw4.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "hw/4-hw4.html#overview-of-hw4",
    "href": "hw/4-hw4.html#overview-of-hw4",
    "title": "Homework 4",
    "section": "Overview of HW4",
    "text": "Overview of HW4\nThis assignment contains two parts: in part 1, you will be given incomplete code for a R shiny app to explore a dataest from TidyTuesday, and you will complete the code to make the app functional. In part 2, you will use GenAI tools to help you build a Shiny app from scratch, download the code, and make further improvements in your local RStudio environment.\nSkills practiced:\n\nWriting and connecting UI and server code in Shiny\nUsing input$ and output$ with inputs and render functions\nDeploy shiny apps to shinyapps.io\nLeveraging GenAI tools to prototype and refine apps"
  },
  {
    "objectID": "hw/4-hw4.html#part-1-complete-the-shiny-app---nsf-grant-terminations",
    "href": "hw/4-hw4.html#part-1-complete-the-shiny-app---nsf-grant-terminations",
    "title": "Homework 4",
    "section": "Part 1: Complete the Shiny App - NSF Grant Terminations",
    "text": "Part 1: Complete the Shiny App - NSF Grant Terminations\nIn this exercise, you’ll build a Shiny app to explore the NSF grant terminations dataset from the TidyTuesday project dated May 6, 2025. This dataset offers insights into the grants affected by recent policy changes.\nIncomplete app code is provided in the /part1-app folder. You should be able to open the global.R, ui.R, and server.R files in RStudio and run the app locally."
  },
  {
    "objectID": "hw/4-hw4.html#q1-preprocess-the-data-in-global.r",
    "href": "hw/4-hw4.html#q1-preprocess-the-data-in-global.r",
    "title": "Homework 4",
    "section": "Q1: Preprocess the data in global.R",
    "text": "Q1: Preprocess the data in global.R\nThe data from TidyTuesday is already clean, however, we may need to preprocess it a bit to make it more suitable for our app. Open the global.R file and complete the following tasks:\n\nconvert grant_number to character\ncollapse division column to only keep the 9 most frequent divisions and a catch-all category called Other\ncollapse nsf_program_name column to only keep the 9 most frequent divisions and and a catch-all category called Other"
  },
  {
    "objectID": "hw/4-hw4.html#q2-add-a-drop-down-menu-in-ui.r",
    "href": "hw/4-hw4.html#q2-add-a-drop-down-menu-in-ui.r",
    "title": "Homework 4",
    "section": "Q2: Add a drop down menu in ui.R",
    "text": "Q2: Add a drop down menu in ui.R\nIn the ui.R file, you will find a comment indicating where to add a drop-down menu for org_state. Complete the code to create a drop-down menu that allows users to select the state of the organization. Use the unique values from the org_state column in the dataset."
  },
  {
    "objectID": "hw/4-hw4.html#q3-create-a-plot-in-server.r",
    "href": "hw/4-hw4.html#q3-create-a-plot-in-server.r",
    "title": "Homework 4",
    "section": "Q3: Create a plot in server.R",
    "text": "Q3: Create a plot in server.R\nIn the server.R file, you will find a comment indicating where to create a plot. Complete the code to create a plot that shows the number of terminations by the selected group variable (either directorate_abbrev, division, or nsf_program_name). Remember to implement the design principles we have covered in this class so far, including choosing the right plot type, sorting the categorical variable, whether or not to start from zero, and meaningful use of colors."
  },
  {
    "objectID": "hw/4-hw4.html#q4-create-a-summary-table-in-server.r",
    "href": "hw/4-hw4.html#q4-create-a-summary-table-in-server.r",
    "title": "Homework 4",
    "section": "Q4: Create a summary table in server.R",
    "text": "Q4: Create a summary table in server.R\nIn the server.R file, you will find a comment indicating where to create a summary table. Complete the code to create a summary table that shows the number of terminations by organization. The table should be reactive and update based on the selected state from the drop-down menu."
  },
  {
    "objectID": "hw/4-hw4.html#q5-deploy-the-app",
    "href": "hw/4-hw4.html#q5-deploy-the-app",
    "title": "Homework 4",
    "section": "Q5: Deploy the app",
    "text": "Q5: Deploy the app\nOnce you have completed the app, deploy it to shinyapps.io. You can follow the instructions in the Shiny Deployment Guide to deploy your app. Make sure to test the app after deployment to ensure everything works as expected.\nInclude the public URL of your deployed app here:\n\n\n\n\n\n\nYour App URL\n\n\n\nType your app’s URL here."
  },
  {
    "objectID": "hw/4-hw4.html#part-2-build-a-shiny-app-with-genai",
    "href": "hw/4-hw4.html#part-2-build-a-shiny-app-with-genai",
    "title": "Homework 4",
    "section": "Part 2: Build a Shiny App with GenAI",
    "text": "Part 2: Build a Shiny App with GenAI\nIn this part, you will use GenAI tools to help you build a Shiny app from scratch. You will use the Shiny Assistant in RStudio to generate the initial code, and then you will refine it further."
  },
  {
    "objectID": "hw/4-hw4.html#q6-use-shiny-assistant-to-generate-app-code",
    "href": "hw/4-hw4.html#q6-use-shiny-assistant-to-generate-app-code",
    "title": "Homework 4",
    "section": "Q6: Use Shiny Assistant to generate app code",
    "text": "Q6: Use Shiny Assistant to generate app code\nNavigate to Shiny Assistant, choose one of the following options to make a shinydashboard:\n\nUse R built-in dataset such as iris, diamonds, faithful, airquality, or ToothGrowth. Do not use mtcars again because we have explored it in the lecture.\nUse a dataset with a public URL. Anything from TidyTuesday can be a good option, or other public datasets.\nUpload a dataset from your local machine to Google Drive or GitHub and make it publicly accessible. Then use the URL to the dataset in your prompt.\n\nWrite a detailed prompt to the Shiny Assistant to generate a Shiny app that includes:\n\nA dataset of your choice\nAt least 2 input controls (e.g., selectInput, sliderInput, checkboxInput)\nAt least 4 outputs:\n\n1 plot (renderPlot)\n1 table (renderTable or renderDataTable)\n1 text summary (renderText or renderPrint)\n1 additional output of your choice (e.g., map, value box, plotly, UI element)\n\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your prompt here."
  },
  {
    "objectID": "hw/4-hw4.html#q7-download-the-generated-code-and-refine-it-in-rstudio",
    "href": "hw/4-hw4.html#q7-download-the-generated-code-and-refine-it-in-rstudio",
    "title": "Homework 4",
    "section": "Q7: Download the generated code and refine it in RStudio",
    "text": "Q7: Download the generated code and refine it in RStudio\nOnce you have generated the app code using Shiny Assistant, download the code to /part2-app folder and open it in RStudio.\nMake sure to run the app locally and test it. Then, refine the code by:\n\nImprove label text for readability\nEnhance plot appearance by adding titles, flip coordinates, revise colors, change themes\nAdd acknowledgements that Shiny\n\nAssistant was used in creating this app You are not bound by this list, just some ideas. You are required to make at least 3 improvements to the app.\n\n\n\n\n\n\nYour Answer\n\n\n\nDocument your improvements to the app here."
  },
  {
    "objectID": "hw/4-hw4.html#q8-deploy-the-app-to-shinyapps.io",
    "href": "hw/4-hw4.html#q8-deploy-the-app-to-shinyapps.io",
    "title": "Homework 4",
    "section": "Q8: Deploy the app to shinyapps.io",
    "text": "Q8: Deploy the app to shinyapps.io\nOnce you have refined the app, deploy it to shinyapps.io. You can follow the instructions in the Shiny Deployment Guide to deploy your app. Make sure to test the app after deployment to ensure everything works as expected. Include the public URL of your deployed app here:\n\n\n\n\n\n\nYour App URL\n\n\n\nType your app’s URL here."
  },
  {
    "objectID": "hw/4-hw4.html#bonus-compare-large-language-models",
    "href": "hw/4-hw4.html#bonus-compare-large-language-models",
    "title": "Homework 4",
    "section": "BONUS: Compare Large Language Models",
    "text": "BONUS: Compare Large Language Models\nIn this bonus question, you will compare the performance of different large language models (LLMs) in generating Shiny app code. Shiny Assistant uses Anthropic’s Claude. You can use any other LLMs available to you, such as OpenAI’s GPT-4o, Google’s Gemini, DeepSeek, or others.\nWrite a prompt to each LLM to generate a Shiny app code that meets the same requirements as in Q6, you can use the same prompt you used for Q6 or start a new one. Then, compare the generated code from different models based on the following criteria:\n\nCompleteness: Does the code include all required components (inputs, outputs, etc.)?\nReadability: Is the code well-structured and easy to understand?\nFunctionality: Does the app run without errors and produce the expected outputs?\nDesign: How well does the app follow design principles we have covered in class?\n\n\n\n\n\n\n\nYour Answer\n\n\n\nType your comparison here."
  },
  {
    "objectID": "hw/4-hw4.html#how-i-used-genai",
    "href": "hw/4-hw4.html#how-i-used-genai",
    "title": "Homework 4",
    "section": "How I used GenAI?",
    "text": "How I used GenAI?\nDescribe how GenAI is used in producing this homework, include prompt, date, model version, and link to chat history.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here."
  },
  {
    "objectID": "hw/4-hw4.html#save-and-push-your-work",
    "href": "hw/4-hw4.html#save-and-push-your-work",
    "title": "Homework 4",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub. You will commit everything in this repo that has changes, including the app code in /part1-app and /part2-app, /rsconnect folder for deployment information, .qmd file, and the rendered HTML output.\n\ngit add .\ngit commit -m \"Complete Homework 4\"\ngit push"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PUBH 6199: Visualizing Data with R (Summer 2025)",
    "section": "",
    "text": "PUBH 6199: Visualizing Data with R (Summer 2025)\n\n\nDepartment: Environmental and Occupational Health @ GWU\nCredits: 2\nDescription:\nThis course will equip students with the skills and knowledge to create impactful and responsible data visualizations using the R programming language. At the end of this class, students will gain proficiency in both fundamental (e.g. bar chart, bubble chart, choropleth maps) as well as advanced graph types (e.g. Sankey diagram, heatmap, parallel coordinates plot, faceted graphs) and know how to create them using R.\nLearning Objectives:\nUpon completion of the course, students will be able to:\n\nIdentify the effective types of data visualization for the data at hand and the intended audience\nCritique data visualizations and provide constructive feedback\nPrepare dataset for developing data visualization\nCreate effective, ethical, and aesthetically-pleasing visualizations using R programming language\nCollaborate with classmates from diverse disciplinary background to carry out a visualization project\n\nPrerequisites:\nThis course is designed for students with proficiency in using the R programming language and working in the RStudio integrated development environment. Students can fulfill this prerequisite by having successfully completed courses such as PUBH 6131, 6144, 6282, 6851, 6854 or 6867. If you are unsure, contact the instructor to discuss your eligibility.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "lab/2-lab2.html",
    "href": "lab/2-lab2.html",
    "title": "Lab 2",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 2-lab2.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/2-lab2.html#before-your-start-the-lab-notebook",
    "href": "lab/2-lab2.html#before-your-start-the-lab-notebook",
    "title": "Lab 2",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 2-lab2.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/2-lab2.html#overview-of-lab2",
    "href": "lab/2-lab2.html#overview-of-lab2",
    "title": "Lab 2",
    "section": "Overview of Lab2",
    "text": "Overview of Lab2\nThere are two parts of this lab notebook. We will be using the same example datasets covered in class: penguins and lyme. In first part, we will practice basic chart types for visualizing quantitative information and trend over time. In the second part, we will practice chart types for visualizing distribution and relationships between two variables.\nSkills practiced:\n\nLoad, clean, and filter data using dplyr functions (filter(), mutate(), summarise())\nCreate bar charts and dot plots to compare counts and averages across categories\nGenerate histograms and boxplots to visualize distributions of continuous variables\nUse line charts to show trends over time for different groups\nBuild scatterplots to explore relationships between two numeric variables\nCustomize plots using ggplot2 elements such as color, facet_wrap(), and geom_smooth()\nPractice reproducible coding and visualization in a Quarto notebook\n\n\nLoad Required Packages and Datasets\n\n\nCode\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npenguins_clean &lt;- penguins %&gt;%\n  filter(!is.na(species), !is.na(flipper_length_mm), !is.na(body_mass_g), !is.na(island), !is.na(sex))\n\nlyme_rates &lt;- read_csv(\"data/2023_CaseIncid-Lyme-Disease-Rates-by-State-or-Locality.csv\") %&gt;%\n  janitor::clean_names() %&gt;%\n  mutate(state = str_replace(state, \"\\x86\", \"\")) %&gt;%\n  rename(rates_per_100k = rates)\n\nlyme_cases &lt;- read_csv(\"data/2023_CaseIncid-Lyme-Disease-Cases-by-State-or-Locality.csv\") %&gt;%\n  janitor::clean_names() %&gt;%\n  pivot_longer(\n    cols = -c(state),\n    names_to = \"year\",\n    values_to = \"cases\"\n  ) %&gt;%\n  mutate(\n    state = str_replace(state, \"\\x86\", \"\"),\n    year = str_replace(year, \"x\", \"\"),\n    year = as.numeric(year)) %&gt;%\n  filter(year &gt;= 2010)\n\nlyme &lt;- lyme_cases %&gt;%\n  left_join(lyme_rates, by = c(\"state\", \"year\"))"
  },
  {
    "objectID": "lab/2-lab2.html#part-1-visualizing-quantitative-information-and-trend-over-time",
    "href": "lab/2-lab2.html#part-1-visualizing-quantitative-information-and-trend-over-time",
    "title": "Lab 2",
    "section": "Part 1: Visualizing quantitative information and trend over time",
    "text": "Part 1: Visualizing quantitative information and trend over time\n\n1.1. How many penguins were observed on each island?\nUse a bar chart to show the number of penguins by island.\n\n\nCode\n# Your code here\n\n\n✏️ Q: Which island had the most penguins observed?\n\n\n\n1.2. Compare penguin counts by sex\nUse a dot plot to compare the number of male and female penguins, add labels to show the data\n\n\nCode\n# Your code here\n\n\n✏️ Q: Are there more male or female penguins in the dataset?\n\n\n\n1.3. Lyme disease cases over time\nChoose four states and plot Lyme case counts from 2010–2023 using a line chart.\n\n\nCode\n# Your code here\n\n\n✏️ Q: Which state shows a rising trend over time?"
  },
  {
    "objectID": "lab/2-lab2.html#part-2-visualizing-distribution-and-relationships-between-two-numerical-values",
    "href": "lab/2-lab2.html#part-2-visualizing-distribution-and-relationships-between-two-numerical-values",
    "title": "Lab 2",
    "section": "Part 2: Visualizing distribution and relationships between two numerical values",
    "text": "Part 2: Visualizing distribution and relationships between two numerical values\n\n2.1. Compare penguin body mass by island\nUse boxplots or violin plots to compare penguin body mass by island. Add individual data points to the plot.\n\n\nCode\n# Your code here\n\n\n✏️ Q: Which island has the heaviest penguins?\n\n\n\n2.2. Distribution of Lyme cases across states in 2020\nUse a histogram or density plot to explore the variation in state-level case counts.\n\n\nCode\n# Your code here\n\n\n✏️ Q: Are most states low-burden or high-burden?\n\n\n\n2.3. Bill dimensions\nCreate a scatterplot of bill length vs. bill depth, colored by species.\n\n\nCode\n# Your code here\n\n\n✏️ Q: Which species tends to have longer bills?\n\n\n\n2.4. Add faceting\nFacet the same scatterplot by island.\n\n\nCode\n# Your code here\n\n\n✏️ Q: Do the relationships differ across islands?"
  },
  {
    "objectID": "lab/2-lab2.html#save-and-push-your-work",
    "href": "lab/2-lab2.html#save-and-push-your-work",
    "title": "Lab 2",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub.\n\n\nCode\ngit add 2-lab2.qmd 2-lab2.html\ngit commit -m \"Complete Lab 2\"\ngit push"
  },
  {
    "objectID": "lab/4-lab4.html",
    "href": "lab/4-lab4.html",
    "title": "Lab 4",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 4-lab4.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/4-lab4.html#before-your-start-the-lab-notebook",
    "href": "lab/4-lab4.html#before-your-start-the-lab-notebook",
    "title": "Lab 4",
    "section": "",
    "text": "Update the header - put your name in the author argument and put today’s date in the date argument.\nClick the “Render” button in RStudio and then open the rendered 4-lab4.html page.\nThen go back and try changing the theme argument in the header to something else - you can see other available themes here. Notice the difference when you render now!"
  },
  {
    "objectID": "lab/4-lab4.html#overview-of-lab4",
    "href": "lab/4-lab4.html#overview-of-lab4",
    "title": "Lab 4",
    "section": "Overview of Lab4",
    "text": "Overview of Lab4\nThere are two parts of this lab notebook. In first part, you will discuss team policies with your teammate and document them. In the second part, you will develop a project plan to guide the development of your final project.\nSkills practiced:\n\nUsing GitHub flow for team collaboration\nDocumenting team policies\nDeveloping a project plan"
  },
  {
    "objectID": "lab/4-lab4.html#part-1-team-policies",
    "href": "lab/4-lab4.html#part-1-team-policies",
    "title": "Lab 4",
    "section": "Part 1: Team Policies",
    "text": "Part 1: Team Policies\n\n1.1. How and when you will meet? Regular meeting time, location, etc.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\n\n\n1.2. How you will communicate outside of meetings? Slack, email, etc.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\n\n\n1.3. How you will collaborate on implementing the project? GitHub, Google Docs, etc.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\n\n\n1.4. How you will review each other’s work? code reviews, feedback sessions, etc.\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\n\n\n1.5. How you will deal with non-performing members?\n\n\n\n\n\n\nYour Answer\n\n\n\nType your response here.\n\n\n\n\n1.6 Start a TODO list\n\n\n\n\n\n\nYour Answer\n\n\n\n\n\n\nItem\nDeadline\nPerson responsible\n\n\n\n\n(e.g.) Set up GitHub\nJune 13, 2025\nSilas\n\n\nadd your items here\nadd your deadlines here\nadd your names here"
  },
  {
    "objectID": "lab/4-lab4.html#part-2-project-plan",
    "href": "lab/4-lab4.html#part-2-project-plan",
    "title": "Lab 4",
    "section": "Part 2: Project plan",
    "text": "Part 2: Project plan\n\n2.1. What is the name of your team? Who are the contributing members?\n\n\n\n\n\n\nYour Answer\n\n\n\nTeam Name: Type your team name here. Contributing Members: Type the names of your team members here.\n\n\n\n\n2.2. Define the topic, goals, and tasks of your project (300 - 400 words)\n\n\n\n\n\n\nYour Answer\n\n\n\nYour answer here\n\n\n\n\n2.3. Describe the data you will use, including:\n\nSource of the data\nHow you will access the data\nHow you will clean the data\n\n\n\n\n\n\n\nYour Answer\n\n\n\nYour answer here\n\n\n\n\n2.4. Include at least 3 sketches of visualization ideas for your project\nFirst sketch:\n\nSecond sketch:\n\nThird sketch:\n\n\n\n2.5. A sketch of your shiny app layout if you choose this option. If you choose the static visualization option, please describe the storytelling flow of how the three data visualizations connect with each other\n\n\n\n\n\n\nYour Answer\n\n\n\nYour answer here\n\n\n\n\n2.6. A timeline of your project, including milestones and deadlines\n\n\n\n\n\n\nYour Answer\n\n\n\n\n\n\nMilestone\nDeadline\nPerson responsible\n\n\n\n\n(e.g.) Data collection\nJune 20, 2025\nSilas\n\n\nadd your milestones here\nadd your deadlines here\nadd your names here\n\n\n\n\n\n\n\n2.7. A feature list, including: must-have, good-to-have, optional\n\n\n\n\n\n\nYour Answer\n\n\n\nMust-have features:\n\nFeature 1\nFeature 2\nFeature 3\nFeature 4\nFeature 5\n…\n\nGood-to-have features:\n\nFeature 1\nFeature 2\nFeature 3\n…\n\nOptional features:\n\nFeature 1\nFeature 2\nFeature 3\n…\n\n\n\n\n\n2.8. A description of team roles and responsibilities\n\n\n\n\n\n\nYour Answer\n\n\n\nYour answer here"
  },
  {
    "objectID": "lab/4-lab4.html#save-and-push-your-work",
    "href": "lab/4-lab4.html#save-and-push-your-work",
    "title": "Lab 4",
    "section": "Save and Push Your Work",
    "text": "Save and Push Your Work\nRemember to save your .qmd and render the HTML output before committing to GitHub.\n\n\nCode\ngit add 4-lab4.qmd 4-lab4.html\ngit commit -m \"Complete Lab 4\"\ngit push"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Grolemund, Garrett. “Hands-On Programming with R” [free online], [buy on amazon]\nPeng, Roger D. “R Programming for Data Science” [online - pay what you want]\n\n\n\n\n\nGrolemund, Garrett and Wickham, Hadley. “R for Data Science” [free online], [buy on amazon]\nPeng, Roger D. “Exploratory Data Analysis with R” [online - pay what you want]\n16 HOWTO’s, by Lingyun Zhang\n\n\n\n\n\nAll cheatsheets\nData wrangling with the dplyr library\nData visualization with the ggplot2 library\nRMarkdown"
  },
  {
    "objectID": "references.html#general-programming-in-r",
    "href": "references.html#general-programming-in-r",
    "title": "References",
    "section": "",
    "text": "Grolemund, Garrett. “Hands-On Programming with R” [free online], [buy on amazon]\nPeng, Roger D. “R Programming for Data Science” [online - pay what you want]"
  },
  {
    "objectID": "references.html#data-analysis-in-r",
    "href": "references.html#data-analysis-in-r",
    "title": "References",
    "section": "",
    "text": "Grolemund, Garrett and Wickham, Hadley. “R for Data Science” [free online], [buy on amazon]\nPeng, Roger D. “Exploratory Data Analysis with R” [online - pay what you want]\n16 HOWTO’s, by Lingyun Zhang"
  },
  {
    "objectID": "references.html#rstudio-cheatsheets",
    "href": "references.html#rstudio-cheatsheets",
    "title": "References",
    "section": "",
    "text": "All cheatsheets\nData wrangling with the dplyr library\nData visualization with the ggplot2 library\nRMarkdown"
  },
  {
    "objectID": "references.html#principles-of-data-visualization",
    "href": "references.html#principles-of-data-visualization",
    "title": "References",
    "section": "Principles of data visualization",
    "text": "Principles of data visualization\n\nHealy, Kieran. “Data Visualization: A practical introduction” [free online], [buy on amazon]\nWilke, Claus O. “Fundamentals of Data Visualization” [free online], [buy on amazon]\nVideo: How Humans See Data, by John Rauser. This is probably the best overviews I’ve seen on how to exploit the psychology of how our brains interpret images to make effective visualizations."
  },
  {
    "objectID": "references.html#choosing-the-right-chart",
    "href": "references.html#choosing-the-right-chart",
    "title": "References",
    "section": "Choosing the right chart",
    "text": "Choosing the right chart\nYou will want to choose different chart types depending on the relationship or message you want to convey. Fortunately, we live in the future and awesome people have created wonderful tools to help you find the most appropriate graph for your data. Take a look through some of these resources - these will come in handy when you start working on your final project:\n\n Stephen Few’s Graph Selection Matrix\nThe Data Visualisation Catalogue\nData-to-Viz\nR Graph Gallery\nVisual Vocabulary\nThe Data Viz Project"
  },
  {
    "objectID": "references.html#making-plots-with-ggplot2",
    "href": "references.html#making-plots-with-ggplot2",
    "title": "References",
    "section": "Making plots with ggplot2",
    "text": "Making plots with ggplot2\n\nThe R Graph Catalog: 124 examples (with code) for making common ggplots.\nThe ggplot2 Extensions gallery: 64 registered libraries that extend the functionality of ggplot2.\nTop 50 ggplot2 visualizations\nR Cookbook for ggplot2\nRStudio ggplot2 Cheatsheet\nTidyverse ggplot2 reference guide\nggThemeAssist: Package for customizing plot themes and layout\n16 HOWTO’s, by Lingyun Zhang - super useful for making specific types of charts"
  },
  {
    "objectID": "references.html#polishing-ggplot2-plots",
    "href": "references.html#polishing-ggplot2-plots",
    "title": "References",
    "section": "Polishing ggplot2 plots",
    "text": "Polishing ggplot2 plots\n\nggplot2: Elegant Graphics for Data Analysis\nFollow good design rules"
  },
  {
    "objectID": "references.html#choosing-colors",
    "href": "references.html#choosing-colors",
    "title": "References",
    "section": "Choosing colors",
    "text": "Choosing colors\n\nColor wheel tool\nggplot2 book chapter 12\nR graph gallery\nCoolors.co - super nice color palette generator"
  },
  {
    "objectID": "references.html#animating-ggplot2-plots",
    "href": "references.html#animating-ggplot2-plots",
    "title": "References",
    "section": "Animating ggplot2 plots",
    "text": "Animating ggplot2 plots\n\nHow to create animations in R with gganimate\nAnimate your ggplots with gganimate\nHow to make a bar chart race"
  },
  {
    "objectID": "references.html#helpful-tutorials",
    "href": "references.html#helpful-tutorials",
    "title": "References",
    "section": "Helpful Tutorials",
    "text": "Helpful Tutorials\n\nRStudio Primers\nTidyverse in R\nTransitioning from Excel to R"
  },
  {
    "objectID": "references.html#inspiration",
    "href": "references.html#inspiration",
    "title": "References",
    "section": "Inspiration",
    "text": "Inspiration\n\nAn Incomplete List of Females in Data Visualization, by Stephanie Evergreen\nThe Links Between Open Science and Star Wars"
  },
  {
    "objectID": "references.html#when-all-else-fails",
    "href": "references.html#when-all-else-fails",
    "title": "References",
    "section": "When all else fails…",
    "text": "When all else fails…\nYou will inevitably run into problems; things won’t work the way you expect, and you’ll get lots of confusing error messages. When this happens, many turn to the following tried and true problem-solving approaches:"
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Software",
    "section": "",
    "text": "You should install and set everything here before the first day of class.\n\n\nSign up for Slack. You should have been sent a link to join in the course intro email. If not, email Professor Hu for an invite link. I recommend using your @gwu.edu email to sign up, but if you use another email for another Slack then use that.\nInstall the Slack app on your phone and Turn notifications on!. I’ll send all course communication via Slack, so please make sure your notifications are on so you don’t miss anything.\nInstall the latest version of R and RStudio:\n\n\nDownload and install R (version 4.4.2 or higher)\nDownload and install RStudio (Desktop version)\n\n\nIf you have a Mac, install XQuartz. This is needed for making some figures and is only for Mac (if you’re on Windows or Linux, skip this step).\nDownload and install Quarto\nSign up for Posit Cloud1 (the free version). It’s basically the same thing as RStudio, but accessible via a web browser. If things aren’t working on your computer, this is a great backup to quickly get back to working in RStudio.\n\nThat’s it - you’re all set for class!",
    "crumbs": [
      "Software"
    ]
  },
  {
    "objectID": "software.html#footnotes",
    "href": "software.html#footnotes",
    "title": "Software",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n“Posit” is the company that makes “RStudio”, the software we’ll use to work with R.↩︎",
    "crumbs": [
      "Software"
    ]
  }
]