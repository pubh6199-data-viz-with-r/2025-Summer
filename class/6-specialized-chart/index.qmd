---
title: "Lab 3. Specialized Chart Types"
subtitle: "PUBH 6199: Visualizing Data with R, Summer 2025"
date: June 5, 2025
author: Xindi (Cindy) Hu, ScD
format: 
  revealjs:
    pdf: true
    slide-number: true
    chalkboard: 
      buttons: false
    preview-links: auto
    logo: images/logo-square.png
    css: style.css
    footer: 'PUBH 6199: Visualizing Data with R'
resources:
  - images/
---

```{r setup}
library(tidyverse)
```

## Outline for today {.smaller}

- **Introducing the datasets**

- Review faceted plots

- Introduce radar charts, Sankey diagrams, and parallel coordinates plot

- Dos and Don'ts when designing visualizations


## Forest Fires Dataset {.smaller}

:::{.column width="60%"}

- **Source**: UCI Machine Learning Repository  
  [https://archive.ics.uci.edu/ml/datasets/forest+fires](https://archive.ics.uci.edu/ml/datasets/forest+fires)

- **Context**: Collected from the Montesinho Natural Park in Portugal, this dataset captures weather conditions and fire activity over 200+ days.

- **Variables**:
  - `month`, `day`: Temporal context
  - `temp`, `RH`, `wind`, `rain`: Daily weather
  - `FFMC`, `DMC`, `DC`, `ISI`: Fire weather indices
  - `area`: Burned area in hectares
  
:::

::: {.column width="40%"}
![](images/fwi_structure.gif){width=100%}

::: citation
[Canadian Forest Fire Weather Index (FWI) System](https://cwfis.cfs.nrcan.gc.ca/background/summary/fwi)
:::

:::

## Forest Fires Dataset {.smaller}

```{r}
#| echo: TRUE
library(tidyverse)
forest <- read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/forest-fires/forestfires.csv")
glimpse(forest)
```

## Adult Income Dataset {.smaller}

- **Source**: UCI Machine Learning Repository  
  [https://archive.ics.uci.edu/ml/datasets/adult](https://archive.ics.uci.edu/ml/datasets/adult)

- **Context**: Extracted from 1994 U.S. Census data to predict whether an individual's income exceeds \$50K/year.

- **Variables**:
  - Demographics: `age`, `sex`, `race`, `education`, `marital-status`
  - Employment: `workclass`, `occupation`, `hours-per-week`
  - Target: `income` (>50K or ≤50K)

- **Use in Class**:
  - *Sankey diagram*: Show flows like `education → occupation → income`
  - *Parallel coordinates*: Visualize patterns across age, hours, and income class

## Adult Income Dataset {.smaller}

```{r}
#| echo: TRUE
adult <- read_csv("https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data",
                  col_names = c("age", "workclass", "fnlwgt", "education", "education_num",
                                "marital_status", "occupation", "relationship", "race", "sex",
                                "capital_gain", "capital_loss", "hours_per_week", "native_country", "income"))
glimpse(adult)
```

## Outline for today {.smaller}

- Introducing the datasets

- **Review faceted plots**

- Introduce radar charts, Sankey diagrams, and parallel coordinates plot

- Dos and Don'ts when designing visualizations

## Review: Faceted Plots {.smaller}

>In previous lecture/labs, we learned about faceted plots, which allow us to create multiple subplots based on a categorical variable. This is particularly useful for comparing distributions or trends across different groups.

::: {.column width="50%"}
```{r}
#| echo: TRUE
#| eval: FALSE
# Faceted scatter plot: Temp vs Wind, faceted by month
ggplot(forest, aes(x = temp, y = wind)) +
  geom_point(alpha = 0.6, color = "firebrick") +
  facet_wrap(~ month, ncol = 4) +
  labs(title = "Temperature vs Wind Speed by Month",
       x = "Temperature (°C)",
       y = "Wind Speed (km/h)") +
  theme_minimal()
```
:::

::: {.column width="50%"}
```{r fig.width=4, fig.height=4}
#| echo: FALSE
# Faceted scatter plot: Temp vs Wind, faceted by month
ggplot(forest, aes(x = temp, y = wind)) +
  geom_point(alpha = 0.6, color = "firebrick") +
  facet_wrap(~ month, ncol = 4) +
  labs(title = "Temperature vs Wind Speed by Month",
       x = "Temperature (°C)",
       y = "Wind Speed (km/h)") +
  theme_minimal()
```
:::


## Review: Faceted Plots {.smaller}

>Optional: convert month to ordered factor for nicer facet layout

::: {.column width="50%"}

```{r}
#| echo: TRUE
#| eval: FALSE
#| code-line-numbers: "1-3"
forest <- forest %>%
  mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may", "jun",
                                          "jul", "aug", "sep", "oct", "nov", "dec")))

ggplot(forest, aes(x = temp, y = wind)) +
  geom_point(alpha = 0.6, color = "firebrick") +
  facet_wrap(~ month, ncol = 4) +
  labs(title = "Temperature vs Wind Speed by Month",
       x = "Temperature (°C)",
       y = "Wind Speed (km/h)") +
  theme_minimal()

```

:::

::: {.column width="50%"}

```{r fig.width=4, fig.height=4}
#| echo: FALSE
#| code-line-numbers: "1-3"
forest <- forest %>%
  mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may", "jun",
                                          "jul", "aug", "sep", "oct", "nov", "dec")))

ggplot(forest, aes(x = temp, y = wind)) +
  geom_point(alpha = 0.6, color = "firebrick") +
  facet_wrap(~ month, ncol = 4) +
  labs(title = "Temperature vs Wind Speed by Month",
       x = "Temperature (°C)",
       y = "Wind Speed (km/h)") +
  theme_minimal()

```

:::

## Facet plots by combining two variables {.smaller-title}

::: .smaller
Does dry air (low RH) change the relationship between wind and temperature across seasons? We use `facet_grid()` to create a grid of plots, where each row represents a season and each column represents a relative humidity level.
:::

::: {.column width="50%" style="font-size: 0.8em;"}

```{r}
#| echo: TRUE
#| eval: FALSE
#| code-line-numbers: "19"
forest <- forest %>%
  mutate(
    month = tolower(month),
    season = case_when(
      month %in% c("dec", "jan", "feb") ~ "Winter",
      month %in% c("mar", "apr", "may") ~ "Spring",
      month %in% c("jun", "jul", "aug") ~ "Summer",
      month %in% c("sep", "oct", "nov") ~ "Fall",
      TRUE ~ "Unknown"
    ),
    RH_level = if_else(RH >= median(RH, na.rm = TRUE), "High RH", "Low RH"),
    season = factor(season, levels = c("Spring", "Summer", "Fall", "Winter")),
    RH_level = factor(RH_level, levels = c("Low RH", "High RH"))
  )

# Faceted scatter plot: temp vs wind by season and RH level
ggplot(forest, aes(x = temp, y = wind)) +
  geom_point(alpha = 0.6, color = "darkorange") +
  facet_grid(rows = vars(season), cols = vars(RH_level)) +
  labs(
    title = "Temperature vs Wind Speed\nby Season and Relative Humidity Level",
    x = "Temperature (°C)",
    y = "Wind Speed (km/h)"
  ) +
  theme_minimal(base_size = 11)
```


:::

::: {.column width="50%"}

```{r fig.width=5, fig.height=4}
#| echo: FALSE
forest <- forest %>%
  mutate(
    month = tolower(month),
    season = case_when(
      month %in% c("dec", "jan", "feb") ~ "Winter",
      month %in% c("mar", "apr", "may") ~ "Spring",
      month %in% c("jun", "jul", "aug") ~ "Summer",
      month %in% c("sep", "oct", "nov") ~ "Fall",
      TRUE ~ "Unknown"
    ),
    RH_level = if_else(RH >= median(RH, na.rm = TRUE), "High RH", "Low RH"),
    season = factor(season, levels = c("Spring", "Summer", "Fall", "Winter")),
    RH_level = factor(RH_level, levels = c("Low RH", "High RH"))
  )

# Faceted scatter plot: temp vs wind by season and RH level
ggplot(forest, aes(x = temp, y = wind)) +
  geom_point(alpha = 0.6, color = "darkorange") +
  facet_grid(rows = vars(season), cols = vars(RH_level)) +
  labs(
    title = "Temperature vs Wind Speed\nby Season and Relative Humidity Level",
    x = "Temperature (°C)",
    y = "Wind Speed (km/h)"
  ) +
  theme_minimal(base_size = 11)
```

:::

## Use fixed vs free scales {.smaller-title}

::: .smaller
Using fixed scales can help in comparing values across different facets, while free scales allow each facet to have its own scale, which can be useful when the data varies widely between groups.
:::

::: {.column width="50%"}

```{r}
#| echo: TRUE
#| eval: FALSE
#| code-line-numbers: "7"
forest <- forest %>%
  mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may", "jun",
                                          "jul", "aug", "sep", "oct", "nov", "dec")))

ggplot(forest, aes(x = temp, y = wind)) +
  geom_point(alpha = 0.6, color = "firebrick") +
  facet_wrap(~ month, ncol = 4, scales = "free_y") +
  labs(title = "Temperature vs Wind Speed by Month",
       x = "Temperature (°C)",
       y = "Wind Speed (km/h)") +
  theme_minimal()
```
:::


::: {.column width="50%"}

```{r fig.width=5, fig.height=4}
#| echo: FALSE
forest <- forest %>%
  mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may", "jun",
                                          "jul", "aug", "sep", "oct", "nov", "dec")))

ggplot(forest, aes(x = temp, y = wind)) +
  geom_point(alpha = 0.6, color = "firebrick") +
  facet_wrap(~ month, ncol = 4, scales = "free_y") +
  labs(title = "Temperature vs Wind Speed by Month",
       x = "Temperature (°C)",
       y = "Wind Speed (km/h)") +
  theme_minimal()
```

:::

##  {background="#033C5A"}
<br>
<br>
<br>

<div class="page-center vertical-center">
<p class="custom-subtitle bottombr">{{<fa bicycle title="let's get on the bike" >}} Your turn, get on the bike! </p>
<p class="caption-text">*~ Head over to lab3 notebook! ~*</p>
</div>

##  End-of-Class Survey {background="#033C5A"}
<br>
<br>
<br>

<div class="page-center vertical-center">
<p class="custom-subtitle bottombr">{{<fa pen-to-square title="edit or fill out survey">}} Fill out the end-of-class survey </p>
<p class="caption-text">*~ This is the end of Lab 3 ~*</p>
</div>

```{r}
countdown::countdown(
  minutes = 10,
  # left = 0, right = 0,
  # Fanfare when it's over
  play_sound = TRUE,
  color_border              = "#FFFFFF",
  color_text                = "#7aa81e",
  color_running_background  = "#7aa81e",
  color_running_text        = "#FFFFFF",
  color_finished_background = "#ffa07a",
  color_finished_text       = "#FFFFFF",
  font_size = "2em",
  )
```
