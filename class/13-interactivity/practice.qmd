---
title: "Interactivity"
subtitle: "EMSE 4572 / 6572: Exploratory Data Analysis"
format: html
---

```{r}
#| label: setup
#| include: false

knitr::opts_chunk$set(
    warning = FALSE,
    message = FALSE,
    fig.path = "figs/",
    fig.width = 7.252,
    fig.height = 4,
    comment = "#>",
    fig.retina = 3
)

# Use these commands to install them if you have not already
# install.packages('plotly')
# install.packages('htmlwidgets')
# install.packages('htmltools')
# install.packages('leaflet')
# install.packages('DT')
# install.packages('reactable')
# install.packages('reactablefmtr')
# install.packages('sparkline')
# install.packages('shiny')
# install.packages('shinyWidgets')
# install.packages('rsconnect')

# Should be installed from previous classes:
library(knitr)
library(tidyverse)
library(here)
library(fontawesome)
library(countdown)
library(metathis)
library(viridis)
library(cowplot)
library(rnaturalearth)
library(rnaturalearthhires)
library(rnaturalearthdata)

# New
library(leaflet)
library(plotly)
library(DT)
library(reactable)
library(reactablefmtr)
library(sparkline)

# Read in data sets
gapminder <- read_csv(here::here("data", "gapminder.csv"))
internet_users <- read_csv(here::here('data', 'internet_users_country.csv'))
internet_regions <- read_csv(here('data', 'internet_users_region.csv'))
```

# 1. Interactive Charts

1. Open your reflection from this past week (or a previous week)
2. With a classmate, take turns sharing your interactive chart, or go back to a chart we made in a previous class and make it interactive using either `ggplotly()` or `plot_ly()`
3. If you have an example you want to share, post your code in Slack



# 2. Interactive Tables

Use `reactable()` to make the following interactive table

Read [this example](https://kcuilla.github.io/reactablefmtr/articles/embed_img.html) and use the `gapminder_flags` data frame

```{r}
gapminder_flags <- gapminder %>%
  mutate(flag = paste(
    "https://flagshub.com/images/flag-of-",
    str_to_lower(country), ".png", sep = "")) %>%
  select(flag, country, everything())
```

```{r}
#| label: gapminder_reactable_flags
#| echo: false

gapminder_flags %>%
  # Fill in the rest here
```
